import {
  __commonJS,
  __esm,
  __export,
  __toCommonJS,
  init_define_process_env
} from "./chunk-BBLCKECE.js";

// browser-external:fs
var fs_exports = {};
__export(fs_exports, {
  default: () => fs_default
});
var fs_default;
var init_fs = __esm({
  "browser-external:fs"() {
    init_define_process_env();
    fs_default = new Proxy({}, {
      get() {
        throw new Error('Module "fs" has been externalized for browser compatibility and cannot be accessed in client code.');
      }
    });
  }
});

// browser-external:path
var path_exports = {};
__export(path_exports, {
  default: () => path_default
});
var path_default;
var init_path = __esm({
  "browser-external:path"() {
    init_define_process_env();
    path_default = new Proxy({}, {
      get() {
        throw new Error('Module "path" has been externalized for browser compatibility and cannot be accessed in client code.');
      }
    });
  }
});

// node_modules/@shutter-network/shutter-crypto/dist/shutter-crypto.js
var require_shutter_crypto = __commonJS({
  "node_modules/@shutter-network/shutter-crypto/dist/shutter-crypto.js"(exports, module) {
    init_define_process_env();
    !function(e, t) {
      typeof exports == "object" && typeof module == "object" ? module.exports = t() : typeof define == "function" && define.amd ? define([], t) : typeof exports == "object" ? exports.shutterCrypto = t() : e.shutterCrypto = t();
    }(exports, () => (() => {
      var e = { 910: (e2, t2, s2) => {
        e2 = s2.nmd(e2), (() => {
          if (s2.g !== void 0)
            ;
          else if (typeof window != "undefined")
            window.global = window;
          else {
            if (typeof self == "undefined")
              throw new Error("cannot export Go (neither global, window nor self is defined)");
            self.global = self;
          }
          s2.g.require || (s2.g.require = s2(277)), !s2.g.fs && s2.g.require && (s2.g.fs = s2(507));
          const t3 = () => {
            const e3 = new Error("not implemented");
            return e3.code = "ENOSYS", e3;
          };
          if (!s2.g.fs) {
            let e3 = "";
            s2.g.fs = { constants: { O_WRONLY: -1, O_RDWR: -1, O_CREAT: -1, O_TRUNC: -1, O_APPEND: -1, O_EXCL: -1 }, writeSync(t4, s3) {
              e3 += r.decode(s3);
              const n3 = e3.lastIndexOf("\n");
              return n3 != -1 && (console.log(e3.substr(0, n3)), e3 = e3.substr(n3 + 1)), s3.length;
            }, write(e4, s3, n3, r2, o2, i) {
              n3 === 0 && r2 === s3.length && o2 === null ? i(null, this.writeSync(e4, s3)) : i(t3());
            }, chmod(e4, s3, n3) {
              n3(t3());
            }, chown(e4, s3, n3, r2) {
              r2(t3());
            }, close(e4, s3) {
              s3(t3());
            }, fchmod(e4, s3, n3) {
              n3(t3());
            }, fchown(e4, s3, n3, r2) {
              r2(t3());
            }, fstat(e4, s3) {
              s3(t3());
            }, fsync(e4, t4) {
              t4(null);
            }, ftruncate(e4, s3, n3) {
              n3(t3());
            }, lchown(e4, s3, n3, r2) {
              r2(t3());
            }, link(e4, s3, n3) {
              n3(t3());
            }, lstat(e4, s3) {
              s3(t3());
            }, mkdir(e4, s3, n3) {
              n3(t3());
            }, open(e4, s3, n3, r2) {
              r2(t3());
            }, read(e4, s3, n3, r2, o2, i) {
              i(t3());
            }, readdir(e4, s3) {
              s3(t3());
            }, readlink(e4, s3) {
              s3(t3());
            }, rename(e4, s3, n3) {
              n3(t3());
            }, rmdir(e4, s3) {
              s3(t3());
            }, stat(e4, s3) {
              s3(t3());
            }, symlink(e4, s3, n3) {
              n3(t3());
            }, truncate(e4, s3, n3) {
              n3(t3());
            }, unlink(e4, s3) {
              s3(t3());
            }, utimes(e4, s3, n3, r2) {
              r2(t3());
            } };
          }
          if (s2.g.process || (s2.g.process = { getuid: () => -1, getgid: () => -1, geteuid: () => -1, getegid: () => -1, getgroups() {
            throw t3();
          }, pid: -1, ppid: -1, umask() {
            throw t3();
          }, cwd() {
            throw t3();
          }, chdir() {
            throw t3();
          } }), !s2.g.crypto) {
            const e3 = s2(906);
            s2.g.crypto = { getRandomValues(t4) {
              e3.randomFillSync(t4);
            } };
          }
          s2.g.performance || (s2.g.performance = { now() {
            const [e3, t4] = process.hrtime();
            return 1e3 * e3 + t4 / 1e6;
          } }), s2.g.TextEncoder || (s2.g.TextEncoder = s2(10).TextEncoder), s2.g.TextDecoder || (s2.g.TextDecoder = s2(10).TextDecoder);
          const n2 = new TextEncoder("utf-8"), r = new TextDecoder("utf-8");
          var o = [];
          if (s2.g.Go = class {
            constructor() {
              this._callbackTimeouts = /* @__PURE__ */ new Map(), this._nextCallbackTimeoutID = 1;
              const e3 = () => new DataView(this._inst.exports.memory.buffer), t4 = (t5, s3) => {
                e3().setUint32(t5 + 0, s3, true), e3().setUint32(t5 + 4, Math.floor(s3 / 4294967296), true);
              }, i = (t5) => {
                const s3 = e3().getFloat64(t5, true);
                if (s3 === 0)
                  return;
                if (!isNaN(s3))
                  return s3;
                const n3 = e3().getUint32(t5, true);
                return this._values[n3];
              }, a = (t5, s3) => {
                const n3 = 2146959360;
                if (typeof s3 == "number")
                  return isNaN(s3) ? (e3().setUint32(t5 + 4, n3, true), void e3().setUint32(t5, 0, true)) : s3 === 0 ? (e3().setUint32(t5 + 4, n3, true), void e3().setUint32(t5, 1, true)) : void e3().setFloat64(t5, s3, true);
                switch (s3) {
                  case void 0:
                    return void e3().setFloat64(t5, 0, true);
                  case null:
                    return e3().setUint32(t5 + 4, n3, true), void e3().setUint32(t5, 2, true);
                  case true:
                    return e3().setUint32(t5 + 4, n3, true), void e3().setUint32(t5, 3, true);
                  case false:
                    return e3().setUint32(t5 + 4, n3, true), void e3().setUint32(t5, 4, true);
                }
                let r2 = this._ids.get(s3);
                r2 === void 0 && (r2 = this._idPool.pop(), r2 === void 0 && (r2 = this._values.length), this._values[r2] = s3, this._goRefCounts[r2] = 0, this._ids.set(s3, r2)), this._goRefCounts[r2]++;
                let o2 = 1;
                switch (typeof s3) {
                  case "string":
                    o2 = 2;
                    break;
                  case "symbol":
                    o2 = 3;
                    break;
                  case "function":
                    o2 = 4;
                }
                e3().setUint32(t5 + 4, n3 | o2, true), e3().setUint32(t5, r2, true);
              }, c = (e4, t5, s3) => new Uint8Array(this._inst.exports.memory.buffer, e4, t5), l = (e4, t5, s3) => {
                const n3 = new Array(t5);
                for (let s4 = 0; s4 < t5; s4++)
                  n3[s4] = i(e4 + 8 * s4);
                return n3;
              }, d = (e4, t5) => r.decode(new DataView(this._inst.exports.memory.buffer, e4, t5)), u = Date.now() - performance.now();
              this.importObject = { wasi_snapshot_preview1: { fd_write: function(t5, s3, n3, i2) {
                let a2 = 0;
                if (t5 == 1)
                  for (let t6 = 0; t6 < n3; t6++) {
                    let n4 = s3 + 8 * t6, i3 = e3().getUint32(n4 + 0, true), c2 = e3().getUint32(n4 + 4, true);
                    a2 += c2;
                    for (let t7 = 0; t7 < c2; t7++) {
                      let s4 = e3().getUint8(i3 + t7);
                      if (s4 == 13)
                        ;
                      else if (s4 == 10) {
                        let e4 = r.decode(new Uint8Array(o));
                        o = [], console.log(e4);
                      } else
                        o.push(s4);
                    }
                  }
                else
                  console.error("invalid file descriptor:", t5);
                return e3().setUint32(i2, a2, true), 0;
              }, fd_close: () => 0, fd_fdstat_get: () => 0, fd_seek: () => 0, proc_exit: (e4) => {
                if (!s2.g.process)
                  throw "trying to exit with code " + e4;
                process.exit(e4);
              }, random_get: (e4, t5) => (crypto.getRandomValues(c(e4, t5)), 0) }, env: { "runtime.ticks": () => u + performance.now(), "runtime.sleepTicks": (e4) => {
                setTimeout(this._inst.exports.go_scheduler, e4);
              }, "syscall/js.finalizeRef": (e4) => {
                console.error("syscall/js.finalizeRef not implemented");
              }, "syscall/js.stringVal": (e4, t5, s3) => {
                const n3 = d(t5, s3);
                a(e4, n3);
              }, "syscall/js.valueGet": (e4, t5, s3, n3) => {
                let r2 = d(s3, n3), o2 = i(t5), c2 = Reflect.get(o2, r2);
                a(e4, c2);
              }, "syscall/js.valueSet": (e4, t5, s3, n3) => {
                const r2 = i(e4), o2 = d(t5, s3), a2 = i(n3);
                Reflect.set(r2, o2, a2);
              }, "syscall/js.valueDelete": (e4, t5, s3) => {
                const n3 = i(e4), r2 = d(t5, s3);
                Reflect.deleteProperty(n3, r2);
              }, "syscall/js.valueIndex": (e4, t5, s3) => {
                a(e4, Reflect.get(i(t5), s3));
              }, "syscall/js.valueSetIndex": (e4, t5, s3) => {
                Reflect.set(i(e4), t5, i(s3));
              }, "syscall/js.valueCall": (t5, s3, n3, r2, o2, c2, u2) => {
                const f = i(s3), p = d(n3, r2), y = l(o2, c2);
                try {
                  const s4 = Reflect.get(f, p);
                  a(t5, Reflect.apply(s4, f, y)), e3().setUint8(t5 + 8, 1);
                } catch (s4) {
                  a(t5, s4), e3().setUint8(t5 + 8, 0);
                }
              }, "syscall/js.valueInvoke": (t5, s3, n3, r2, o2) => {
                try {
                  const o3 = i(s3), c2 = l(n3, r2);
                  a(t5, Reflect.apply(o3, void 0, c2)), e3().setUint8(t5 + 8, 1);
                } catch (s4) {
                  a(t5, s4), e3().setUint8(t5 + 8, 0);
                }
              }, "syscall/js.valueNew": (t5, s3, n3, r2, o2) => {
                const c2 = i(s3), d2 = l(n3, r2);
                try {
                  a(t5, Reflect.construct(c2, d2)), e3().setUint8(t5 + 8, 1);
                } catch (s4) {
                  a(t5, s4), e3().setUint8(t5 + 8, 0);
                }
              }, "syscall/js.valueLength": (e4) => i(e4).length, "syscall/js.valuePrepareString": (e4, s3) => {
                const r2 = String(i(s3)), o2 = n2.encode(r2);
                a(e4, o2), t4(e4 + 8, o2.length);
              }, "syscall/js.valueLoadString": (e4, t5, s3, n3) => {
                const r2 = i(e4);
                c(t5, s3).set(r2);
              }, "syscall/js.valueInstanceOf": (e4, t5) => i(e4) instanceof i(t5), "syscall/js.copyBytesToGo": (s3, n3, r2, o2, a2) => {
                let l2 = s3, d2 = s3 + 4;
                const u2 = c(n3, r2), f = i(a2);
                if (!(f instanceof Uint8Array || f instanceof Uint8ClampedArray))
                  return void e3().setUint8(d2, 0);
                const p = f.subarray(0, u2.length);
                u2.set(p), t4(l2, p.length), e3().setUint8(d2, 1);
              }, "syscall/js.copyBytesToJS": (s3, n3, r2, o2, a2) => {
                let l2 = s3, d2 = s3 + 4;
                const u2 = i(n3), f = c(r2, o2);
                if (!(u2 instanceof Uint8Array || u2 instanceof Uint8ClampedArray))
                  return void e3().setUint8(d2, 0);
                const p = f.subarray(0, u2.length);
                u2.set(p), t4(l2, p.length), e3().setUint8(d2, 1);
              } } };
            }
            async run(e3) {
              for (this._inst = e3, this._values = [NaN, 0, null, true, false, s2.g, this], this._goRefCounts = [], this._ids = /* @__PURE__ */ new Map(), this._idPool = [], this.exited = false, new DataView(this._inst.exports.memory.buffer); ; ) {
                const e4 = new Promise((e5) => {
                  this._resolveCallbackPromise = () => {
                    if (this.exited)
                      throw new Error("bad callback: Go program has already exited");
                    setTimeout(e5, 0);
                  };
                });
                if (this._inst.exports._start(), this.exited)
                  break;
                await e4;
              }
            }
            _resume() {
              if (this.exited)
                throw new Error("Go program has already exited");
              this._inst.exports.resume(), this.exited && this._resolveExitPromise();
            }
            _makeFuncWrapper(e3) {
              const t4 = this;
              return function() {
                const s3 = { id: e3, this: this, args: arguments };
                return t4._pendingEvent = s3, t4._resume(), s3.result;
              };
            }
          }, s2.g.require && s2.g.require.main === e2 && s2.g.process && s2.g.process.versions && !s2.g.process.versions.electron) {
            process.argv.length != 3 && (console.error("usage: go_js_wasm_exec [wasm binary] [arguments]"), process.exit(1));
            const e3 = new Go();
            WebAssembly.instantiate(fs.readFileSync(process.argv[2]), e3.importObject).then((t4) => e3.run(t4.instance)).catch((e4) => {
              console.error(e4), process.exit(1);
            });
          }
        })();
      }, 277: (e2) => {
        function t2(e3) {
          var t3 = new Error("Cannot find module '" + e3 + "'");
          throw t3.code = "MODULE_NOT_FOUND", t3;
        }
        t2.keys = () => [], t2.resolve = t2, t2.id = 277, e2.exports = t2;
      }, 818: (e2, t2) => {
        "use strict";
        var s2 = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(e3) {
          return typeof e3;
        } : function(e3) {
          return e3 && typeof Symbol == "function" && e3.constructor === Symbol && e3 !== Symbol.prototype ? "symbol" : typeof e3;
        }, n2 = typeof window != "undefined" && window.document !== void 0, r = typeof process != "undefined" && process.versions != null && process.versions.node != null;
        (typeof self == "undefined" ? "undefined" : s2(self)) === "object" && self.constructor && self.constructor.name, typeof window != "undefined" && window.name === "nodejs" || typeof navigator != "undefined" && (navigator.userAgent.includes("Node.js") || navigator.userAgent.includes("jsdom")), typeof Deno != "undefined" && Deno.core;
        t2.jU = n2, t2.UG = r;
      }, 906: () => {
      }, 507: () => {
      }, 10: () => {
      } }, t = {};
      function s(n2) {
        var r = t[n2];
        if (r !== void 0)
          return r.exports;
        var o = t[n2] = { id: n2, loaded: false, exports: {} };
        return e[n2](o, o.exports, s), o.loaded = true, o.exports;
      }
      s.n = (e2) => {
        var t2 = e2 && e2.__esModule ? () => e2.default : () => e2;
        return s.d(t2, { a: t2 }), t2;
      }, s.d = (e2, t2) => {
        for (var n2 in t2)
          s.o(t2, n2) && !s.o(e2, n2) && Object.defineProperty(e2, n2, { enumerable: true, get: t2[n2] });
      }, s.g = function() {
        if (typeof globalThis == "object")
          return globalThis;
        try {
          return this || new Function("return this")();
        } catch (e2) {
          if (typeof window == "object")
            return window;
        }
      }(), s.o = (e2, t2) => Object.prototype.hasOwnProperty.call(e2, t2), s.r = (e2) => {
        typeof Symbol != "undefined" && Symbol.toStringTag && Object.defineProperty(e2, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(e2, "__esModule", { value: true });
      }, s.nmd = (e2) => (e2.paths = [], e2.children || (e2.children = []), e2);
      var n = {};
      return (() => {
        "use strict";
        s.r(n), s.d(n, { decrypt: () => d, encrypt: () => l, init: () => o, verifyDecryptionKey: () => u }), s(910);
        var e2 = s(818);
        const t2 = s.g || window || self;
        t2.__wasm_bridge__ === void 0 && (t2.__wasm_bridge__ = {});
        const r = new Promise((e3) => {
          t2.__wasm_bridge__._initialized = e3;
        });
        async function o(t3) {
          let s2;
          const n2 = new Go();
          if (e2.jU)
            if ("instantiateStreaming" in WebAssembly)
              s2 = (await WebAssembly.instantiateStreaming(fetch(t3), n2.importObject)).instance, n2.run(s2);
            else {
              const e3 = await fetch(t3), o2 = await e3.arrayBuffer();
              s2 = WebAssembly.instantiate(o2, n2.importObject).instance, n2.run(s2), await r;
            }
          else {
            if (!e2.UG)
              throw "Neither Browser nor Node; not supported.";
            {
              const e3 = (init_fs(), __toCommonJS(fs_exports)), o2 = (init_path(), __toCommonJS(path_exports));
              t3 === void 0 && (t3 = o2.join(__dirname, "shutter-crypto.wasm")), s2 = (await WebAssembly.instantiate(e3.readFileSync(t3), n2.importObject)).instance, n2.run(s2), await r;
            }
          }
        }
        function i() {
          if (t2.__wasm_bridge__.encrypt === void 0)
            throw "You need to consume the 'shutterCrypto.init()' promise before using the module functions.";
        }
        function a(e3) {
          if (e3.startsWith("Error:"))
            throw e3;
        }
        function c(e3) {
          e3.startsWith("0x") && (e3 = e3.slice(2)), e3.length % 2 != 0 && (e3 = "0" + e3);
          let t3 = [];
          for (let s2 = 0; s2 < e3.length; s2 += 2)
            t3.push(parseInt(e3.substring(s2, s2 + 2), 16));
          return Uint8Array.from(t3);
        }
        async function l(e3, s2, n2, r2) {
          i();
          const o2 = await t2.__wasm_bridge__.encrypt(e3, s2, n2, r2);
          return a(o2), c(o2);
        }
        async function d(e3, s2) {
          i();
          const n2 = await t2.__wasm_bridge__.decrypt(e3, s2);
          return a(n2), c(n2);
        }
        async function u(e3, s2, n2) {
          i();
          const r2 = await t2.__wasm_bridge__.verifyDecryptionKey(e3, s2, n2);
          return a(r2), r2;
        }
      })(), n;
    })());
  }
});

// dep:@shutter-network_shutter-crypto
init_define_process_env();
var shutter_network_shutter_crypto_default = require_shutter_crypto();
export {
  shutter_network_shutter_crypto_default as default
};
//# sourceMappingURL=@shutter-network_shutter-crypto.js.map
