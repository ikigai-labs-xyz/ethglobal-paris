{
  "version": 3,
  "sources": ["dep:@snapshot-labs_lock_connectors_gnosis", "../../@snapshot-labs/lock/connectors/gnosis.ts"],
  "sourcesContent": ["import d from \"./node_modules/@snapshot-labs/lock/connectors/gnosis.ts\";export default d;", "import LockConnector from '../src/connector';\n\nexport default class Connector extends LockConnector {\n  async connect() {\n    let provider;\n    try {\n      if (window?.parent === window) {\n        return;\n      }\n\n      let SafeAppsSDK = await import('@gnosis.pm/safe-apps-sdk'!);\n      if (SafeAppsSDK?.default) SafeAppsSDK = SafeAppsSDK.default;\n      if (SafeAppsSDK?.default) SafeAppsSDK = SafeAppsSDK.default;\n\n      const sdk = new SafeAppsSDK();\n      const safe = await sdk.safe.getInfo();\n\n      let SafeAppProvider = await import('@gnosis.pm/safe-apps-provider'!);\n      if (SafeAppProvider?.default) SafeAppProvider = SafeAppProvider.default;\n      if (SafeAppProvider?.default) SafeAppProvider = SafeAppProvider.default;\n      if (SafeAppProvider?.SafeAppProvider) SafeAppProvider = SafeAppProvider.SafeAppProvider;\n\n      provider = new SafeAppProvider(safe, sdk);\n    } catch (e) {\n      console.error(e);\n    }\n    provider.connectorName = 'gnosis';\n    return provider;\n  }\n}\n"],
  "mappings": ";;;;;;;;AAAA;;;ACAA;AAEA,+BAAuC,UAAc;AAAA,QAC7C,UAAU;AACd,QAAI;AACJ,QAAI;AACF,UAAI,kCAAQ,YAAW,QAAQ;AAC7B;AAAA,MACF;AAEA,UAAI,cAAc,MAAM,OAAO;AAC/B,UAAI,2CAAa;AAAS,sBAAc,YAAY;AACpD,UAAI,2CAAa;AAAS,sBAAc,YAAY;AAEpD,YAAM,MAAM,IAAI,YAAY;AAC5B,YAAM,OAAO,MAAM,IAAI,KAAK,QAAQ;AAEpC,UAAI,kBAAkB,MAAM,OAAO;AACnC,UAAI,mDAAiB;AAAS,0BAAkB,gBAAgB;AAChE,UAAI,mDAAiB;AAAS,0BAAkB,gBAAgB;AAChE,UAAI,mDAAiB;AAAiB,0BAAkB,gBAAgB;AAExE,iBAAW,IAAI,gBAAgB,MAAM,GAAG;AAAA,IAC1C,SAAS,GAAP;AACA,cAAQ,MAAM,CAAC;AAAA,IACjB;AACA,aAAS,gBAAgB;AACzB,WAAO;AAAA,EACT;AACF;;;AD7BwE,IAAO,+CAAQ;",
  "names": []
}
