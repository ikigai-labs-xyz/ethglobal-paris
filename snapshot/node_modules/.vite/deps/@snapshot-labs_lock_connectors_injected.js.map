{
  "version": 3,
  "sources": ["dep:@snapshot-labs_lock_connectors_injected", "../../@snapshot-labs/lock/connectors/injected.ts"],
  "sourcesContent": ["import d from \"./node_modules/@snapshot-labs/lock/connectors/injected.ts\";export default d;", "import LockConnector from '../src/connector';\n\nexport default class Connector extends LockConnector {\n  async connect() {\n    let provider;\n    if (window['ethereum']) {\n      provider = window['ethereum'];\n      try {\n        await window['ethereum'].request({ method: 'eth_requestAccounts' })\n      } catch (e) {\n        console.error(e);\n        if (e.code === 4001) return;\n      }\n    } else if (window['web3']) {\n      provider = window['web3'].currentProvider;\n    }\n    return provider;\n  }\n\n  async isLoggedIn() {\n    if (!window['ethereum']) return false;\n    if (window['ethereum'].selectedAddress) return true;\n    await new Promise((r) => setTimeout(r, 400));\n    return !!window['ethereum'].selectedAddress;\n  }\n}\n"],
  "mappings": ";;;;;;;;AAAA;;;ACAA;AAEA,+BAAuC,UAAc;AAAA,QAC7C,UAAU;AACd,QAAI;AACJ,QAAI,OAAO,aAAa;AACtB,iBAAW,OAAO;AAClB,UAAI;AACF,cAAM,OAAO,YAAY,QAAQ,EAAE,QAAQ,sBAAsB,CAAC;AAAA,MACpE,SAAS,GAAP;AACA,gBAAQ,MAAM,CAAC;AACf,YAAI,EAAE,SAAS;AAAM;AAAA,MACvB;AAAA,IACF,WAAW,OAAO,SAAS;AACzB,iBAAW,OAAO,QAAQ;AAAA,IAC5B;AACA,WAAO;AAAA,EACT;AAAA,QAEM,aAAa;AACjB,QAAI,CAAC,OAAO;AAAa,aAAO;AAChC,QAAI,OAAO,YAAY;AAAiB,aAAO;AAC/C,UAAM,IAAI,QAAQ,CAAC,MAAM,WAAW,GAAG,GAAG,CAAC;AAC3C,WAAO,CAAC,CAAC,OAAO,YAAY;AAAA,EAC9B;AACF;;;ADzB0E,IAAO,iDAAQ;",
  "names": []
}
