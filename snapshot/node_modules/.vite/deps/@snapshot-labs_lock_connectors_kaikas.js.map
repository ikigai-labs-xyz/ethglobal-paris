{
  "version": 3,
  "sources": ["dep:@snapshot-labs_lock_connectors_kaikas", "../../@snapshot-labs/lock/connectors/kaikas.ts"],
  "sourcesContent": ["import d from \"./node_modules/@snapshot-labs/lock/connectors/kaikas.ts\";export default d;", "import LockConnector from '../src/connector';\n\nexport default class Connector extends LockConnector {\n  async connect() {\n    let provider;\n    if (window['klaytn']) {\n      provider = window['klaytn'];\n      try {\n        await window['klaytn'].enable();\n      } catch (e) {\n        console.error(e);\n        // Return when the error is Error: User denied account authorization\n        if (e.code === -32603) return;\n      }\n    } else if (window['caver']) {\n      provider = window['caver'].currentProvider;\n    }\n    return provider;\n  }\n\n  async isLoggedIn() {\n    if (!window['klaytn']) return false;\n    if (window['klaytn'].selectedAddress) return true;\n    await new Promise((r) => setTimeout(r, 400));\n    return !!window['klaytn'].selectedAddress;\n  }\n}\n"],
  "mappings": ";;;;;;;;AAAA;;;ACAA;AAEA,+BAAuC,UAAc;AAAA,QAC7C,UAAU;AACd,QAAI;AACJ,QAAI,OAAO,WAAW;AACpB,iBAAW,OAAO;AAClB,UAAI;AACF,cAAM,OAAO,UAAU,OAAO;AAAA,MAChC,SAAS,GAAP;AACA,gBAAQ,MAAM,CAAC;AAEf,YAAI,EAAE,SAAS;AAAQ;AAAA,MACzB;AAAA,IACF,WAAW,OAAO,UAAU;AAC1B,iBAAW,OAAO,SAAS;AAAA,IAC7B;AACA,WAAO;AAAA,EACT;AAAA,QAEM,aAAa;AACjB,QAAI,CAAC,OAAO;AAAW,aAAO;AAC9B,QAAI,OAAO,UAAU;AAAiB,aAAO;AAC7C,UAAM,IAAI,QAAQ,CAAC,MAAM,WAAW,GAAG,GAAG,CAAC;AAC3C,WAAO,CAAC,CAAC,OAAO,UAAU;AAAA,EAC5B;AACF;;;AD1BwE,IAAO,+CAAQ;",
  "names": []
}
