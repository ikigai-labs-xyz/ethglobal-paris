{
  "version": 3,
  "sources": ["dep:@snapshot-labs_lock_plugins_vue3", "../../@snapshot-labs/lock/plugins/vue3.ts", "../../@snapshot-labs/lock/src/lock.ts"],
  "sourcesContent": ["\nexport * from \"./node_modules/@snapshot-labs/lock/plugins/vue3.ts\"", "// @ts-ignore\nimport { ref } from 'vue';\nimport Lock from '../src/lock';\n\nconst name = 'lock';\n\nlet instance;\n\nexport const getInstance = () => instance;\n\nexport const useLock = ({ ...options }) => {\n  if (instance) return instance;\n\n  const isAuthenticated = ref(false);\n  const provider = ref();\n\n  const lockClient = new Lock();\n  options.connectors.forEach(connector => {\n    lockClient.addConnector(connector);\n  });\n\n  async function login(connector) {\n    const lockConnector = lockClient.getConnector(connector);\n    const localProvider = await lockConnector.connect();\n    if (localProvider !== null) {\n      provider.value = localProvider;\n    }\n    if (provider.value) {\n      localStorage.setItem(`_${name}.connector`, connector);\n      isAuthenticated.value = true;\n    }\n    return provider;\n  }\n\n  async function logout() {\n    const connector = await getConnector();\n    if (connector) {\n      const lockConnector = lockClient.getConnector(connector);\n      await lockConnector.logout();\n      localStorage.removeItem(`_${name}.connector`);\n      isAuthenticated.value = false;\n      provider.value = null;\n    }\n  }\n\n  async function getConnector() {\n    const connector = localStorage.getItem(`_${name}.connector`);\n    if (connector) {\n      const lockConnector = lockClient.getConnector(connector);\n      const isLoggedIn = await lockConnector.isLoggedIn();\n      return isLoggedIn ? connector : false;\n    }\n    return false;\n  }\n\n  instance = {\n    isAuthenticated,\n    provider,\n    lockClient,\n    login,\n    logout,\n    getConnector\n  };\n\n  return instance;\n};\n\nexport const LockPlugin = {\n  install(app, options) {\n    app.config.globalProperties.$auth = useLock(options);\n  }\n};\n", "import Connector from './connector';\n\nexport default class Lock {\n  public connectors = {};\n  public options = {};\n\n  addConnector(connector: any) {\n    this.connectors[connector.key] = connector.connector;\n    this.options[connector.key] = connector.options;\n  }\n\n  getConnector(key: string): Connector {\n    const options = this.options[key];\n    return new this.connectors[key](options);\n  }\n}\n"],
  "mappings": ";;;;;;;;;;AAAA;;;ACAA;;;ACAA;AAEA,iBAA0B;AAAA,EAA1B;AACS,sBAAa,CAAC;AACd,mBAAU,CAAC;AAAA;AAAA,EAElB,aAAa,WAAgB;AAC3B,SAAK,WAAW,UAAU,OAAO,UAAU;AAC3C,SAAK,QAAQ,UAAU,OAAO,UAAU;AAAA,EAC1C;AAAA,EAEA,aAAa,KAAwB;AACnC,UAAM,UAAU,KAAK,QAAQ;AAC7B,WAAO,IAAI,KAAK,WAAW,KAAK,OAAO;AAAA,EACzC;AACF;;;ADXA,IAAM,OAAO;AAEb,IAAI;AAEG,IAAM,cAAc,MAAM;AAE1B,IAAM,UAAU,CAAC,OAAmB;AAAnB,MAAK,oBAAL,IAAK;AAC3B,MAAI;AAAU,WAAO;AAErB,QAAM,kBAAkB,IAAI,KAAK;AACjC,QAAM,WAAW,IAAI;AAErB,QAAM,aAAa,IAAI,KAAK;AAC5B,UAAQ,WAAW,QAAQ,eAAa;AACtC,eAAW,aAAa,SAAS;AAAA,EACnC,CAAC;AAED,uBAAqB,WAAW;AAC9B,UAAM,gBAAgB,WAAW,aAAa,SAAS;AACvD,UAAM,gBAAgB,MAAM,cAAc,QAAQ;AAClD,QAAI,kBAAkB,MAAM;AAC1B,eAAS,QAAQ;AAAA,IACnB;AACA,QAAI,SAAS,OAAO;AAClB,mBAAa,QAAQ,IAAI,kBAAkB,SAAS;AACpD,sBAAgB,QAAQ;AAAA,IAC1B;AACA,WAAO;AAAA,EACT;AAEA,0BAAwB;AACtB,UAAM,YAAY,MAAM,aAAa;AACrC,QAAI,WAAW;AACb,YAAM,gBAAgB,WAAW,aAAa,SAAS;AACvD,YAAM,cAAc,OAAO;AAC3B,mBAAa,WAAW,IAAI,gBAAgB;AAC5C,sBAAgB,QAAQ;AACxB,eAAS,QAAQ;AAAA,IACnB;AAAA,EACF;AAEA,gCAA8B;AAC5B,UAAM,YAAY,aAAa,QAAQ,IAAI,gBAAgB;AAC3D,QAAI,WAAW;AACb,YAAM,gBAAgB,WAAW,aAAa,SAAS;AACvD,YAAM,aAAa,MAAM,cAAc,WAAW;AAClD,aAAO,aAAa,YAAY;AAAA,IAClC;AACA,WAAO;AAAA,EACT;AAEA,aAAW;AAAA,IACT;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAEA,SAAO;AACT;AAEO,IAAM,aAAa;AAAA,EACxB,QAAQ,KAAK,SAAS;AACpB,QAAI,OAAO,iBAAiB,QAAQ,QAAQ,OAAO;AAAA,EACrD;AACF;",
  "names": []
}
