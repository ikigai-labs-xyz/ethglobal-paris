{
  "version": 3,
  "sources": ["dep:@snapshot-labs_snapshot_js_src_sign", "../../@snapshot-labs/snapshot.js/src/sign/index.ts", "../../@snapshot-labs/snapshot.js/src/sign/types.ts"],
  "sourcesContent": ["import d from \"./node_modules/@snapshot-labs/snapshot.js/src/sign/index.ts\";export default d;\nexport * from \"./node_modules/@snapshot-labs/snapshot.js/src/sign/index.ts\"", "import fetch from 'cross-fetch';\nimport { Web3Provider } from '@ethersproject/providers';\nimport { Wallet } from '@ethersproject/wallet';\nimport { getAddress } from '@ethersproject/address';\nimport {\n  Space,\n  Proposal,\n  CancelProposal,\n  Vote,\n  Follow,\n  Unfollow,\n  Subscribe,\n  Unsubscribe,\n  Profile,\n  Alias,\n  DeleteSpace,\n  Statement,\n  spaceTypes,\n  proposalTypes,\n  cancelProposalTypes,\n  cancelProposal2Types,\n  voteTypes,\n  voteArrayTypes,\n  voteStringTypes,\n  vote2Types,\n  voteArray2Types,\n  voteString2Types,\n  followTypes,\n  subscribeTypes,\n  unfollowTypes,\n  unsubscribeTypes,\n  profileTypes,\n  aliasTypes,\n  deleteSpaceType,\n  statementTypes\n} from './types';\nimport constants from '../constants.json';\n\nconst NAME = 'snapshot';\nconst VERSION = '0.1.4';\n\nexport const domain = {\n  name: NAME,\n  version: VERSION\n  // chainId: 1\n};\n\nexport default class Client {\n  readonly address: string;\n\n  constructor(address: string = constants.livenet.sequencer) {\n    address = address.replace(\n      constants.livenet.hub,\n      constants.livenet.sequencer\n    );\n    address = address.replace(\n      constants.testnet.hub,\n      constants.testnet.sequencer\n    );\n    address = address.replace(constants.local.hub, constants.local.sequencer);\n    this.address = address;\n  }\n\n  async sign(web3: Web3Provider | Wallet, address: string, message, types) {\n    // @ts-ignore\n    const signer = web3?.getSigner ? web3.getSigner() : web3;\n    const checksumAddress = getAddress(address);\n    message.from = message.from ? getAddress(message.from) : checksumAddress;\n    if (!message.timestamp)\n      message.timestamp = parseInt((Date.now() / 1e3).toFixed());\n    const data: any = { domain, types, message };\n    const sig = await signer._signTypedData(domain, data.types, message);\n    //console.log('Sign', { address: checksumAddress, sig, data });\n    return await this.send({ address: checksumAddress, sig, data });\n  }\n\n  async send(envelop) {\n    const init = {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(envelop)\n    };\n    return new Promise((resolve, reject) => {\n      fetch(this.address, init)\n        .then((res) => {\n          if (res.ok) return resolve(res.json());\n          throw res;\n        })\n        .catch((e) => e.json().then((json) => reject(json)));\n    });\n  }\n\n  async space(web3: Web3Provider | Wallet, address: string, message: Space) {\n    return await this.sign(web3, address, message, spaceTypes);\n  }\n\n  async proposal(\n    web3: Web3Provider | Wallet,\n    address: string,\n    message: Proposal\n  ) {\n    if (!message.discussion) message.discussion = '';\n    if (!message.app) message.app = '';\n    return await this.sign(web3, address, message, proposalTypes);\n  }\n\n  async cancelProposal(\n    web3: Web3Provider | Wallet,\n    address: string,\n    message: CancelProposal\n  ) {\n    const type2 = message.proposal.startsWith('0x');\n    return await this.sign(\n      web3,\n      address,\n      message,\n      type2 ? cancelProposal2Types : cancelProposalTypes\n    );\n  }\n\n  async vote(web3: Web3Provider | Wallet, address: string, message: Vote) {\n    const isShutter = message?.privacy === 'shutter';\n    if (!message.reason) message.reason = '';\n    if (!message.app) message.app = '';\n    if (!message.metadata) message.metadata = '{}';\n    const type2 = message.proposal.startsWith('0x');\n    let type = type2 ? vote2Types : voteTypes;\n    if (['approval', 'ranked-choice'].includes(message.type))\n      type = type2 ? voteArray2Types : voteArrayTypes;\n    if (!isShutter && ['quadratic', 'weighted'].includes(message.type)) {\n      type = type2 ? voteString2Types : voteStringTypes;\n      message.choice = JSON.stringify(message.choice);\n    }\n    if (isShutter) type = type2 ? voteString2Types : voteStringTypes;\n    delete message.privacy;\n    // @ts-ignore\n    delete message.type;\n    return await this.sign(web3, address, message, type);\n  }\n\n  async follow(web3: Web3Provider | Wallet, address: string, message: Follow) {\n    return await this.sign(web3, address, message, followTypes);\n  }\n\n  async unfollow(\n    web3: Web3Provider | Wallet,\n    address: string,\n    message: Unfollow\n  ) {\n    return await this.sign(web3, address, message, unfollowTypes);\n  }\n\n  async subscribe(\n    web3: Web3Provider | Wallet,\n    address: string,\n    message: Subscribe\n  ) {\n    return await this.sign(web3, address, message, subscribeTypes);\n  }\n\n  async unsubscribe(\n    web3: Web3Provider | Wallet,\n    address: string,\n    message: Unsubscribe\n  ) {\n    return await this.sign(web3, address, message, unsubscribeTypes);\n  }\n\n  async profile(\n    web3: Web3Provider | Wallet,\n    address: string,\n    message: Profile\n  ) {\n    return await this.sign(web3, address, message, profileTypes);\n  }\n\n  async statement(\n    web3: Web3Provider | Wallet,\n    address: string,\n    message: Statement\n  ) {\n    return await this.sign(web3, address, message, statementTypes);\n  }\n\n  async alias(web3: Web3Provider | Wallet, address: string, message: Alias) {\n    return await this.sign(web3, address, message, aliasTypes);\n  }\n\n  async deleteSpace(\n    web3: Web3Provider | Wallet,\n    address: string,\n    message: DeleteSpace\n  ) {\n    return await this.sign(web3, address, message, deleteSpaceType);\n  }\n}\n", "export interface Space {\n  from?: string;\n  space: string;\n  timestamp?: number;\n  settings: string;\n}\n\nexport type ProposalType =\n  | 'single-choice'\n  | 'approval'\n  | 'quadratic'\n  | 'ranked-choice'\n  | 'weighted'\n  | 'basic';\n\nexport interface Proposal {\n  from?: string;\n  space: string;\n  timestamp?: number;\n  type: ProposalType;\n  title: string;\n  body: string;\n  discussion: string;\n  choices: string[];\n  start: number;\n  end: number;\n  snapshot: number;\n  plugins: string;\n  app?: string;\n}\n\nexport interface CancelProposal {\n  from?: string;\n  space: string;\n  timestamp?: number;\n  proposal: string;\n}\n\nexport interface Vote {\n  from?: string;\n  space: string;\n  timestamp?: number;\n  proposal: string;\n  type: ProposalType;\n  choice: number | number[] | string | { [key: string]: number };\n  privacy?: string;\n  reason?: string;\n  app?: string;\n  metadata?: string;\n}\n\nexport interface Follow {\n  from?: string;\n  space: string;\n  timestamp?: number;\n}\n\nexport interface Unfollow {\n  from?: string;\n  space: string;\n  timestamp?: number;\n}\n\nexport interface Subscribe {\n  from?: string;\n  space: string;\n  timestamp?: number;\n}\n\nexport interface Unsubscribe {\n  from?: string;\n  space: string;\n  timestamp?: number;\n}\n\nexport interface Profile {\n  from?: string;\n  timestamp?: number;\n  profile: string;\n}\n\nexport interface Statement {\n  from?: string;\n  timestamp?: number;\n  space: string;\n  about: string;\n  statement: string;\n}\n\nexport interface Alias {\n  from?: string;\n  alias: string;\n  timestamp?: number;\n}\n\nexport interface DeleteSpace {\n  from?: string;\n  space: string;\n  timestamp?: number;\n}\n\nexport const spaceTypes = {\n  Space: [\n    { name: 'from', type: 'address' },\n    { name: 'space', type: 'string' },\n    { name: 'timestamp', type: 'uint64' },\n    { name: 'settings', type: 'string' }\n  ]\n};\n\nexport const proposalTypes = {\n  Proposal: [\n    { name: 'from', type: 'address' },\n    { name: 'space', type: 'string' },\n    { name: 'timestamp', type: 'uint64' },\n    { name: 'type', type: 'string' },\n    { name: 'title', type: 'string' },\n    { name: 'body', type: 'string' },\n    { name: 'discussion', type: 'string' },\n    { name: 'choices', type: 'string[]' },\n    { name: 'start', type: 'uint64' },\n    { name: 'end', type: 'uint64' },\n    { name: 'snapshot', type: 'uint64' },\n    { name: 'plugins', type: 'string' },\n    { name: 'app', type: 'string' }\n  ]\n};\n\nexport const cancelProposalTypes = {\n  CancelProposal: [\n    { name: 'from', type: 'address' },\n    { name: 'space', type: 'string' },\n    { name: 'timestamp', type: 'uint64' },\n    { name: 'proposal', type: 'string' }\n  ]\n};\n\nexport const cancelProposal2Types = {\n  CancelProposal: [\n    { name: 'from', type: 'address' },\n    { name: 'space', type: 'string' },\n    { name: 'timestamp', type: 'uint64' },\n    { name: 'proposal', type: 'bytes32' }\n  ]\n};\n\nexport const voteTypes = {\n  Vote: [\n    { name: 'from', type: 'address' },\n    { name: 'space', type: 'string' },\n    { name: 'timestamp', type: 'uint64' },\n    { name: 'proposal', type: 'string' },\n    { name: 'choice', type: 'uint32' },\n    { name: 'reason', type: 'string' },\n    { name: 'app', type: 'string' },\n    { name: 'metadata', type: 'string' }\n  ]\n};\n\nexport const voteArrayTypes = {\n  Vote: [\n    { name: 'from', type: 'address' },\n    { name: 'space', type: 'string' },\n    { name: 'timestamp', type: 'uint64' },\n    { name: 'proposal', type: 'string' },\n    { name: 'choice', type: 'uint32[]' },\n    { name: 'reason', type: 'string' },\n    { name: 'app', type: 'string' },\n    { name: 'metadata', type: 'string' }\n  ]\n};\n\nexport const voteStringTypes = {\n  Vote: [\n    { name: 'from', type: 'address' },\n    { name: 'space', type: 'string' },\n    { name: 'timestamp', type: 'uint64' },\n    { name: 'proposal', type: 'string' },\n    { name: 'choice', type: 'string' },\n    { name: 'reason', type: 'string' },\n    { name: 'app', type: 'string' },\n    { name: 'metadata', type: 'string' }\n  ]\n};\n\nexport const vote2Types = {\n  Vote: [\n    { name: 'from', type: 'address' },\n    { name: 'space', type: 'string' },\n    { name: 'timestamp', type: 'uint64' },\n    { name: 'proposal', type: 'bytes32' },\n    { name: 'choice', type: 'uint32' },\n    { name: 'reason', type: 'string' },\n    { name: 'app', type: 'string' },\n    { name: 'metadata', type: 'string' }\n  ]\n};\n\nexport const voteArray2Types = {\n  Vote: [\n    { name: 'from', type: 'address' },\n    { name: 'space', type: 'string' },\n    { name: 'timestamp', type: 'uint64' },\n    { name: 'proposal', type: 'bytes32' },\n    { name: 'choice', type: 'uint32[]' },\n    { name: 'reason', type: 'string' },\n    { name: 'app', type: 'string' },\n    { name: 'metadata', type: 'string' }\n  ]\n};\n\nexport const voteString2Types = {\n  Vote: [\n    { name: 'from', type: 'address' },\n    { name: 'space', type: 'string' },\n    { name: 'timestamp', type: 'uint64' },\n    { name: 'proposal', type: 'bytes32' },\n    { name: 'choice', type: 'string' },\n    { name: 'reason', type: 'string' },\n    { name: 'app', type: 'string' },\n    { name: 'metadata', type: 'string' }\n  ]\n};\n\nexport const followTypes = {\n  Follow: [\n    { name: 'from', type: 'address' },\n    { name: 'space', type: 'string' }\n  ]\n};\n\nexport const unfollowTypes = {\n  Unfollow: [\n    { name: 'from', type: 'address' },\n    { name: 'space', type: 'string' }\n  ]\n};\n\nexport const subscribeTypes = {\n  Subscribe: [\n    { name: 'from', type: 'address' },\n    { name: 'space', type: 'string' }\n  ]\n};\n\nexport const unsubscribeTypes = {\n  Unsubscribe: [\n    { name: 'from', type: 'address' },\n    { name: 'space', type: 'string' }\n  ]\n};\n\nexport const profileTypes = {\n  Profile: [\n    { name: 'from', type: 'address' },\n    { name: 'timestamp', type: 'uint64' },\n    { name: 'profile', type: 'string' }\n  ]\n};\n\nexport const statementTypes = {\n  Statement: [\n    { name: 'from', type: 'address' },\n    { name: 'timestamp', type: 'uint64' },\n    { name: 'space', type: 'string' },\n    { name: 'about', type: 'string' },\n    { name: 'statement', type: 'string' }\n  ]\n};\n\nexport const aliasTypes = {\n  Alias: [\n    { name: 'from', type: 'address' },\n    { name: 'alias', type: 'address' }\n  ]\n};\n\nexport const deleteSpaceType = {\n  DeleteSpace: [\n    { name: 'from', type: 'address' },\n    { name: 'space', type: 'string' }\n  ]\n};\n"],
  "mappings": "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",
  "names": []
}
