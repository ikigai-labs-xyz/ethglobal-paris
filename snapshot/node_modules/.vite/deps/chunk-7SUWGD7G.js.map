{
  "version": 3,
  "sources": ["../../@snapshot-labs/snapshot.js/src/utils/multicaller.ts", "../../@snapshot-labs/snapshot.js/src/utils.ts", "../../@snapshot-labs/snapshot.js/src/utils/blockfinder.ts", "../../@snapshot-labs/snapshot.js/src/sign/utils.ts", "../../@snapshot-labs/snapshot.js/src/sign/eip1271.ts", "../../@snapshot-labs/snapshot.js/src/voting/index.ts", "../../@snapshot-labs/snapshot.js/src/voting/singleChoice.ts", "../../@snapshot-labs/snapshot.js/src/voting/approval.ts", "../../@snapshot-labs/snapshot.js/src/voting/rankedChoice.ts", "../../@snapshot-labs/snapshot.js/src/voting/weighted.ts"],
  "sourcesContent": ["import { StaticJsonRpcProvider } from '@ethersproject/providers';\nimport set from 'lodash.set';\nimport { multicall } from '../utils';\n\nexport default class Multicaller {\n  public network: string;\n  public provider: StaticJsonRpcProvider;\n  public abi: any[];\n  public options: any = {};\n  public calls: any[] = [];\n  public paths: any[] = [];\n\n  constructor(\n    network: string,\n    provider: StaticJsonRpcProvider,\n    abi: any[],\n    options?\n  ) {\n    this.network = network;\n    this.provider = provider;\n    this.abi = abi;\n    this.options = options || {};\n  }\n\n  call(path, address, fn, params?): Multicaller {\n    this.calls.push([address, fn, params]);\n    this.paths.push(path);\n    return this;\n  }\n\n  async execute(from?: any): Promise<any> {\n    const obj = from || {};\n    const result = await multicall(\n      this.network,\n      this.provider,\n      this.abi,\n      this.calls,\n      this.options\n    );\n    result.forEach((r, i) => set(obj, this.paths[i], r.length > 1 ? r : r[0]));\n    this.calls = [];\n    this.paths = [];\n    return obj;\n  }\n}\n", "import fetch from 'cross-fetch';\nimport { Interface } from '@ethersproject/abi';\nimport { Contract } from '@ethersproject/contracts';\nimport { isAddress } from '@ethersproject/address';\nimport { parseUnits } from '@ethersproject/units';\nimport { hash, normalize } from '@ensdomains/eth-ens-namehash';\nimport { jsonToGraphQLQuery } from 'json-to-graphql-query';\nimport Ajv from 'ajv';\nimport addFormats from 'ajv-formats';\nimport Multicaller from './utils/multicaller';\nimport { getSnapshots } from './utils/blockfinder';\nimport getProvider from './utils/provider';\nimport { signMessage, getBlockNumber } from './utils/web3';\nimport { getHash, verify } from './sign/utils';\nimport gateways from './gateways.json';\nimport networks from './networks.json';\nimport delegationSubgraphs from './delegationSubgraphs.json';\nimport voting from './voting';\n\ninterface Options {\n  url?: string;\n}\n\ninterface Strategy {\n  name: string;\n  network?: string;\n  params: any;\n}\n\nexport const SNAPSHOT_SUBGRAPH_URL = delegationSubgraphs;\n\nconst ENS_RESOLVER_ABI = [\n  'function text(bytes32 node, string calldata key) external view returns (string memory)'\n];\n\nconst ajv = new Ajv({ allErrors: true, allowUnionTypes: true, $data: true });\n// @ts-ignore\naddFormats(ajv);\n\najv.addFormat('address', {\n  validate: (value: string) => {\n    try {\n      return isAddress(value);\n    } catch (err) {\n      return false;\n    }\n  }\n});\n\najv.addFormat('long', {\n  validate: () => true\n});\n\najv.addFormat('ethValue', {\n  validate: (value: string) => {\n    if (!value.match(/^([0-9]|[1-9][0-9]+)(\\.[0-9]+)?$/)) return false;\n\n    try {\n      parseUnits(value, 18);\n      return true;\n    } catch {\n      return false;\n    }\n  }\n});\n\n// Custom URL format to allow empty string values\n// https://github.com/snapshot-labs/snapshot.js/pull/541/files\najv.addFormat('customUrl', {\n  type: 'string',\n  validate: (str) => {\n    if (!str.length) return true;\n    return (\n      str.startsWith('http://') ||\n      str.startsWith('https://') ||\n      str.startsWith('ipfs://') ||\n      str.startsWith('ipns://') ||\n      str.startsWith('snapshot://')\n    );\n  }\n});\n\nexport async function call(provider, abi: any[], call: any[], options?) {\n  const contract = new Contract(call[0], abi, provider);\n  try {\n    const params = call[2] || [];\n    return await contract[call[1]](...params, options || {});\n  } catch (e) {\n    return Promise.reject(e);\n  }\n}\n\nexport async function multicall(\n  network: string,\n  provider,\n  abi: any[],\n  calls: any[],\n  options?\n) {\n  const multicallAbi = [\n    'function aggregate(tuple(address target, bytes callData)[] calls) view returns (uint256 blockNumber, bytes[] returnData)'\n  ];\n  const multi = new Contract(\n    networks[network].multicall,\n    multicallAbi,\n    provider\n  );\n  const itf = new Interface(abi);\n  try {\n    const max = options?.limit || 500;\n    if (options?.limit) delete options.limit;\n    const pages = Math.ceil(calls.length / max);\n    const promises: any = [];\n    Array.from(Array(pages)).forEach((x, i) => {\n      const callsInPage = calls.slice(max * i, max * (i + 1));\n      promises.push(\n        multi.aggregate(\n          callsInPage.map((call) => [\n            call[0].toLowerCase(),\n            itf.encodeFunctionData(call[1], call[2])\n          ]),\n          options || {}\n        )\n      );\n    });\n    let results: any = await Promise.all(promises);\n    results = results.reduce((prev: any, [, res]: any) => prev.concat(res), []);\n    return results.map((call, i) =>\n      itf.decodeFunctionResult(calls[i][1], call)\n    );\n  } catch (e) {\n    return Promise.reject(e);\n  }\n}\n\nexport async function subgraphRequest(url: string, query, options: any = {}) {\n  const res = await fetch(url, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      ...options?.headers\n    },\n    body: JSON.stringify({ query: jsonToGraphQLQuery({ query }) })\n  });\n  let responseData: any = await res.text();\n  try {\n    responseData = JSON.parse(responseData);\n  } catch (e) {\n    throw new Error(\n      `Errors found in subgraphRequest: URL: ${url}, Status: ${res.status}, Response: ${responseData}`\n    );\n  }\n  if (responseData.errors) {\n    throw new Error(\n      `Errors found in subgraphRequest: URL: ${url}, Status: ${\n        res.status\n      },  Response: ${JSON.stringify(responseData.errors)}`\n    );\n  }\n  const { data } = responseData;\n  return data || {};\n}\n\nexport function getUrl(uri, gateway = gateways[0]) {\n  const ipfsGateway = `https://${gateway}`;\n  if (!uri) return null;\n  if (\n    !uri.startsWith('ipfs://') &&\n    !uri.startsWith('ipns://') &&\n    !uri.startsWith('https://') &&\n    !uri.startsWith('http://')\n  )\n    return `${ipfsGateway}/ipfs/${uri}`;\n  const uriScheme = uri.split('://')[0];\n  if (uriScheme === 'ipfs')\n    return uri.replace('ipfs://', `${ipfsGateway}/ipfs/`);\n  if (uriScheme === 'ipns')\n    return uri.replace('ipns://', `${ipfsGateway}/ipns/`);\n  return uri;\n}\n\nexport async function getJSON(uri) {\n  const url = getUrl(uri);\n  return fetch(url).then((res) => res.json());\n}\n\nexport async function ipfsGet(\n  gateway: string,\n  ipfsHash: string,\n  protocolType = 'ipfs'\n) {\n  const url = `https://${gateway}/${protocolType}/${ipfsHash}`;\n  return fetch(url).then((res) => res.json());\n}\n\nexport async function sendTransaction(\n  web3,\n  contractAddress: string,\n  abi: any[],\n  action: string,\n  params: any[],\n  overrides = {}\n) {\n  const signer = web3.getSigner();\n  const contract = new Contract(contractAddress, abi, web3);\n  const contractWithSigner = contract.connect(signer);\n  // overrides.gasLimit = 12e6;\n  return await contractWithSigner[action](...params, overrides);\n}\n\nexport async function getScores(\n  space: string,\n  strategies: Strategy[],\n  network: string,\n  addresses: string[],\n  snapshot: number | string = 'latest',\n  scoreApiUrl = 'https://score.snapshot.org/api/scores'\n) {\n  try {\n    const params = {\n      space,\n      network,\n      snapshot,\n      strategies,\n      addresses\n    };\n    const res = await fetch(scoreApiUrl, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ params })\n    });\n    const obj = await res.json();\n    return obj.result.scores;\n  } catch (e) {\n    return Promise.reject(e);\n  }\n}\n\nexport async function getVp(\n  address: string,\n  network: string,\n  strategies: Strategy[],\n  snapshot: number | 'latest',\n  space: string,\n  delegation: boolean,\n  options?: Options\n) {\n  if (!options) options = {};\n  if (!options.url) options.url = 'https://score.snapshot.org';\n  const init = {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      jsonrpc: '2.0',\n      method: 'get_vp',\n      params: {\n        address,\n        network,\n        strategies,\n        snapshot,\n        space,\n        delegation\n      },\n      id: null\n    })\n  };\n  const res = await fetch(options.url, init);\n  const json = await res.json();\n  if (json.error) return Promise.reject(json.error);\n  if (json.result) return json.result;\n}\n\nexport async function validate(\n  validation: string,\n  author: string,\n  space: string,\n  network: string,\n  snapshot: number | 'latest',\n  params: any,\n  options: any\n) {\n  if (!options) options = {};\n  if (!options.url) options.url = 'https://score.snapshot.org';\n  const init = {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      jsonrpc: '2.0',\n      method: 'validate',\n      params: {\n        validation,\n        author,\n        space,\n        network,\n        snapshot,\n        params\n      },\n      id: null\n    })\n  };\n  const res = await fetch(options.url, init);\n  const json = await res.json();\n  if (json.error) return Promise.reject(json.error);\n  return json.result;\n}\n\nexport function validateSchema(schema, data) {\n  const ajvValidate = ajv.compile(schema);\n  const valid = ajvValidate(data);\n  return valid ? valid : ajvValidate.errors;\n}\n\nexport async function getEnsTextRecord(\n  ens: string,\n  record: string,\n  network = '1'\n) {\n  const ensResolvers =\n    networks[network].ensResolvers || networks['1'].ensResolvers;\n  const ensHash = hash(normalize(ens));\n  const provider = getProvider(network);\n\n  const result = await multicall(\n    network,\n    provider,\n    ENS_RESOLVER_ABI,\n    ensResolvers.map((address: any) => [address, 'text', [ensHash, record]])\n  );\n  return result.flat().find((r: string) => r) || '';\n}\n\nexport async function getSpaceUri(\n  id: string,\n  network = '1'\n): Promise<string | null> {\n  try {\n    return await getEnsTextRecord(id, 'snapshot', network);\n  } catch (e) {\n    console.log(e);\n    return null;\n  }\n}\n\nexport async function getEnsOwner(\n  ens: string,\n  network = '1'\n): Promise<string | null> {\n  const registryAddress = '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e';\n  const provider = getProvider(network);\n  const ensRegistry = new Contract(\n    registryAddress,\n    ['function owner(bytes32) view returns (address)'],\n    provider\n  );\n  const ensNameWrapper = networks[network].ensNameWrapper;\n  const ensHash = hash(normalize(ens));\n  let owner = await ensRegistry.owner(ensHash);\n  // If owner is the ENSNameWrapper contract, resolve the owner of the name\n  if (owner === ensNameWrapper) {\n    const ensNameWrapperContract = new Contract(\n      ensNameWrapper,\n      ['function ownerOf(uint256) view returns (address)'],\n      provider\n    );\n    owner = await ensNameWrapperContract.ownerOf(ensHash);\n  }\n  return owner;\n}\n\nexport async function getSpaceController(\n  id: string,\n  network = '1'\n): Promise<string | null> {\n  const spaceUri = await getSpaceUri(id, network);\n  if (spaceUri) {\n    let isUriAddress = isAddress(spaceUri);\n    if (isUriAddress) return spaceUri;\n\n    const uriParts = spaceUri.split('/');\n    const position = uriParts.includes('testnet') ? 5 : 4;\n    const address = uriParts[position];\n    isUriAddress = isAddress(address);\n    if (isUriAddress) return address;\n  }\n  return await getEnsOwner(id, network);\n}\n\nexport async function getDelegatesBySpace(\n  network: string,\n  space: string,\n  snapshot = 'latest'\n) {\n  if (!delegationSubgraphs[network]) {\n    return Promise.reject(\n      `Delegation subgraph not available for network ${network}`\n    );\n  }\n  const spaceIn = ['', space];\n  if (space.includes('.eth')) spaceIn.push(space.replace('.eth', ''));\n\n  const PAGE_SIZE = 1000;\n  let result = [];\n  let page = 0;\n  const params: any = {\n    delegations: {\n      __args: {\n        where: {\n          space_in: spaceIn\n        },\n        first: PAGE_SIZE,\n        skip: 0\n      },\n      delegator: true,\n      space: true,\n      delegate: true\n    }\n  };\n  if (snapshot !== 'latest') {\n    params.delegations.__args.block = { number: snapshot };\n  }\n\n  while (true) {\n    params.delegations.__args.skip = page * PAGE_SIZE;\n\n    const pageResult = await subgraphRequest(\n      delegationSubgraphs[network],\n      params\n    );\n    const pageDelegations = pageResult.delegations || [];\n    result = result.concat(pageDelegations);\n    page++;\n    if (pageDelegations.length < PAGE_SIZE) break;\n  }\n\n  return result;\n}\n\nexport function clone(item) {\n  return JSON.parse(JSON.stringify(item));\n}\n\nexport async function sleep(time) {\n  return new Promise((resolve) => {\n    setTimeout(resolve, time);\n  });\n}\n\nexport function getNumberWithOrdinal(n) {\n  const s = ['th', 'st', 'nd', 'rd'],\n    v = n % 100;\n  return n + (s[(v - 20) % 10] || s[v] || s[0]);\n}\n\nexport default {\n  call,\n  multicall,\n  subgraphRequest,\n  ipfsGet,\n  getUrl,\n  getJSON,\n  sendTransaction,\n  getScores,\n  getVp,\n  validateSchema,\n  getEnsTextRecord,\n  getSpaceUri,\n  getEnsOwner,\n  getSpaceController,\n  getDelegatesBySpace,\n  clone,\n  sleep,\n  getNumberWithOrdinal,\n  voting,\n  getProvider,\n  signMessage,\n  getBlockNumber,\n  Multicaller,\n  getSnapshots,\n  getHash,\n  verify,\n  validate,\n  SNAPSHOT_SUBGRAPH_URL\n};\n", "import { subgraphRequest } from '../utils';\n\nlet cache = {};\nexport async function getSnapshots(network, snapshot, provider, networks) {\n  const cacheKey = `${network}-${snapshot}-${networks.join('-')}`;\n  if (cache[cacheKey]) return cache[cacheKey];\n  const snapshots = {};\n  networks.forEach((n) => (snapshots[n] = 'latest'));\n  if (snapshot === 'latest') return snapshots;\n  snapshots[network] = snapshot;\n  const networkIn = Object.keys(snapshots).filter((s) => network !== s);\n  if (networkIn.length === 0) return snapshots;\n  const block = await provider.getBlock(snapshot);\n  const query = {\n    blocks: {\n      __args: {\n        where: {\n          ts: block.timestamp,\n          network_in: networkIn\n        }\n      },\n      network: true,\n      number: true\n    }\n  };\n  const url = 'https://blockfinder.snapshot.org';\n  const data = await subgraphRequest(url, query);\n  data.blocks.forEach((block) => (snapshots[block.network] = block.number));\n  cache[cacheKey] = snapshots;\n  return snapshots;\n}\n\nsetInterval(() => (cache = {}), 1000 * 60 * 60 * 1); // Clear cache every 1 hour\n", "import { verifyTypedData } from '@ethersproject/wallet';\nimport { _TypedDataEncoder } from '@ethersproject/hash';\nimport { verify as verifyEIP1271 } from './eip1271';\n\nexport function getHash(data) {\n  const { domain, types, message } = data;\n  return _TypedDataEncoder.hash(domain, types, message);\n}\n\nexport async function verify(address, sig, data, network = '1') {\n  const { domain, types, message } = data;\n\n  const hash = getHash(data);\n  // console.log('Hash', hash);\n  // console.log('Address', address);\n\n  try {\n    const recoverAddress = verifyTypedData(domain, types, message, sig);\n    // console.log('Recover address', recoverAddress);\n    if (address === recoverAddress) return true;\n  } catch (e) {\n    // console.log('Could not recoverAddress:' + e.message);\n  }\n\n  // console.log('Check EIP1271 signature');\n  return await verifyEIP1271(address, sig, hash, network);\n}\n", "import { arrayify } from '@ethersproject/bytes';\nimport { StaticJsonRpcProvider } from '@ethersproject/providers';\nimport getProvider from '../utils/provider';\nimport { call } from '../utils';\n\nexport async function verifyDefault(\n  address: string,\n  sig: string,\n  hash: string,\n  provider: StaticJsonRpcProvider\n) {\n  let returnValue;\n  const magicValue = '0x1626ba7e';\n  const abi =\n    'function isValidSignature(bytes32 _hash, bytes memory _signature) public view returns (bytes4 magicValue)';\n  try {\n    returnValue = await call(\n      provider,\n      [abi],\n      [address, 'isValidSignature', [arrayify(hash), sig]]\n    );\n  } catch (e) {\n    // @ts-ignore\n    if (e.message.startsWith('missing revert data in call exception')) {\n      return false;\n    }\n    throw e;\n  }\n\n  return returnValue.toLowerCase() === magicValue.toLowerCase();\n}\n\nexport async function verifyOldVersion(\n  address: string,\n  sig: string,\n  hash: string,\n  provider: StaticJsonRpcProvider\n) {\n  const magicValue = '0x20c13b0b';\n  const abi =\n    'function isValidSignature(bytes _hash, bytes memory _signature) public view returns (bytes4 magicValue)';\n\n  const returnValue = await call(\n    provider,\n    [abi],\n    [address, 'isValidSignature', [arrayify(hash), sig]]\n  );\n  return returnValue.toLowerCase() === magicValue.toLowerCase();\n}\n\nexport async function verify(address, sig, hash, network = '1') {\n  const provider = getProvider(network);\n  if (await verifyDefault(address, sig, hash, provider)) return true;\n  return await verifyOldVersion(address, sig, hash, provider);\n}\n", "import singleChoice from './singleChoice';\nimport approval from './approval';\nimport quadratic from './quadratic';\nimport rankedChoice from './rankedChoice';\nimport weighted from './weighted';\n\nexport default {\n  'single-choice': singleChoice,\n  approval,\n  quadratic,\n  'ranked-choice': rankedChoice,\n  weighted,\n  basic: singleChoice\n};\n", "import { SingleChoiceVote, Strategy } from './types';\n\nexport default class SingleChoiceVoting {\n  proposal: { choices: string[] };\n  votes: SingleChoiceVote[];\n  strategies: Strategy[];\n  selected: number;\n\n  constructor(\n    proposal: { choices: string[] },\n    votes: SingleChoiceVote[],\n    strategies: Strategy[],\n    selected: number\n  ) {\n    this.proposal = proposal;\n    this.votes = votes;\n    this.strategies = strategies;\n    this.selected = selected;\n  }\n\n  static isValidChoice(voteChoice: number, proposalChoices: string[]): boolean {\n    return (\n      typeof voteChoice === 'number' &&\n      proposalChoices?.[voteChoice - 1] !== undefined\n    );\n  }\n\n  getValidVotes(): SingleChoiceVote[] {\n    return this.votes.filter((vote) =>\n      SingleChoiceVoting.isValidChoice(vote.choice, this.proposal.choices)\n    );\n  }\n\n  getScores(): number[] {\n    return this.proposal.choices.map((choice, i) => {\n      const votes = this.getValidVotes().filter(\n        (vote) => vote.choice === i + 1\n      );\n      const balanceSum = votes.reduce((a, b) => a + b.balance, 0);\n      return balanceSum;\n    });\n  }\n\n  getScoresByStrategy(): number[][] {\n    return this.proposal.choices.map((choice, i) => {\n      const scores = this.strategies.map((strategy, sI) => {\n        const votes = this.getValidVotes().filter(\n          (vote) => vote.choice === i + 1\n        );\n        const scoreSum = votes.reduce((a, b) => a + b.scores[sI], 0);\n        return scoreSum;\n      });\n      return scores;\n    });\n  }\n\n  getScoresTotal(): number {\n    return this.votes.reduce((a, b) => a + b.balance, 0);\n  }\n\n  getChoiceString(): string {\n    return this.proposal.choices[this.selected - 1];\n  }\n}\n", "import { ApprovalVote, Strategy } from './types';\n\nexport default class ApprovalVoting {\n  proposal: { choices: string[] };\n  votes: ApprovalVote[];\n  strategies: Strategy[];\n  selected: number[];\n\n  constructor(\n    proposal: { choices: string[] },\n    votes: ApprovalVote[],\n    strategies: Strategy[],\n    selected: number[]\n  ) {\n    this.proposal = proposal;\n    this.votes = votes;\n    this.strategies = strategies;\n    this.selected = selected;\n  }\n\n  static isValidChoice(\n    voteChoice: number[],\n    proposalChoices: string[]\n  ): boolean {\n    return (\n      Array.isArray(voteChoice) &&\n      // If voteChoice index is not in proposalChoices, return false\n      voteChoice.every(\n        (choice) => proposalChoices?.[choice - 1] !== undefined\n      ) &&\n      // If any voteChoice is duplicated, return false\n      voteChoice.length === new Set(voteChoice).size\n    );\n  }\n\n  getValidVotes(): {\n    choice: number[];\n    balance: number;\n    scores: number[];\n  }[] {\n    return this.votes.filter((vote) =>\n      ApprovalVoting.isValidChoice(vote.choice, this.proposal.choices)\n    );\n  }\n\n  getScores(): number[] {\n    return this.proposal.choices.map((choice, i) =>\n      this.getValidVotes()\n        .filter((vote) => vote.choice.includes(i + 1))\n        .reduce((a, b) => a + b.balance, 0)\n    );\n  }\n\n  getScoresByStrategy(): number[][] {\n    return this.proposal.choices.map((choice, i) =>\n      this.strategies.map((strategy, sI) =>\n        this.getValidVotes()\n          .filter((vote) => vote.choice.includes(i + 1))\n          .reduce((a, b) => a + b.scores[sI], 0)\n      )\n    );\n  }\n\n  getScoresTotal(): number {\n    return this.votes.reduce((a, b) => a + b.balance, 0);\n  }\n\n  getChoiceString(): string {\n    if (!this.selected) return '';\n    return this.proposal.choices\n      .filter((choice, i) => this.selected.includes(i + 1))\n      .join(', ');\n  }\n}\n", "import { getNumberWithOrdinal } from '../utils';\nimport { RankedChoiceVote, Strategy } from './types';\n\nfunction irv(\n  ballots: (number | number[])[][],\n  rounds: {\n    round: number;\n    sortedByHighest: [string, [number, number[]]][];\n  }[]\n): { round: number; sortedByHighest: [string, [number, number[]]][] }[] {\n  const candidates: number[] = [\n    ...new Set(ballots.map((vote) => vote[0]).flat())\n  ];\n  const votes: [string, [number, number[]]][] = Object.entries(\n    ballots.reduce((votes, [v], i, src) => {\n      const balance = src[i][1];\n      votes[v[0]][0] += balance;\n\n      const score = src[i][2] as number[];\n      if (score.length > 1) {\n        votes[v[0]][1] = score.map((s, sI) => s + votes[v[0]][1][sI] || s);\n      } else\n        votes[v[0]][1] = [\n          votes[v[0]][1].concat(score).reduce((a, b) => a + b, 0)\n        ];\n      return votes;\n    }, Object.assign({}, ...candidates.map((c) => ({ [c]: [0, []] }))))\n  );\n\n  const votesWithoutScore = votes.map((vote) => [vote[0], vote[1][0]]);\n\n  /* eslint-disable @typescript-eslint/no-unused-vars */\n  const [topCand, topCount]: number[] = votesWithoutScore.reduce(\n    ([n, m]: any[], [v, c]: any[]) => (c > m ? [v, c] : [n, m]),\n    ['?', -Infinity]\n  );\n  const [bottomCand, bottomCount] = votesWithoutScore.reduce(\n    ([n, m], [v, c]) => (c < m ? [v, c] : [n, m]),\n    ['?', Infinity]\n  );\n  /* eslint-enable @typescript-eslint/no-unused-vars */\n\n  const sortedByHighest = votes.sort((a, b) => b[1][0] - a[1][0]);\n\n  const totalPowerOfVotes = ballots\n    .map((bal) => bal[1])\n    .reduce((a, b: any) => a + b, 0);\n\n  rounds.push({\n    round: rounds.length + 1,\n    sortedByHighest\n  });\n\n  return topCount > (totalPowerOfVotes as number) / 2 ||\n    sortedByHighest.length < 3\n    ? rounds\n    : irv(\n        ballots\n          .map((ballot) => [\n            (ballot[0] as number[]).filter((c) => c != bottomCand),\n            ballot[1],\n            ballot[2]\n          ])\n          .filter((ballot) => (ballot[0] as number[]).length > 0),\n        rounds\n      );\n}\n\nfunction getFinalRound(\n  votes: RankedChoiceVote[]\n): [string, [number, number[]]][] {\n  const rounds = irv(\n    votes.map((vote) => [vote.choice, vote.balance, vote.scores]),\n    []\n  );\n  const finalRound = rounds[rounds.length - 1];\n  return finalRound.sortedByHighest;\n}\n\nfunction getScoresMethod(\n  votes: RankedChoiceVote[],\n  proposal: { choices: string[] }\n) {\n  const finalRound = getFinalRound(votes);\n  return proposal.choices.map((choice, i) =>\n    finalRound\n      .filter((res) => Number(res[0]) === i + 1)\n      .reduce((a, b) => a + b[1][0], 0)\n  );\n}\n\nexport default class RankedChoiceVoting {\n  proposal: { choices: string[] };\n  votes: RankedChoiceVote[];\n  strategies: Strategy[];\n  selected: number[];\n\n  constructor(\n    proposal: { choices: string[] },\n    votes: RankedChoiceVote[],\n    strategies: Strategy[],\n    selected: number[]\n  ) {\n    this.proposal = proposal;\n    this.votes = votes;\n    this.strategies = strategies;\n    this.selected = selected;\n  }\n\n  static isValidChoice(\n    voteChoice: number[],\n    proposalChoices: string[]\n  ): boolean {\n    return (\n      Array.isArray(voteChoice) &&\n      // If voteChoice index is not in choices, return false\n      voteChoice.every(\n        (voteChoice) => proposalChoices?.[voteChoice - 1] !== undefined\n      ) &&\n      // If any voteChoice is duplicated, return false\n      voteChoice.length === new Set(voteChoice).size &&\n      // If voteChoice is empty, return false\n      voteChoice.length > 0 &&\n      // If not all proposalChoices are selected, return false\n      // TODO: We should add support for pacial bailout in the future\n      voteChoice.length === proposalChoices.length\n    );\n  }\n\n  getValidVotes(): RankedChoiceVote[] {\n    return this.votes.filter((vote) =>\n      RankedChoiceVoting.isValidChoice(vote.choice, this.proposal.choices)\n    );\n  }\n\n  getScores(): number[] {\n    return getScoresMethod(this.getValidVotes(), this.proposal);\n  }\n\n  getScoresByStrategy(): number[][] {\n    const finalRound = getFinalRound(this.getValidVotes());\n    return this.proposal.choices.map((choice, i) =>\n      this.strategies.map((strategy, sI) => {\n        return finalRound\n          .filter((res) => Number(res[0]) === i + 1)\n          .reduce((a, b) => a + b[1][1][sI], 0);\n      })\n    );\n  }\n\n  getScoresTotal(): number {\n    return getScoresMethod(this.votes, this.proposal).reduce((a, b) => a + b);\n  }\n\n  getChoiceString(): string {\n    return this.selected\n      .map((choice) => {\n        if (this.proposal.choices[choice - 1])\n          return this.proposal.choices[choice - 1];\n      })\n      .map((el, i) => `(${getNumberWithOrdinal(i + 1)}) ${el}`)\n      .join(', ');\n  }\n}\n", "import { WeightedVote, Strategy } from './types';\n\nexport function percentageOfTotal(i, values, total): number {\n  const reducedTotal: any = total.reduce((a: any, b: any) => a + b, 0);\n  const percent = (values[i] / reducedTotal) * 100;\n  return isNaN(percent) ? 0 : percent;\n}\n\nexport function weightedPower(i, choice, balance): number {\n  return (\n    (percentageOfTotal(i + 1, choice, Object.values(choice)) / 100) * balance\n  );\n}\n\nexport default class WeightedVoting {\n  proposal: { choices: string[] };\n  votes: WeightedVote[];\n  strategies: Strategy[];\n  selected: { [key: string]: number };\n\n  constructor(\n    proposal: { choices: string[] },\n    votes: WeightedVote[],\n    strategies: Strategy[],\n    selected: { [key: string]: number }\n  ) {\n    this.proposal = proposal;\n    this.votes = votes;\n    this.strategies = strategies;\n    this.selected = selected;\n  }\n\n  static isValidChoice(\n    voteChoice: { [key: string]: number },\n    proposalChoices: string[]\n  ): boolean {\n    return (\n      typeof voteChoice === 'object' &&\n      !Array.isArray(voteChoice) &&\n      voteChoice !== null &&\n      // If voteChoice object keys are not in choices, return false\n      Object.keys(voteChoice).every(\n        (key) => proposalChoices?.[Number(key) - 1] !== undefined\n      ) &&\n      // If voteChoice object is empty, return false\n      Object.keys(voteChoice).length > 0 &&\n      // If voteChoice object values have a negative number, return false\n      Object.values(voteChoice).every(\n        (value) => typeof value === 'number' && value >= 0\n      ) &&\n      // If voteChoice doesn't have any positive value, return false\n      Object.values(voteChoice).some(\n        (value) => typeof value === 'number' && value > 0\n      )\n    );\n  }\n\n  getValidVotes(): WeightedVote[] {\n    return this.votes.filter((vote) =>\n      WeightedVoting.isValidChoice(vote.choice, this.proposal.choices)\n    );\n  }\n\n  getScores(): number[] {\n    const results = this.proposal.choices.map((choice, i) =>\n      this.getValidVotes()\n        .map((vote) => weightedPower(i, vote.choice, vote.balance))\n        .reduce((a, b: any) => a + b, 0)\n    );\n\n    const validScoresTotal = this.getValidVotes().reduce(\n      (a, b: any) => a + b.balance,\n      0\n    );\n\n    return results\n      .map((res, i) => percentageOfTotal(i, results, results))\n      .map((p) => (validScoresTotal / 100) * p);\n  }\n\n  getScoresByStrategy(): number[][] {\n    const results = this.proposal.choices\n      .map((choice, i) =>\n        this.strategies.map((strategy, sI) =>\n          this.getValidVotes()\n            .map((vote) => weightedPower(i, vote.choice, vote.scores[sI]))\n            .reduce((a, b: any) => a + b, 0)\n        )\n      )\n      .map((arr) => arr.map((pwr) => [pwr]));\n\n    const validScoresTotal = this.getValidVotes().reduce(\n      (a, b: any) => a + b.balance,\n      0\n    );\n\n    return results.map((res, i) =>\n      this.strategies\n        .map((strategy, sI) =>\n          percentageOfTotal(0, results[i][sI], results.flat(2))\n        )\n        .map((p) => [(validScoresTotal / 100) * p])\n        .flat()\n    );\n  }\n\n  getScoresTotal(): number {\n    return this.votes.reduce((a, b: any) => a + b.balance, 0);\n  }\n\n  getChoiceString(): string {\n    return this.proposal.choices\n      .map((choice, i) => {\n        if (this.selected[i + 1]) {\n          return `${\n            Math.round(\n              percentageOfTotal(\n                i + 1,\n                this.selected,\n                Object.values(this.selected)\n              ) * 10\n            ) / 10\n          }% for ${choice}`;\n        }\n      })\n      .filter((el) => el != null)\n      .join(', ');\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
