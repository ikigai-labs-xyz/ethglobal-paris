import {
  require_hash
} from "./chunk-ZO4ZOPOD.js";
import {
  Logger,
  arrayify,
  init_lib,
  init_lib2
} from "./chunk-LYPAHAFJ.js";
import {
  __esm,
  __toESM,
  init_define_process_env
} from "./chunk-PLO4ZEQ3.js";

// node_modules/@ethersproject/sha2/lib.esm/types.js
var SupportedAlgorithm;
var init_types = __esm({
  "node_modules/@ethersproject/sha2/lib.esm/types.js"() {
    init_define_process_env();
    (function(SupportedAlgorithm2) {
      SupportedAlgorithm2["sha256"] = "sha256";
      SupportedAlgorithm2["sha512"] = "sha512";
    })(SupportedAlgorithm || (SupportedAlgorithm = {}));
  }
});

// node_modules/@ethersproject/sha2/lib.esm/_version.js
var version;
var init_version = __esm({
  "node_modules/@ethersproject/sha2/lib.esm/_version.js"() {
    init_define_process_env();
    version = "sha2/5.7.0";
  }
});

// node_modules/@ethersproject/sha2/lib.esm/sha2.js
function ripemd160(data) {
  return "0x" + import_hash.default.ripemd160().update(arrayify(data)).digest("hex");
}
function sha256(data) {
  return "0x" + import_hash.default.sha256().update(arrayify(data)).digest("hex");
}
function sha512(data) {
  return "0x" + import_hash.default.sha512().update(arrayify(data)).digest("hex");
}
function computeHmac(algorithm, key, data) {
  if (!SupportedAlgorithm[algorithm]) {
    logger.throwError("unsupported algorithm " + algorithm, Logger.errors.UNSUPPORTED_OPERATION, {
      operation: "hmac",
      algorithm
    });
  }
  return "0x" + import_hash.default.hmac(import_hash.default[algorithm], arrayify(key)).update(arrayify(data)).digest("hex");
}
var import_hash, logger;
var init_sha2 = __esm({
  "node_modules/@ethersproject/sha2/lib.esm/sha2.js"() {
    "use strict";
    init_define_process_env();
    import_hash = __toESM(require_hash());
    init_lib2();
    init_types();
    init_lib();
    init_version();
    logger = new Logger(version);
  }
});

// node_modules/@ethersproject/sha2/lib.esm/index.js
var init_lib3 = __esm({
  "node_modules/@ethersproject/sha2/lib.esm/index.js"() {
    init_define_process_env();
    init_sha2();
    init_types();
  }
});

export {
  SupportedAlgorithm,
  ripemd160,
  sha256,
  sha512,
  computeHmac,
  init_lib3 as init_lib
};
//# sourceMappingURL=chunk-MSCW2UYV.js.map
