import {
  require_events
} from "./chunk-O2H27JQL.js";
import {
  require_browser_ponyfill
} from "./chunk-3G52DIU7.js";
import {
  __commonJS,
  __esm,
  __export,
  __reExport,
  __require,
  __spreadValues,
  __toCommonJS,
  __toESM,
  define_process_env_default,
  init_define_process_env
} from "./chunk-PLO4ZEQ3.js";

// node_modules/@stablelib/int/lib/int.js
var require_int = __commonJS({
  "node_modules/@stablelib/int/lib/int.js"(exports) {
    "use strict";
    init_define_process_env();
    Object.defineProperty(exports, "__esModule", { value: true });
    function imulShim(a2, b5) {
      var ah = a2 >>> 16 & 65535, al = a2 & 65535;
      var bh = b5 >>> 16 & 65535, bl = b5 & 65535;
      return al * bl + (ah * bl + al * bh << 16 >>> 0) | 0;
    }
    exports.mul = Math.imul || imulShim;
    function add(a2, b5) {
      return a2 + b5 | 0;
    }
    exports.add = add;
    function sub(a2, b5) {
      return a2 - b5 | 0;
    }
    exports.sub = sub;
    function rotl(x3, n2) {
      return x3 << n2 | x3 >>> 32 - n2;
    }
    exports.rotl = rotl;
    function rotr(x3, n2) {
      return x3 << 32 - n2 | x3 >>> n2;
    }
    exports.rotr = rotr;
    function isIntegerShim(n2) {
      return typeof n2 === "number" && isFinite(n2) && Math.floor(n2) === n2;
    }
    exports.isInteger = Number.isInteger || isIntegerShim;
    exports.MAX_SAFE_INTEGER = 9007199254740991;
    exports.isSafeInteger = function(n2) {
      return exports.isInteger(n2) && (n2 >= -exports.MAX_SAFE_INTEGER && n2 <= exports.MAX_SAFE_INTEGER);
    };
  }
});

// node_modules/@stablelib/binary/lib/binary.js
var require_binary = __commonJS({
  "node_modules/@stablelib/binary/lib/binary.js"(exports) {
    "use strict";
    init_define_process_env();
    Object.defineProperty(exports, "__esModule", { value: true });
    var int_1 = require_int();
    function readInt16BE(array, offset) {
      if (offset === void 0) {
        offset = 0;
      }
      return (array[offset + 0] << 8 | array[offset + 1]) << 16 >> 16;
    }
    exports.readInt16BE = readInt16BE;
    function readUint16BE(array, offset) {
      if (offset === void 0) {
        offset = 0;
      }
      return (array[offset + 0] << 8 | array[offset + 1]) >>> 0;
    }
    exports.readUint16BE = readUint16BE;
    function readInt16LE(array, offset) {
      if (offset === void 0) {
        offset = 0;
      }
      return (array[offset + 1] << 8 | array[offset]) << 16 >> 16;
    }
    exports.readInt16LE = readInt16LE;
    function readUint16LE(array, offset) {
      if (offset === void 0) {
        offset = 0;
      }
      return (array[offset + 1] << 8 | array[offset]) >>> 0;
    }
    exports.readUint16LE = readUint16LE;
    function writeUint16BE(value, out, offset) {
      if (out === void 0) {
        out = new Uint8Array(2);
      }
      if (offset === void 0) {
        offset = 0;
      }
      out[offset + 0] = value >>> 8;
      out[offset + 1] = value >>> 0;
      return out;
    }
    exports.writeUint16BE = writeUint16BE;
    exports.writeInt16BE = writeUint16BE;
    function writeUint16LE(value, out, offset) {
      if (out === void 0) {
        out = new Uint8Array(2);
      }
      if (offset === void 0) {
        offset = 0;
      }
      out[offset + 0] = value >>> 0;
      out[offset + 1] = value >>> 8;
      return out;
    }
    exports.writeUint16LE = writeUint16LE;
    exports.writeInt16LE = writeUint16LE;
    function readInt32BE(array, offset) {
      if (offset === void 0) {
        offset = 0;
      }
      return array[offset] << 24 | array[offset + 1] << 16 | array[offset + 2] << 8 | array[offset + 3];
    }
    exports.readInt32BE = readInt32BE;
    function readUint32BE(array, offset) {
      if (offset === void 0) {
        offset = 0;
      }
      return (array[offset] << 24 | array[offset + 1] << 16 | array[offset + 2] << 8 | array[offset + 3]) >>> 0;
    }
    exports.readUint32BE = readUint32BE;
    function readInt32LE(array, offset) {
      if (offset === void 0) {
        offset = 0;
      }
      return array[offset + 3] << 24 | array[offset + 2] << 16 | array[offset + 1] << 8 | array[offset];
    }
    exports.readInt32LE = readInt32LE;
    function readUint32LE(array, offset) {
      if (offset === void 0) {
        offset = 0;
      }
      return (array[offset + 3] << 24 | array[offset + 2] << 16 | array[offset + 1] << 8 | array[offset]) >>> 0;
    }
    exports.readUint32LE = readUint32LE;
    function writeUint32BE(value, out, offset) {
      if (out === void 0) {
        out = new Uint8Array(4);
      }
      if (offset === void 0) {
        offset = 0;
      }
      out[offset + 0] = value >>> 24;
      out[offset + 1] = value >>> 16;
      out[offset + 2] = value >>> 8;
      out[offset + 3] = value >>> 0;
      return out;
    }
    exports.writeUint32BE = writeUint32BE;
    exports.writeInt32BE = writeUint32BE;
    function writeUint32LE(value, out, offset) {
      if (out === void 0) {
        out = new Uint8Array(4);
      }
      if (offset === void 0) {
        offset = 0;
      }
      out[offset + 0] = value >>> 0;
      out[offset + 1] = value >>> 8;
      out[offset + 2] = value >>> 16;
      out[offset + 3] = value >>> 24;
      return out;
    }
    exports.writeUint32LE = writeUint32LE;
    exports.writeInt32LE = writeUint32LE;
    function readInt64BE(array, offset) {
      if (offset === void 0) {
        offset = 0;
      }
      var hi = readInt32BE(array, offset);
      var lo = readInt32BE(array, offset + 4);
      return hi * 4294967296 + lo - (lo >> 31) * 4294967296;
    }
    exports.readInt64BE = readInt64BE;
    function readUint64BE(array, offset) {
      if (offset === void 0) {
        offset = 0;
      }
      var hi = readUint32BE(array, offset);
      var lo = readUint32BE(array, offset + 4);
      return hi * 4294967296 + lo;
    }
    exports.readUint64BE = readUint64BE;
    function readInt64LE(array, offset) {
      if (offset === void 0) {
        offset = 0;
      }
      var lo = readInt32LE(array, offset);
      var hi = readInt32LE(array, offset + 4);
      return hi * 4294967296 + lo - (lo >> 31) * 4294967296;
    }
    exports.readInt64LE = readInt64LE;
    function readUint64LE(array, offset) {
      if (offset === void 0) {
        offset = 0;
      }
      var lo = readUint32LE(array, offset);
      var hi = readUint32LE(array, offset + 4);
      return hi * 4294967296 + lo;
    }
    exports.readUint64LE = readUint64LE;
    function writeUint64BE(value, out, offset) {
      if (out === void 0) {
        out = new Uint8Array(8);
      }
      if (offset === void 0) {
        offset = 0;
      }
      writeUint32BE(value / 4294967296 >>> 0, out, offset);
      writeUint32BE(value >>> 0, out, offset + 4);
      return out;
    }
    exports.writeUint64BE = writeUint64BE;
    exports.writeInt64BE = writeUint64BE;
    function writeUint64LE(value, out, offset) {
      if (out === void 0) {
        out = new Uint8Array(8);
      }
      if (offset === void 0) {
        offset = 0;
      }
      writeUint32LE(value >>> 0, out, offset);
      writeUint32LE(value / 4294967296 >>> 0, out, offset + 4);
      return out;
    }
    exports.writeUint64LE = writeUint64LE;
    exports.writeInt64LE = writeUint64LE;
    function readUintBE(bitLength, array, offset) {
      if (offset === void 0) {
        offset = 0;
      }
      if (bitLength % 8 !== 0) {
        throw new Error("readUintBE supports only bitLengths divisible by 8");
      }
      if (bitLength / 8 > array.length - offset) {
        throw new Error("readUintBE: array is too short for the given bitLength");
      }
      var result = 0;
      var mul = 1;
      for (var i3 = bitLength / 8 + offset - 1; i3 >= offset; i3--) {
        result += array[i3] * mul;
        mul *= 256;
      }
      return result;
    }
    exports.readUintBE = readUintBE;
    function readUintLE(bitLength, array, offset) {
      if (offset === void 0) {
        offset = 0;
      }
      if (bitLength % 8 !== 0) {
        throw new Error("readUintLE supports only bitLengths divisible by 8");
      }
      if (bitLength / 8 > array.length - offset) {
        throw new Error("readUintLE: array is too short for the given bitLength");
      }
      var result = 0;
      var mul = 1;
      for (var i3 = offset; i3 < offset + bitLength / 8; i3++) {
        result += array[i3] * mul;
        mul *= 256;
      }
      return result;
    }
    exports.readUintLE = readUintLE;
    function writeUintBE(bitLength, value, out, offset) {
      if (out === void 0) {
        out = new Uint8Array(bitLength / 8);
      }
      if (offset === void 0) {
        offset = 0;
      }
      if (bitLength % 8 !== 0) {
        throw new Error("writeUintBE supports only bitLengths divisible by 8");
      }
      if (!int_1.isSafeInteger(value)) {
        throw new Error("writeUintBE value must be an integer");
      }
      var div = 1;
      for (var i3 = bitLength / 8 + offset - 1; i3 >= offset; i3--) {
        out[i3] = value / div & 255;
        div *= 256;
      }
      return out;
    }
    exports.writeUintBE = writeUintBE;
    function writeUintLE(bitLength, value, out, offset) {
      if (out === void 0) {
        out = new Uint8Array(bitLength / 8);
      }
      if (offset === void 0) {
        offset = 0;
      }
      if (bitLength % 8 !== 0) {
        throw new Error("writeUintLE supports only bitLengths divisible by 8");
      }
      if (!int_1.isSafeInteger(value)) {
        throw new Error("writeUintLE value must be an integer");
      }
      var div = 1;
      for (var i3 = offset; i3 < offset + bitLength / 8; i3++) {
        out[i3] = value / div & 255;
        div *= 256;
      }
      return out;
    }
    exports.writeUintLE = writeUintLE;
    function readFloat32BE(array, offset) {
      if (offset === void 0) {
        offset = 0;
      }
      var view = new DataView(array.buffer, array.byteOffset, array.byteLength);
      return view.getFloat32(offset);
    }
    exports.readFloat32BE = readFloat32BE;
    function readFloat32LE(array, offset) {
      if (offset === void 0) {
        offset = 0;
      }
      var view = new DataView(array.buffer, array.byteOffset, array.byteLength);
      return view.getFloat32(offset, true);
    }
    exports.readFloat32LE = readFloat32LE;
    function readFloat64BE(array, offset) {
      if (offset === void 0) {
        offset = 0;
      }
      var view = new DataView(array.buffer, array.byteOffset, array.byteLength);
      return view.getFloat64(offset);
    }
    exports.readFloat64BE = readFloat64BE;
    function readFloat64LE(array, offset) {
      if (offset === void 0) {
        offset = 0;
      }
      var view = new DataView(array.buffer, array.byteOffset, array.byteLength);
      return view.getFloat64(offset, true);
    }
    exports.readFloat64LE = readFloat64LE;
    function writeFloat32BE(value, out, offset) {
      if (out === void 0) {
        out = new Uint8Array(4);
      }
      if (offset === void 0) {
        offset = 0;
      }
      var view = new DataView(out.buffer, out.byteOffset, out.byteLength);
      view.setFloat32(offset, value);
      return out;
    }
    exports.writeFloat32BE = writeFloat32BE;
    function writeFloat32LE(value, out, offset) {
      if (out === void 0) {
        out = new Uint8Array(4);
      }
      if (offset === void 0) {
        offset = 0;
      }
      var view = new DataView(out.buffer, out.byteOffset, out.byteLength);
      view.setFloat32(offset, value, true);
      return out;
    }
    exports.writeFloat32LE = writeFloat32LE;
    function writeFloat64BE(value, out, offset) {
      if (out === void 0) {
        out = new Uint8Array(8);
      }
      if (offset === void 0) {
        offset = 0;
      }
      var view = new DataView(out.buffer, out.byteOffset, out.byteLength);
      view.setFloat64(offset, value);
      return out;
    }
    exports.writeFloat64BE = writeFloat64BE;
    function writeFloat64LE(value, out, offset) {
      if (out === void 0) {
        out = new Uint8Array(8);
      }
      if (offset === void 0) {
        offset = 0;
      }
      var view = new DataView(out.buffer, out.byteOffset, out.byteLength);
      view.setFloat64(offset, value, true);
      return out;
    }
    exports.writeFloat64LE = writeFloat64LE;
  }
});

// node_modules/@stablelib/wipe/lib/wipe.js
var require_wipe = __commonJS({
  "node_modules/@stablelib/wipe/lib/wipe.js"(exports) {
    "use strict";
    init_define_process_env();
    Object.defineProperty(exports, "__esModule", { value: true });
    function wipe(array) {
      for (var i3 = 0; i3 < array.length; i3++) {
        array[i3] = 0;
      }
      return array;
    }
    exports.wipe = wipe;
  }
});

// node_modules/@stablelib/chacha/lib/chacha.js
var require_chacha = __commonJS({
  "node_modules/@stablelib/chacha/lib/chacha.js"(exports) {
    "use strict";
    init_define_process_env();
    Object.defineProperty(exports, "__esModule", { value: true });
    var binary_1 = require_binary();
    var wipe_1 = require_wipe();
    var ROUNDS = 20;
    function core(out, input, key) {
      var j0 = 1634760805;
      var j1 = 857760878;
      var j22 = 2036477234;
      var j32 = 1797285236;
      var j42 = key[3] << 24 | key[2] << 16 | key[1] << 8 | key[0];
      var j52 = key[7] << 24 | key[6] << 16 | key[5] << 8 | key[4];
      var j62 = key[11] << 24 | key[10] << 16 | key[9] << 8 | key[8];
      var j7 = key[15] << 24 | key[14] << 16 | key[13] << 8 | key[12];
      var j8 = key[19] << 24 | key[18] << 16 | key[17] << 8 | key[16];
      var j9 = key[23] << 24 | key[22] << 16 | key[21] << 8 | key[20];
      var j10 = key[27] << 24 | key[26] << 16 | key[25] << 8 | key[24];
      var j11 = key[31] << 24 | key[30] << 16 | key[29] << 8 | key[28];
      var j12 = input[3] << 24 | input[2] << 16 | input[1] << 8 | input[0];
      var j13 = input[7] << 24 | input[6] << 16 | input[5] << 8 | input[4];
      var j14 = input[11] << 24 | input[10] << 16 | input[9] << 8 | input[8];
      var j15 = input[15] << 24 | input[14] << 16 | input[13] << 8 | input[12];
      var x0 = j0;
      var x1 = j1;
      var x22 = j22;
      var x3 = j32;
      var x4 = j42;
      var x5 = j52;
      var x6 = j62;
      var x7 = j7;
      var x8 = j8;
      var x9 = j9;
      var x10 = j10;
      var x11 = j11;
      var x12 = j12;
      var x13 = j13;
      var x14 = j14;
      var x15 = j15;
      for (var i3 = 0; i3 < ROUNDS; i3 += 2) {
        x0 = x0 + x4 | 0;
        x12 ^= x0;
        x12 = x12 >>> 32 - 16 | x12 << 16;
        x8 = x8 + x12 | 0;
        x4 ^= x8;
        x4 = x4 >>> 32 - 12 | x4 << 12;
        x1 = x1 + x5 | 0;
        x13 ^= x1;
        x13 = x13 >>> 32 - 16 | x13 << 16;
        x9 = x9 + x13 | 0;
        x5 ^= x9;
        x5 = x5 >>> 32 - 12 | x5 << 12;
        x22 = x22 + x6 | 0;
        x14 ^= x22;
        x14 = x14 >>> 32 - 16 | x14 << 16;
        x10 = x10 + x14 | 0;
        x6 ^= x10;
        x6 = x6 >>> 32 - 12 | x6 << 12;
        x3 = x3 + x7 | 0;
        x15 ^= x3;
        x15 = x15 >>> 32 - 16 | x15 << 16;
        x11 = x11 + x15 | 0;
        x7 ^= x11;
        x7 = x7 >>> 32 - 12 | x7 << 12;
        x22 = x22 + x6 | 0;
        x14 ^= x22;
        x14 = x14 >>> 32 - 8 | x14 << 8;
        x10 = x10 + x14 | 0;
        x6 ^= x10;
        x6 = x6 >>> 32 - 7 | x6 << 7;
        x3 = x3 + x7 | 0;
        x15 ^= x3;
        x15 = x15 >>> 32 - 8 | x15 << 8;
        x11 = x11 + x15 | 0;
        x7 ^= x11;
        x7 = x7 >>> 32 - 7 | x7 << 7;
        x1 = x1 + x5 | 0;
        x13 ^= x1;
        x13 = x13 >>> 32 - 8 | x13 << 8;
        x9 = x9 + x13 | 0;
        x5 ^= x9;
        x5 = x5 >>> 32 - 7 | x5 << 7;
        x0 = x0 + x4 | 0;
        x12 ^= x0;
        x12 = x12 >>> 32 - 8 | x12 << 8;
        x8 = x8 + x12 | 0;
        x4 ^= x8;
        x4 = x4 >>> 32 - 7 | x4 << 7;
        x0 = x0 + x5 | 0;
        x15 ^= x0;
        x15 = x15 >>> 32 - 16 | x15 << 16;
        x10 = x10 + x15 | 0;
        x5 ^= x10;
        x5 = x5 >>> 32 - 12 | x5 << 12;
        x1 = x1 + x6 | 0;
        x12 ^= x1;
        x12 = x12 >>> 32 - 16 | x12 << 16;
        x11 = x11 + x12 | 0;
        x6 ^= x11;
        x6 = x6 >>> 32 - 12 | x6 << 12;
        x22 = x22 + x7 | 0;
        x13 ^= x22;
        x13 = x13 >>> 32 - 16 | x13 << 16;
        x8 = x8 + x13 | 0;
        x7 ^= x8;
        x7 = x7 >>> 32 - 12 | x7 << 12;
        x3 = x3 + x4 | 0;
        x14 ^= x3;
        x14 = x14 >>> 32 - 16 | x14 << 16;
        x9 = x9 + x14 | 0;
        x4 ^= x9;
        x4 = x4 >>> 32 - 12 | x4 << 12;
        x22 = x22 + x7 | 0;
        x13 ^= x22;
        x13 = x13 >>> 32 - 8 | x13 << 8;
        x8 = x8 + x13 | 0;
        x7 ^= x8;
        x7 = x7 >>> 32 - 7 | x7 << 7;
        x3 = x3 + x4 | 0;
        x14 ^= x3;
        x14 = x14 >>> 32 - 8 | x14 << 8;
        x9 = x9 + x14 | 0;
        x4 ^= x9;
        x4 = x4 >>> 32 - 7 | x4 << 7;
        x1 = x1 + x6 | 0;
        x12 ^= x1;
        x12 = x12 >>> 32 - 8 | x12 << 8;
        x11 = x11 + x12 | 0;
        x6 ^= x11;
        x6 = x6 >>> 32 - 7 | x6 << 7;
        x0 = x0 + x5 | 0;
        x15 ^= x0;
        x15 = x15 >>> 32 - 8 | x15 << 8;
        x10 = x10 + x15 | 0;
        x5 ^= x10;
        x5 = x5 >>> 32 - 7 | x5 << 7;
      }
      binary_1.writeUint32LE(x0 + j0 | 0, out, 0);
      binary_1.writeUint32LE(x1 + j1 | 0, out, 4);
      binary_1.writeUint32LE(x22 + j22 | 0, out, 8);
      binary_1.writeUint32LE(x3 + j32 | 0, out, 12);
      binary_1.writeUint32LE(x4 + j42 | 0, out, 16);
      binary_1.writeUint32LE(x5 + j52 | 0, out, 20);
      binary_1.writeUint32LE(x6 + j62 | 0, out, 24);
      binary_1.writeUint32LE(x7 + j7 | 0, out, 28);
      binary_1.writeUint32LE(x8 + j8 | 0, out, 32);
      binary_1.writeUint32LE(x9 + j9 | 0, out, 36);
      binary_1.writeUint32LE(x10 + j10 | 0, out, 40);
      binary_1.writeUint32LE(x11 + j11 | 0, out, 44);
      binary_1.writeUint32LE(x12 + j12 | 0, out, 48);
      binary_1.writeUint32LE(x13 + j13 | 0, out, 52);
      binary_1.writeUint32LE(x14 + j14 | 0, out, 56);
      binary_1.writeUint32LE(x15 + j15 | 0, out, 60);
    }
    function streamXOR(key, nonce, src2, dst, nonceInplaceCounterLength) {
      if (nonceInplaceCounterLength === void 0) {
        nonceInplaceCounterLength = 0;
      }
      if (key.length !== 32) {
        throw new Error("ChaCha: key size must be 32 bytes");
      }
      if (dst.length < src2.length) {
        throw new Error("ChaCha: destination is shorter than source");
      }
      var nc;
      var counterLength;
      if (nonceInplaceCounterLength === 0) {
        if (nonce.length !== 8 && nonce.length !== 12) {
          throw new Error("ChaCha nonce must be 8 or 12 bytes");
        }
        nc = new Uint8Array(16);
        counterLength = nc.length - nonce.length;
        nc.set(nonce, counterLength);
      } else {
        if (nonce.length !== 16) {
          throw new Error("ChaCha nonce with counter must be 16 bytes");
        }
        nc = nonce;
        counterLength = nonceInplaceCounterLength;
      }
      var block = new Uint8Array(64);
      for (var i3 = 0; i3 < src2.length; i3 += 64) {
        core(block, nc, key);
        for (var j7 = i3; j7 < i3 + 64 && j7 < src2.length; j7++) {
          dst[j7] = src2[j7] ^ block[j7 - i3];
        }
        incrementCounter(nc, 0, counterLength);
      }
      wipe_1.wipe(block);
      if (nonceInplaceCounterLength === 0) {
        wipe_1.wipe(nc);
      }
      return dst;
    }
    exports.streamXOR = streamXOR;
    function stream(key, nonce, dst, nonceInplaceCounterLength) {
      if (nonceInplaceCounterLength === void 0) {
        nonceInplaceCounterLength = 0;
      }
      wipe_1.wipe(dst);
      return streamXOR(key, nonce, dst, dst, nonceInplaceCounterLength);
    }
    exports.stream = stream;
    function incrementCounter(counter, pos, len) {
      var carry = 1;
      while (len--) {
        carry = carry + (counter[pos] & 255) | 0;
        counter[pos] = carry & 255;
        carry >>>= 8;
        pos++;
      }
      if (carry > 0) {
        throw new Error("ChaCha: counter overflow");
      }
    }
  }
});

// node_modules/@stablelib/constant-time/lib/constant-time.js
var require_constant_time = __commonJS({
  "node_modules/@stablelib/constant-time/lib/constant-time.js"(exports) {
    "use strict";
    init_define_process_env();
    Object.defineProperty(exports, "__esModule", { value: true });
    function select(subject, resultIfOne, resultIfZero) {
      return ~(subject - 1) & resultIfOne | subject - 1 & resultIfZero;
    }
    exports.select = select;
    function lessOrEqual(a2, b5) {
      return (a2 | 0) - (b5 | 0) - 1 >>> 31 & 1;
    }
    exports.lessOrEqual = lessOrEqual;
    function compare2(a2, b5) {
      if (a2.length !== b5.length) {
        return 0;
      }
      var result = 0;
      for (var i3 = 0; i3 < a2.length; i3++) {
        result |= a2[i3] ^ b5[i3];
      }
      return 1 & result - 1 >>> 8;
    }
    exports.compare = compare2;
    function equal(a2, b5) {
      if (a2.length === 0 || b5.length === 0) {
        return false;
      }
      return compare2(a2, b5) !== 0;
    }
    exports.equal = equal;
  }
});

// node_modules/@stablelib/poly1305/lib/poly1305.js
var require_poly1305 = __commonJS({
  "node_modules/@stablelib/poly1305/lib/poly1305.js"(exports) {
    "use strict";
    init_define_process_env();
    Object.defineProperty(exports, "__esModule", { value: true });
    var constant_time_1 = require_constant_time();
    var wipe_1 = require_wipe();
    exports.DIGEST_LENGTH = 16;
    var Poly1305 = function() {
      function Poly13052(key) {
        this.digestLength = exports.DIGEST_LENGTH;
        this._buffer = new Uint8Array(16);
        this._r = new Uint16Array(10);
        this._h = new Uint16Array(10);
        this._pad = new Uint16Array(8);
        this._leftover = 0;
        this._fin = 0;
        this._finished = false;
        var t0 = key[0] | key[1] << 8;
        this._r[0] = t0 & 8191;
        var t1 = key[2] | key[3] << 8;
        this._r[1] = (t0 >>> 13 | t1 << 3) & 8191;
        var t2 = key[4] | key[5] << 8;
        this._r[2] = (t1 >>> 10 | t2 << 6) & 7939;
        var t3 = key[6] | key[7] << 8;
        this._r[3] = (t2 >>> 7 | t3 << 9) & 8191;
        var t4 = key[8] | key[9] << 8;
        this._r[4] = (t3 >>> 4 | t4 << 12) & 255;
        this._r[5] = t4 >>> 1 & 8190;
        var t5 = key[10] | key[11] << 8;
        this._r[6] = (t4 >>> 14 | t5 << 2) & 8191;
        var t6 = key[12] | key[13] << 8;
        this._r[7] = (t5 >>> 11 | t6 << 5) & 8065;
        var t7 = key[14] | key[15] << 8;
        this._r[8] = (t6 >>> 8 | t7 << 8) & 8191;
        this._r[9] = t7 >>> 5 & 127;
        this._pad[0] = key[16] | key[17] << 8;
        this._pad[1] = key[18] | key[19] << 8;
        this._pad[2] = key[20] | key[21] << 8;
        this._pad[3] = key[22] | key[23] << 8;
        this._pad[4] = key[24] | key[25] << 8;
        this._pad[5] = key[26] | key[27] << 8;
        this._pad[6] = key[28] | key[29] << 8;
        this._pad[7] = key[30] | key[31] << 8;
      }
      Poly13052.prototype._blocks = function(m4, mpos, bytes) {
        var hibit = this._fin ? 0 : 1 << 11;
        var h0 = this._h[0], h1 = this._h[1], h2 = this._h[2], h3 = this._h[3], h4 = this._h[4], h5 = this._h[5], h6 = this._h[6], h7 = this._h[7], h8 = this._h[8], h9 = this._h[9];
        var r0 = this._r[0], r1 = this._r[1], r2 = this._r[2], r3 = this._r[3], r4 = this._r[4], r5 = this._r[5], r6 = this._r[6], r7 = this._r[7], r8 = this._r[8], r9 = this._r[9];
        while (bytes >= 16) {
          var t0 = m4[mpos + 0] | m4[mpos + 1] << 8;
          h0 += t0 & 8191;
          var t1 = m4[mpos + 2] | m4[mpos + 3] << 8;
          h1 += (t0 >>> 13 | t1 << 3) & 8191;
          var t2 = m4[mpos + 4] | m4[mpos + 5] << 8;
          h2 += (t1 >>> 10 | t2 << 6) & 8191;
          var t3 = m4[mpos + 6] | m4[mpos + 7] << 8;
          h3 += (t2 >>> 7 | t3 << 9) & 8191;
          var t4 = m4[mpos + 8] | m4[mpos + 9] << 8;
          h4 += (t3 >>> 4 | t4 << 12) & 8191;
          h5 += t4 >>> 1 & 8191;
          var t5 = m4[mpos + 10] | m4[mpos + 11] << 8;
          h6 += (t4 >>> 14 | t5 << 2) & 8191;
          var t6 = m4[mpos + 12] | m4[mpos + 13] << 8;
          h7 += (t5 >>> 11 | t6 << 5) & 8191;
          var t7 = m4[mpos + 14] | m4[mpos + 15] << 8;
          h8 += (t6 >>> 8 | t7 << 8) & 8191;
          h9 += t7 >>> 5 | hibit;
          var c3 = 0;
          var d0 = c3;
          d0 += h0 * r0;
          d0 += h1 * (5 * r9);
          d0 += h2 * (5 * r8);
          d0 += h3 * (5 * r7);
          d0 += h4 * (5 * r6);
          c3 = d0 >>> 13;
          d0 &= 8191;
          d0 += h5 * (5 * r5);
          d0 += h6 * (5 * r4);
          d0 += h7 * (5 * r3);
          d0 += h8 * (5 * r2);
          d0 += h9 * (5 * r1);
          c3 += d0 >>> 13;
          d0 &= 8191;
          var d1 = c3;
          d1 += h0 * r1;
          d1 += h1 * r0;
          d1 += h2 * (5 * r9);
          d1 += h3 * (5 * r8);
          d1 += h4 * (5 * r7);
          c3 = d1 >>> 13;
          d1 &= 8191;
          d1 += h5 * (5 * r6);
          d1 += h6 * (5 * r5);
          d1 += h7 * (5 * r4);
          d1 += h8 * (5 * r3);
          d1 += h9 * (5 * r2);
          c3 += d1 >>> 13;
          d1 &= 8191;
          var d2 = c3;
          d2 += h0 * r2;
          d2 += h1 * r1;
          d2 += h2 * r0;
          d2 += h3 * (5 * r9);
          d2 += h4 * (5 * r8);
          c3 = d2 >>> 13;
          d2 &= 8191;
          d2 += h5 * (5 * r7);
          d2 += h6 * (5 * r6);
          d2 += h7 * (5 * r5);
          d2 += h8 * (5 * r4);
          d2 += h9 * (5 * r3);
          c3 += d2 >>> 13;
          d2 &= 8191;
          var d3 = c3;
          d3 += h0 * r3;
          d3 += h1 * r2;
          d3 += h2 * r1;
          d3 += h3 * r0;
          d3 += h4 * (5 * r9);
          c3 = d3 >>> 13;
          d3 &= 8191;
          d3 += h5 * (5 * r8);
          d3 += h6 * (5 * r7);
          d3 += h7 * (5 * r6);
          d3 += h8 * (5 * r5);
          d3 += h9 * (5 * r4);
          c3 += d3 >>> 13;
          d3 &= 8191;
          var d4 = c3;
          d4 += h0 * r4;
          d4 += h1 * r3;
          d4 += h2 * r2;
          d4 += h3 * r1;
          d4 += h4 * r0;
          c3 = d4 >>> 13;
          d4 &= 8191;
          d4 += h5 * (5 * r9);
          d4 += h6 * (5 * r8);
          d4 += h7 * (5 * r7);
          d4 += h8 * (5 * r6);
          d4 += h9 * (5 * r5);
          c3 += d4 >>> 13;
          d4 &= 8191;
          var d5 = c3;
          d5 += h0 * r5;
          d5 += h1 * r4;
          d5 += h2 * r3;
          d5 += h3 * r2;
          d5 += h4 * r1;
          c3 = d5 >>> 13;
          d5 &= 8191;
          d5 += h5 * r0;
          d5 += h6 * (5 * r9);
          d5 += h7 * (5 * r8);
          d5 += h8 * (5 * r7);
          d5 += h9 * (5 * r6);
          c3 += d5 >>> 13;
          d5 &= 8191;
          var d6 = c3;
          d6 += h0 * r6;
          d6 += h1 * r5;
          d6 += h2 * r4;
          d6 += h3 * r3;
          d6 += h4 * r2;
          c3 = d6 >>> 13;
          d6 &= 8191;
          d6 += h5 * r1;
          d6 += h6 * r0;
          d6 += h7 * (5 * r9);
          d6 += h8 * (5 * r8);
          d6 += h9 * (5 * r7);
          c3 += d6 >>> 13;
          d6 &= 8191;
          var d7 = c3;
          d7 += h0 * r7;
          d7 += h1 * r6;
          d7 += h2 * r5;
          d7 += h3 * r4;
          d7 += h4 * r3;
          c3 = d7 >>> 13;
          d7 &= 8191;
          d7 += h5 * r2;
          d7 += h6 * r1;
          d7 += h7 * r0;
          d7 += h8 * (5 * r9);
          d7 += h9 * (5 * r8);
          c3 += d7 >>> 13;
          d7 &= 8191;
          var d8 = c3;
          d8 += h0 * r8;
          d8 += h1 * r7;
          d8 += h2 * r6;
          d8 += h3 * r5;
          d8 += h4 * r4;
          c3 = d8 >>> 13;
          d8 &= 8191;
          d8 += h5 * r3;
          d8 += h6 * r2;
          d8 += h7 * r1;
          d8 += h8 * r0;
          d8 += h9 * (5 * r9);
          c3 += d8 >>> 13;
          d8 &= 8191;
          var d9 = c3;
          d9 += h0 * r9;
          d9 += h1 * r8;
          d9 += h2 * r7;
          d9 += h3 * r6;
          d9 += h4 * r5;
          c3 = d9 >>> 13;
          d9 &= 8191;
          d9 += h5 * r4;
          d9 += h6 * r3;
          d9 += h7 * r2;
          d9 += h8 * r1;
          d9 += h9 * r0;
          c3 += d9 >>> 13;
          d9 &= 8191;
          c3 = (c3 << 2) + c3 | 0;
          c3 = c3 + d0 | 0;
          d0 = c3 & 8191;
          c3 = c3 >>> 13;
          d1 += c3;
          h0 = d0;
          h1 = d1;
          h2 = d2;
          h3 = d3;
          h4 = d4;
          h5 = d5;
          h6 = d6;
          h7 = d7;
          h8 = d8;
          h9 = d9;
          mpos += 16;
          bytes -= 16;
        }
        this._h[0] = h0;
        this._h[1] = h1;
        this._h[2] = h2;
        this._h[3] = h3;
        this._h[4] = h4;
        this._h[5] = h5;
        this._h[6] = h6;
        this._h[7] = h7;
        this._h[8] = h8;
        this._h[9] = h9;
      };
      Poly13052.prototype.finish = function(mac, macpos) {
        if (macpos === void 0) {
          macpos = 0;
        }
        var g3 = new Uint16Array(10);
        var c3;
        var mask;
        var f4;
        var i3;
        if (this._leftover) {
          i3 = this._leftover;
          this._buffer[i3++] = 1;
          for (; i3 < 16; i3++) {
            this._buffer[i3] = 0;
          }
          this._fin = 1;
          this._blocks(this._buffer, 0, 16);
        }
        c3 = this._h[1] >>> 13;
        this._h[1] &= 8191;
        for (i3 = 2; i3 < 10; i3++) {
          this._h[i3] += c3;
          c3 = this._h[i3] >>> 13;
          this._h[i3] &= 8191;
        }
        this._h[0] += c3 * 5;
        c3 = this._h[0] >>> 13;
        this._h[0] &= 8191;
        this._h[1] += c3;
        c3 = this._h[1] >>> 13;
        this._h[1] &= 8191;
        this._h[2] += c3;
        g3[0] = this._h[0] + 5;
        c3 = g3[0] >>> 13;
        g3[0] &= 8191;
        for (i3 = 1; i3 < 10; i3++) {
          g3[i3] = this._h[i3] + c3;
          c3 = g3[i3] >>> 13;
          g3[i3] &= 8191;
        }
        g3[9] -= 1 << 13;
        mask = (c3 ^ 1) - 1;
        for (i3 = 0; i3 < 10; i3++) {
          g3[i3] &= mask;
        }
        mask = ~mask;
        for (i3 = 0; i3 < 10; i3++) {
          this._h[i3] = this._h[i3] & mask | g3[i3];
        }
        this._h[0] = (this._h[0] | this._h[1] << 13) & 65535;
        this._h[1] = (this._h[1] >>> 3 | this._h[2] << 10) & 65535;
        this._h[2] = (this._h[2] >>> 6 | this._h[3] << 7) & 65535;
        this._h[3] = (this._h[3] >>> 9 | this._h[4] << 4) & 65535;
        this._h[4] = (this._h[4] >>> 12 | this._h[5] << 1 | this._h[6] << 14) & 65535;
        this._h[5] = (this._h[6] >>> 2 | this._h[7] << 11) & 65535;
        this._h[6] = (this._h[7] >>> 5 | this._h[8] << 8) & 65535;
        this._h[7] = (this._h[8] >>> 8 | this._h[9] << 5) & 65535;
        f4 = this._h[0] + this._pad[0];
        this._h[0] = f4 & 65535;
        for (i3 = 1; i3 < 8; i3++) {
          f4 = (this._h[i3] + this._pad[i3] | 0) + (f4 >>> 16) | 0;
          this._h[i3] = f4 & 65535;
        }
        mac[macpos + 0] = this._h[0] >>> 0;
        mac[macpos + 1] = this._h[0] >>> 8;
        mac[macpos + 2] = this._h[1] >>> 0;
        mac[macpos + 3] = this._h[1] >>> 8;
        mac[macpos + 4] = this._h[2] >>> 0;
        mac[macpos + 5] = this._h[2] >>> 8;
        mac[macpos + 6] = this._h[3] >>> 0;
        mac[macpos + 7] = this._h[3] >>> 8;
        mac[macpos + 8] = this._h[4] >>> 0;
        mac[macpos + 9] = this._h[4] >>> 8;
        mac[macpos + 10] = this._h[5] >>> 0;
        mac[macpos + 11] = this._h[5] >>> 8;
        mac[macpos + 12] = this._h[6] >>> 0;
        mac[macpos + 13] = this._h[6] >>> 8;
        mac[macpos + 14] = this._h[7] >>> 0;
        mac[macpos + 15] = this._h[7] >>> 8;
        this._finished = true;
        return this;
      };
      Poly13052.prototype.update = function(m4) {
        var mpos = 0;
        var bytes = m4.length;
        var want;
        if (this._leftover) {
          want = 16 - this._leftover;
          if (want > bytes) {
            want = bytes;
          }
          for (var i3 = 0; i3 < want; i3++) {
            this._buffer[this._leftover + i3] = m4[mpos + i3];
          }
          bytes -= want;
          mpos += want;
          this._leftover += want;
          if (this._leftover < 16) {
            return this;
          }
          this._blocks(this._buffer, 0, 16);
          this._leftover = 0;
        }
        if (bytes >= 16) {
          want = bytes - bytes % 16;
          this._blocks(m4, mpos, want);
          mpos += want;
          bytes -= want;
        }
        if (bytes) {
          for (var i3 = 0; i3 < bytes; i3++) {
            this._buffer[this._leftover + i3] = m4[mpos + i3];
          }
          this._leftover += bytes;
        }
        return this;
      };
      Poly13052.prototype.digest = function() {
        if (this._finished) {
          throw new Error("Poly1305 was finished");
        }
        var mac = new Uint8Array(16);
        this.finish(mac);
        return mac;
      };
      Poly13052.prototype.clean = function() {
        wipe_1.wipe(this._buffer);
        wipe_1.wipe(this._r);
        wipe_1.wipe(this._h);
        wipe_1.wipe(this._pad);
        this._leftover = 0;
        this._fin = 0;
        this._finished = true;
        return this;
      };
      return Poly13052;
    }();
    exports.Poly1305 = Poly1305;
    function oneTimeAuth(key, data) {
      var h2 = new Poly1305(key);
      h2.update(data);
      var digest2 = h2.digest();
      h2.clean();
      return digest2;
    }
    exports.oneTimeAuth = oneTimeAuth;
    function equal(a2, b5) {
      if (a2.length !== exports.DIGEST_LENGTH || b5.length !== exports.DIGEST_LENGTH) {
        return false;
      }
      return constant_time_1.equal(a2, b5);
    }
    exports.equal = equal;
  }
});

// node_modules/@stablelib/chacha20poly1305/lib/chacha20poly1305.js
var require_chacha20poly1305 = __commonJS({
  "node_modules/@stablelib/chacha20poly1305/lib/chacha20poly1305.js"(exports) {
    "use strict";
    init_define_process_env();
    Object.defineProperty(exports, "__esModule", { value: true });
    var chacha_1 = require_chacha();
    var poly1305_1 = require_poly1305();
    var wipe_1 = require_wipe();
    var binary_1 = require_binary();
    var constant_time_1 = require_constant_time();
    exports.KEY_LENGTH = 32;
    exports.NONCE_LENGTH = 12;
    exports.TAG_LENGTH = 16;
    var ZEROS = new Uint8Array(16);
    var ChaCha20Poly1305 = function() {
      function ChaCha20Poly13052(key) {
        this.nonceLength = exports.NONCE_LENGTH;
        this.tagLength = exports.TAG_LENGTH;
        if (key.length !== exports.KEY_LENGTH) {
          throw new Error("ChaCha20Poly1305 needs 32-byte key");
        }
        this._key = new Uint8Array(key);
      }
      ChaCha20Poly13052.prototype.seal = function(nonce, plaintext, associatedData, dst) {
        if (nonce.length > 16) {
          throw new Error("ChaCha20Poly1305: incorrect nonce length");
        }
        var counter = new Uint8Array(16);
        counter.set(nonce, counter.length - nonce.length);
        var authKey = new Uint8Array(32);
        chacha_1.stream(this._key, counter, authKey, 4);
        var resultLength = plaintext.length + this.tagLength;
        var result;
        if (dst) {
          if (dst.length !== resultLength) {
            throw new Error("ChaCha20Poly1305: incorrect destination length");
          }
          result = dst;
        } else {
          result = new Uint8Array(resultLength);
        }
        chacha_1.streamXOR(this._key, counter, plaintext, result, 4);
        this._authenticate(result.subarray(result.length - this.tagLength, result.length), authKey, result.subarray(0, result.length - this.tagLength), associatedData);
        wipe_1.wipe(counter);
        return result;
      };
      ChaCha20Poly13052.prototype.open = function(nonce, sealed, associatedData, dst) {
        if (nonce.length > 16) {
          throw new Error("ChaCha20Poly1305: incorrect nonce length");
        }
        if (sealed.length < this.tagLength) {
          return null;
        }
        var counter = new Uint8Array(16);
        counter.set(nonce, counter.length - nonce.length);
        var authKey = new Uint8Array(32);
        chacha_1.stream(this._key, counter, authKey, 4);
        var calculatedTag = new Uint8Array(this.tagLength);
        this._authenticate(calculatedTag, authKey, sealed.subarray(0, sealed.length - this.tagLength), associatedData);
        if (!constant_time_1.equal(calculatedTag, sealed.subarray(sealed.length - this.tagLength, sealed.length))) {
          return null;
        }
        var resultLength = sealed.length - this.tagLength;
        var result;
        if (dst) {
          if (dst.length !== resultLength) {
            throw new Error("ChaCha20Poly1305: incorrect destination length");
          }
          result = dst;
        } else {
          result = new Uint8Array(resultLength);
        }
        chacha_1.streamXOR(this._key, counter, sealed.subarray(0, sealed.length - this.tagLength), result, 4);
        wipe_1.wipe(counter);
        return result;
      };
      ChaCha20Poly13052.prototype.clean = function() {
        wipe_1.wipe(this._key);
        return this;
      };
      ChaCha20Poly13052.prototype._authenticate = function(tagOut, authKey, ciphertext, associatedData) {
        var h2 = new poly1305_1.Poly1305(authKey);
        if (associatedData) {
          h2.update(associatedData);
          if (associatedData.length % 16 > 0) {
            h2.update(ZEROS.subarray(associatedData.length % 16));
          }
        }
        h2.update(ciphertext);
        if (ciphertext.length % 16 > 0) {
          h2.update(ZEROS.subarray(ciphertext.length % 16));
        }
        var length2 = new Uint8Array(8);
        if (associatedData) {
          binary_1.writeUint64LE(associatedData.length, length2);
        }
        h2.update(length2);
        binary_1.writeUint64LE(ciphertext.length, length2);
        h2.update(length2);
        var tag = h2.digest();
        for (var i3 = 0; i3 < tag.length; i3++) {
          tagOut[i3] = tag[i3];
        }
        h2.clean();
        wipe_1.wipe(tag);
        wipe_1.wipe(length2);
      };
      return ChaCha20Poly13052;
    }();
    exports.ChaCha20Poly1305 = ChaCha20Poly1305;
  }
});

// node_modules/@stablelib/hash/lib/hash.js
var require_hash = __commonJS({
  "node_modules/@stablelib/hash/lib/hash.js"(exports) {
    "use strict";
    init_define_process_env();
    Object.defineProperty(exports, "__esModule", { value: true });
    function isSerializableHash(h2) {
      return typeof h2.saveState !== "undefined" && typeof h2.restoreState !== "undefined" && typeof h2.cleanSavedState !== "undefined";
    }
    exports.isSerializableHash = isSerializableHash;
  }
});

// node_modules/@stablelib/hmac/lib/hmac.js
var require_hmac = __commonJS({
  "node_modules/@stablelib/hmac/lib/hmac.js"(exports) {
    "use strict";
    init_define_process_env();
    Object.defineProperty(exports, "__esModule", { value: true });
    var hash_1 = require_hash();
    var constant_time_1 = require_constant_time();
    var wipe_1 = require_wipe();
    var HMAC = function() {
      function HMAC2(hash, key) {
        this._finished = false;
        this._inner = new hash();
        this._outer = new hash();
        this.blockSize = this._outer.blockSize;
        this.digestLength = this._outer.digestLength;
        var pad = new Uint8Array(this.blockSize);
        if (key.length > this.blockSize) {
          this._inner.update(key).finish(pad).clean();
        } else {
          pad.set(key);
        }
        for (var i3 = 0; i3 < pad.length; i3++) {
          pad[i3] ^= 54;
        }
        this._inner.update(pad);
        for (var i3 = 0; i3 < pad.length; i3++) {
          pad[i3] ^= 54 ^ 92;
        }
        this._outer.update(pad);
        if (hash_1.isSerializableHash(this._inner) && hash_1.isSerializableHash(this._outer)) {
          this._innerKeyedState = this._inner.saveState();
          this._outerKeyedState = this._outer.saveState();
        }
        wipe_1.wipe(pad);
      }
      HMAC2.prototype.reset = function() {
        if (!hash_1.isSerializableHash(this._inner) || !hash_1.isSerializableHash(this._outer)) {
          throw new Error("hmac: can't reset() because hash doesn't implement restoreState()");
        }
        this._inner.restoreState(this._innerKeyedState);
        this._outer.restoreState(this._outerKeyedState);
        this._finished = false;
        return this;
      };
      HMAC2.prototype.clean = function() {
        if (hash_1.isSerializableHash(this._inner)) {
          this._inner.cleanSavedState(this._innerKeyedState);
        }
        if (hash_1.isSerializableHash(this._outer)) {
          this._outer.cleanSavedState(this._outerKeyedState);
        }
        this._inner.clean();
        this._outer.clean();
      };
      HMAC2.prototype.update = function(data) {
        this._inner.update(data);
        return this;
      };
      HMAC2.prototype.finish = function(out) {
        if (this._finished) {
          this._outer.finish(out);
          return this;
        }
        this._inner.finish(out);
        this._outer.update(out.subarray(0, this.digestLength)).finish(out);
        this._finished = true;
        return this;
      };
      HMAC2.prototype.digest = function() {
        var out = new Uint8Array(this.digestLength);
        this.finish(out);
        return out;
      };
      HMAC2.prototype.saveState = function() {
        if (!hash_1.isSerializableHash(this._inner)) {
          throw new Error("hmac: can't saveState() because hash doesn't implement it");
        }
        return this._inner.saveState();
      };
      HMAC2.prototype.restoreState = function(savedState) {
        if (!hash_1.isSerializableHash(this._inner) || !hash_1.isSerializableHash(this._outer)) {
          throw new Error("hmac: can't restoreState() because hash doesn't implement it");
        }
        this._inner.restoreState(savedState);
        this._outer.restoreState(this._outerKeyedState);
        this._finished = false;
        return this;
      };
      HMAC2.prototype.cleanSavedState = function(savedState) {
        if (!hash_1.isSerializableHash(this._inner)) {
          throw new Error("hmac: can't cleanSavedState() because hash doesn't implement it");
        }
        this._inner.cleanSavedState(savedState);
      };
      return HMAC2;
    }();
    exports.HMAC = HMAC;
    function hmac(hash, key, data) {
      var h2 = new HMAC(hash, key);
      h2.update(data);
      var digest2 = h2.digest();
      h2.clean();
      return digest2;
    }
    exports.hmac = hmac;
    exports.equal = constant_time_1.equal;
  }
});

// node_modules/@stablelib/hkdf/lib/hkdf.js
var require_hkdf = __commonJS({
  "node_modules/@stablelib/hkdf/lib/hkdf.js"(exports) {
    "use strict";
    init_define_process_env();
    Object.defineProperty(exports, "__esModule", { value: true });
    var hmac_1 = require_hmac();
    var wipe_1 = require_wipe();
    var HKDF = function() {
      function HKDF2(hash, key, salt, info) {
        if (salt === void 0) {
          salt = new Uint8Array(0);
        }
        this._counter = new Uint8Array(1);
        this._hash = hash;
        this._info = info;
        var okm = hmac_1.hmac(this._hash, salt, key);
        this._hmac = new hmac_1.HMAC(hash, okm);
        this._buffer = new Uint8Array(this._hmac.digestLength);
        this._bufpos = this._buffer.length;
      }
      HKDF2.prototype._fillBuffer = function() {
        this._counter[0]++;
        var ctr = this._counter[0];
        if (ctr === 0) {
          throw new Error("hkdf: cannot expand more");
        }
        this._hmac.reset();
        if (ctr > 1) {
          this._hmac.update(this._buffer);
        }
        if (this._info) {
          this._hmac.update(this._info);
        }
        this._hmac.update(this._counter);
        this._hmac.finish(this._buffer);
        this._bufpos = 0;
      };
      HKDF2.prototype.expand = function(length2) {
        var out = new Uint8Array(length2);
        for (var i3 = 0; i3 < out.length; i3++) {
          if (this._bufpos === this._buffer.length) {
            this._fillBuffer();
          }
          out[i3] = this._buffer[this._bufpos++];
        }
        return out;
      };
      HKDF2.prototype.clean = function() {
        this._hmac.clean();
        wipe_1.wipe(this._buffer);
        wipe_1.wipe(this._counter);
        this._bufpos = 0;
      };
      return HKDF2;
    }();
    exports.HKDF = HKDF;
  }
});

// node_modules/@stablelib/random/lib/source/browser.js
var require_browser = __commonJS({
  "node_modules/@stablelib/random/lib/source/browser.js"(exports) {
    "use strict";
    init_define_process_env();
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.BrowserRandomSource = void 0;
    var QUOTA = 65536;
    var BrowserRandomSource = class {
      constructor() {
        this.isAvailable = false;
        this.isInstantiated = false;
        const browserCrypto = typeof self !== "undefined" ? self.crypto || self.msCrypto : null;
        if (browserCrypto && browserCrypto.getRandomValues !== void 0) {
          this._crypto = browserCrypto;
          this.isAvailable = true;
          this.isInstantiated = true;
        }
      }
      randomBytes(length2) {
        if (!this.isAvailable || !this._crypto) {
          throw new Error("Browser random byte generator is not available.");
        }
        const out = new Uint8Array(length2);
        for (let i3 = 0; i3 < out.length; i3 += QUOTA) {
          this._crypto.getRandomValues(out.subarray(i3, i3 + Math.min(out.length - i3, QUOTA)));
        }
        return out;
      }
    };
    exports.BrowserRandomSource = BrowserRandomSource;
  }
});

// browser-external:crypto
var crypto_exports = {};
__export(crypto_exports, {
  default: () => crypto_default
});
var crypto_default;
var init_crypto = __esm({
  "browser-external:crypto"() {
    init_define_process_env();
    crypto_default = new Proxy({}, {
      get() {
        throw new Error('Module "crypto" has been externalized for browser compatibility and cannot be accessed in client code.');
      }
    });
  }
});

// node_modules/@stablelib/random/lib/source/node.js
var require_node = __commonJS({
  "node_modules/@stablelib/random/lib/source/node.js"(exports) {
    "use strict";
    init_define_process_env();
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.NodeRandomSource = void 0;
    var wipe_1 = require_wipe();
    var NodeRandomSource = class {
      constructor() {
        this.isAvailable = false;
        this.isInstantiated = false;
        if (typeof __require !== "undefined") {
          const nodeCrypto = (init_crypto(), __toCommonJS(crypto_exports));
          if (nodeCrypto && nodeCrypto.randomBytes) {
            this._crypto = nodeCrypto;
            this.isAvailable = true;
            this.isInstantiated = true;
          }
        }
      }
      randomBytes(length2) {
        if (!this.isAvailable || !this._crypto) {
          throw new Error("Node.js random byte generator is not available.");
        }
        let buffer = this._crypto.randomBytes(length2);
        if (buffer.length !== length2) {
          throw new Error("NodeRandomSource: got fewer bytes than requested");
        }
        const out = new Uint8Array(length2);
        for (let i3 = 0; i3 < out.length; i3++) {
          out[i3] = buffer[i3];
        }
        (0, wipe_1.wipe)(buffer);
        return out;
      }
    };
    exports.NodeRandomSource = NodeRandomSource;
  }
});

// node_modules/@stablelib/random/lib/source/system.js
var require_system = __commonJS({
  "node_modules/@stablelib/random/lib/source/system.js"(exports) {
    "use strict";
    init_define_process_env();
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.SystemRandomSource = void 0;
    var browser_1 = require_browser();
    var node_1 = require_node();
    var SystemRandomSource = class {
      constructor() {
        this.isAvailable = false;
        this.name = "";
        this._source = new browser_1.BrowserRandomSource();
        if (this._source.isAvailable) {
          this.isAvailable = true;
          this.name = "Browser";
          return;
        }
        this._source = new node_1.NodeRandomSource();
        if (this._source.isAvailable) {
          this.isAvailable = true;
          this.name = "Node";
          return;
        }
      }
      randomBytes(length2) {
        if (!this.isAvailable) {
          throw new Error("System random byte generator is not available.");
        }
        return this._source.randomBytes(length2);
      }
    };
    exports.SystemRandomSource = SystemRandomSource;
  }
});

// node_modules/@stablelib/random/lib/random.js
var require_random = __commonJS({
  "node_modules/@stablelib/random/lib/random.js"(exports) {
    "use strict";
    init_define_process_env();
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.randomStringForEntropy = exports.randomString = exports.randomUint32 = exports.randomBytes = exports.defaultRandomSource = void 0;
    var system_1 = require_system();
    var binary_1 = require_binary();
    var wipe_1 = require_wipe();
    exports.defaultRandomSource = new system_1.SystemRandomSource();
    function randomBytes2(length2, prng = exports.defaultRandomSource) {
      return prng.randomBytes(length2);
    }
    exports.randomBytes = randomBytes2;
    function randomUint32(prng = exports.defaultRandomSource) {
      const buf = randomBytes2(4, prng);
      const result = (0, binary_1.readUint32LE)(buf);
      (0, wipe_1.wipe)(buf);
      return result;
    }
    exports.randomUint32 = randomUint32;
    var ALPHANUMERIC = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz";
    function randomString(length2, charset = ALPHANUMERIC, prng = exports.defaultRandomSource) {
      if (charset.length < 2) {
        throw new Error("randomString charset is too short");
      }
      if (charset.length > 256) {
        throw new Error("randomString charset is too long");
      }
      let out = "";
      const charsLen = charset.length;
      const maxByte = 256 - 256 % charsLen;
      while (length2 > 0) {
        const buf = randomBytes2(Math.ceil(length2 * 256 / maxByte), prng);
        for (let i3 = 0; i3 < buf.length && length2 > 0; i3++) {
          const randomByte = buf[i3];
          if (randomByte < maxByte) {
            out += charset.charAt(randomByte % charsLen);
            length2--;
          }
        }
        (0, wipe_1.wipe)(buf);
      }
      return out;
    }
    exports.randomString = randomString;
    function randomStringForEntropy(bits, charset = ALPHANUMERIC, prng = exports.defaultRandomSource) {
      const length2 = Math.ceil(bits / (Math.log(charset.length) / Math.LN2));
      return randomString(length2, charset, prng);
    }
    exports.randomStringForEntropy = randomStringForEntropy;
  }
});

// node_modules/@stablelib/sha256/lib/sha256.js
var require_sha256 = __commonJS({
  "node_modules/@stablelib/sha256/lib/sha256.js"(exports) {
    "use strict";
    init_define_process_env();
    Object.defineProperty(exports, "__esModule", { value: true });
    var binary_1 = require_binary();
    var wipe_1 = require_wipe();
    exports.DIGEST_LENGTH = 32;
    exports.BLOCK_SIZE = 64;
    var SHA256 = function() {
      function SHA2562() {
        this.digestLength = exports.DIGEST_LENGTH;
        this.blockSize = exports.BLOCK_SIZE;
        this._state = new Int32Array(8);
        this._temp = new Int32Array(64);
        this._buffer = new Uint8Array(128);
        this._bufferLength = 0;
        this._bytesHashed = 0;
        this._finished = false;
        this.reset();
      }
      SHA2562.prototype._initState = function() {
        this._state[0] = 1779033703;
        this._state[1] = 3144134277;
        this._state[2] = 1013904242;
        this._state[3] = 2773480762;
        this._state[4] = 1359893119;
        this._state[5] = 2600822924;
        this._state[6] = 528734635;
        this._state[7] = 1541459225;
      };
      SHA2562.prototype.reset = function() {
        this._initState();
        this._bufferLength = 0;
        this._bytesHashed = 0;
        this._finished = false;
        return this;
      };
      SHA2562.prototype.clean = function() {
        wipe_1.wipe(this._buffer);
        wipe_1.wipe(this._temp);
        this.reset();
      };
      SHA2562.prototype.update = function(data, dataLength) {
        if (dataLength === void 0) {
          dataLength = data.length;
        }
        if (this._finished) {
          throw new Error("SHA256: can't update because hash was finished.");
        }
        var dataPos = 0;
        this._bytesHashed += dataLength;
        if (this._bufferLength > 0) {
          while (this._bufferLength < this.blockSize && dataLength > 0) {
            this._buffer[this._bufferLength++] = data[dataPos++];
            dataLength--;
          }
          if (this._bufferLength === this.blockSize) {
            hashBlocks(this._temp, this._state, this._buffer, 0, this.blockSize);
            this._bufferLength = 0;
          }
        }
        if (dataLength >= this.blockSize) {
          dataPos = hashBlocks(this._temp, this._state, data, dataPos, dataLength);
          dataLength %= this.blockSize;
        }
        while (dataLength > 0) {
          this._buffer[this._bufferLength++] = data[dataPos++];
          dataLength--;
        }
        return this;
      };
      SHA2562.prototype.finish = function(out) {
        if (!this._finished) {
          var bytesHashed = this._bytesHashed;
          var left = this._bufferLength;
          var bitLenHi = bytesHashed / 536870912 | 0;
          var bitLenLo = bytesHashed << 3;
          var padLength = bytesHashed % 64 < 56 ? 64 : 128;
          this._buffer[left] = 128;
          for (var i3 = left + 1; i3 < padLength - 8; i3++) {
            this._buffer[i3] = 0;
          }
          binary_1.writeUint32BE(bitLenHi, this._buffer, padLength - 8);
          binary_1.writeUint32BE(bitLenLo, this._buffer, padLength - 4);
          hashBlocks(this._temp, this._state, this._buffer, 0, padLength);
          this._finished = true;
        }
        for (var i3 = 0; i3 < this.digestLength / 4; i3++) {
          binary_1.writeUint32BE(this._state[i3], out, i3 * 4);
        }
        return this;
      };
      SHA2562.prototype.digest = function() {
        var out = new Uint8Array(this.digestLength);
        this.finish(out);
        return out;
      };
      SHA2562.prototype.saveState = function() {
        if (this._finished) {
          throw new Error("SHA256: cannot save finished state");
        }
        return {
          state: new Int32Array(this._state),
          buffer: this._bufferLength > 0 ? new Uint8Array(this._buffer) : void 0,
          bufferLength: this._bufferLength,
          bytesHashed: this._bytesHashed
        };
      };
      SHA2562.prototype.restoreState = function(savedState) {
        this._state.set(savedState.state);
        this._bufferLength = savedState.bufferLength;
        if (savedState.buffer) {
          this._buffer.set(savedState.buffer);
        }
        this._bytesHashed = savedState.bytesHashed;
        this._finished = false;
        return this;
      };
      SHA2562.prototype.cleanSavedState = function(savedState) {
        wipe_1.wipe(savedState.state);
        if (savedState.buffer) {
          wipe_1.wipe(savedState.buffer);
        }
        savedState.bufferLength = 0;
        savedState.bytesHashed = 0;
      };
      return SHA2562;
    }();
    exports.SHA256 = SHA256;
    var K4 = new Int32Array([
      1116352408,
      1899447441,
      3049323471,
      3921009573,
      961987163,
      1508970993,
      2453635748,
      2870763221,
      3624381080,
      310598401,
      607225278,
      1426881987,
      1925078388,
      2162078206,
      2614888103,
      3248222580,
      3835390401,
      4022224774,
      264347078,
      604807628,
      770255983,
      1249150122,
      1555081692,
      1996064986,
      2554220882,
      2821834349,
      2952996808,
      3210313671,
      3336571891,
      3584528711,
      113926993,
      338241895,
      666307205,
      773529912,
      1294757372,
      1396182291,
      1695183700,
      1986661051,
      2177026350,
      2456956037,
      2730485921,
      2820302411,
      3259730800,
      3345764771,
      3516065817,
      3600352804,
      4094571909,
      275423344,
      430227734,
      506948616,
      659060556,
      883997877,
      958139571,
      1322822218,
      1537002063,
      1747873779,
      1955562222,
      2024104815,
      2227730452,
      2361852424,
      2428436474,
      2756734187,
      3204031479,
      3329325298
    ]);
    function hashBlocks(w8, v, p4, pos, len) {
      while (len >= 64) {
        var a2 = v[0];
        var b5 = v[1];
        var c3 = v[2];
        var d2 = v[3];
        var e = v[4];
        var f4 = v[5];
        var g3 = v[6];
        var h2 = v[7];
        for (var i3 = 0; i3 < 16; i3++) {
          var j7 = pos + i3 * 4;
          w8[i3] = binary_1.readUint32BE(p4, j7);
        }
        for (var i3 = 16; i3 < 64; i3++) {
          var u4 = w8[i3 - 2];
          var t1 = (u4 >>> 17 | u4 << 32 - 17) ^ (u4 >>> 19 | u4 << 32 - 19) ^ u4 >>> 10;
          u4 = w8[i3 - 15];
          var t2 = (u4 >>> 7 | u4 << 32 - 7) ^ (u4 >>> 18 | u4 << 32 - 18) ^ u4 >>> 3;
          w8[i3] = (t1 + w8[i3 - 7] | 0) + (t2 + w8[i3 - 16] | 0);
        }
        for (var i3 = 0; i3 < 64; i3++) {
          var t1 = (((e >>> 6 | e << 32 - 6) ^ (e >>> 11 | e << 32 - 11) ^ (e >>> 25 | e << 32 - 25)) + (e & f4 ^ ~e & g3) | 0) + (h2 + (K4[i3] + w8[i3] | 0) | 0) | 0;
          var t2 = ((a2 >>> 2 | a2 << 32 - 2) ^ (a2 >>> 13 | a2 << 32 - 13) ^ (a2 >>> 22 | a2 << 32 - 22)) + (a2 & b5 ^ a2 & c3 ^ b5 & c3) | 0;
          h2 = g3;
          g3 = f4;
          f4 = e;
          e = d2 + t1 | 0;
          d2 = c3;
          c3 = b5;
          b5 = a2;
          a2 = t1 + t2 | 0;
        }
        v[0] += a2;
        v[1] += b5;
        v[2] += c3;
        v[3] += d2;
        v[4] += e;
        v[5] += f4;
        v[6] += g3;
        v[7] += h2;
        pos += 64;
        len -= 64;
      }
      return pos;
    }
    function hash(data) {
      var h2 = new SHA256();
      h2.update(data);
      var digest2 = h2.digest();
      h2.clean();
      return digest2;
    }
    exports.hash = hash;
  }
});

// node_modules/@stablelib/x25519/lib/x25519.js
var require_x25519 = __commonJS({
  "node_modules/@stablelib/x25519/lib/x25519.js"(exports) {
    "use strict";
    init_define_process_env();
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.sharedKey = exports.generateKeyPair = exports.generateKeyPairFromSeed = exports.scalarMultBase = exports.scalarMult = exports.SHARED_KEY_LENGTH = exports.SECRET_KEY_LENGTH = exports.PUBLIC_KEY_LENGTH = void 0;
    var random_1 = require_random();
    var wipe_1 = require_wipe();
    exports.PUBLIC_KEY_LENGTH = 32;
    exports.SECRET_KEY_LENGTH = 32;
    exports.SHARED_KEY_LENGTH = 32;
    function gf(init) {
      const r = new Float64Array(16);
      if (init) {
        for (let i3 = 0; i3 < init.length; i3++) {
          r[i3] = init[i3];
        }
      }
      return r;
    }
    var _9 = new Uint8Array(32);
    _9[0] = 9;
    var _121665 = gf([56129, 1]);
    function car25519(o) {
      let c3 = 1;
      for (let i3 = 0; i3 < 16; i3++) {
        let v = o[i3] + c3 + 65535;
        c3 = Math.floor(v / 65536);
        o[i3] = v - c3 * 65536;
      }
      o[0] += c3 - 1 + 37 * (c3 - 1);
    }
    function sel25519(p4, q4, b5) {
      const c3 = ~(b5 - 1);
      for (let i3 = 0; i3 < 16; i3++) {
        const t = c3 & (p4[i3] ^ q4[i3]);
        p4[i3] ^= t;
        q4[i3] ^= t;
      }
    }
    function pack25519(o, n2) {
      const m4 = gf();
      const t = gf();
      for (let i3 = 0; i3 < 16; i3++) {
        t[i3] = n2[i3];
      }
      car25519(t);
      car25519(t);
      car25519(t);
      for (let j7 = 0; j7 < 2; j7++) {
        m4[0] = t[0] - 65517;
        for (let i3 = 1; i3 < 15; i3++) {
          m4[i3] = t[i3] - 65535 - (m4[i3 - 1] >> 16 & 1);
          m4[i3 - 1] &= 65535;
        }
        m4[15] = t[15] - 32767 - (m4[14] >> 16 & 1);
        const b5 = m4[15] >> 16 & 1;
        m4[14] &= 65535;
        sel25519(t, m4, 1 - b5);
      }
      for (let i3 = 0; i3 < 16; i3++) {
        o[2 * i3] = t[i3] & 255;
        o[2 * i3 + 1] = t[i3] >> 8;
      }
    }
    function unpack25519(o, n2) {
      for (let i3 = 0; i3 < 16; i3++) {
        o[i3] = n2[2 * i3] + (n2[2 * i3 + 1] << 8);
      }
      o[15] &= 32767;
    }
    function add(o, a2, b5) {
      for (let i3 = 0; i3 < 16; i3++) {
        o[i3] = a2[i3] + b5[i3];
      }
    }
    function sub(o, a2, b5) {
      for (let i3 = 0; i3 < 16; i3++) {
        o[i3] = a2[i3] - b5[i3];
      }
    }
    function mul(o, a2, b5) {
      let v, c3, t0 = 0, t1 = 0, t2 = 0, t3 = 0, t4 = 0, t5 = 0, t6 = 0, t7 = 0, t8 = 0, t9 = 0, t10 = 0, t11 = 0, t12 = 0, t13 = 0, t14 = 0, t15 = 0, t16 = 0, t17 = 0, t18 = 0, t19 = 0, t20 = 0, t21 = 0, t22 = 0, t23 = 0, t24 = 0, t25 = 0, t26 = 0, t27 = 0, t28 = 0, t29 = 0, t30 = 0, b0 = b5[0], b1 = b5[1], b22 = b5[2], b32 = b5[3], b42 = b5[4], b52 = b5[5], b6 = b5[6], b7 = b5[7], b8 = b5[8], b9 = b5[9], b10 = b5[10], b11 = b5[11], b12 = b5[12], b13 = b5[13], b14 = b5[14], b15 = b5[15];
      v = a2[0];
      t0 += v * b0;
      t1 += v * b1;
      t2 += v * b22;
      t3 += v * b32;
      t4 += v * b42;
      t5 += v * b52;
      t6 += v * b6;
      t7 += v * b7;
      t8 += v * b8;
      t9 += v * b9;
      t10 += v * b10;
      t11 += v * b11;
      t12 += v * b12;
      t13 += v * b13;
      t14 += v * b14;
      t15 += v * b15;
      v = a2[1];
      t1 += v * b0;
      t2 += v * b1;
      t3 += v * b22;
      t4 += v * b32;
      t5 += v * b42;
      t6 += v * b52;
      t7 += v * b6;
      t8 += v * b7;
      t9 += v * b8;
      t10 += v * b9;
      t11 += v * b10;
      t12 += v * b11;
      t13 += v * b12;
      t14 += v * b13;
      t15 += v * b14;
      t16 += v * b15;
      v = a2[2];
      t2 += v * b0;
      t3 += v * b1;
      t4 += v * b22;
      t5 += v * b32;
      t6 += v * b42;
      t7 += v * b52;
      t8 += v * b6;
      t9 += v * b7;
      t10 += v * b8;
      t11 += v * b9;
      t12 += v * b10;
      t13 += v * b11;
      t14 += v * b12;
      t15 += v * b13;
      t16 += v * b14;
      t17 += v * b15;
      v = a2[3];
      t3 += v * b0;
      t4 += v * b1;
      t5 += v * b22;
      t6 += v * b32;
      t7 += v * b42;
      t8 += v * b52;
      t9 += v * b6;
      t10 += v * b7;
      t11 += v * b8;
      t12 += v * b9;
      t13 += v * b10;
      t14 += v * b11;
      t15 += v * b12;
      t16 += v * b13;
      t17 += v * b14;
      t18 += v * b15;
      v = a2[4];
      t4 += v * b0;
      t5 += v * b1;
      t6 += v * b22;
      t7 += v * b32;
      t8 += v * b42;
      t9 += v * b52;
      t10 += v * b6;
      t11 += v * b7;
      t12 += v * b8;
      t13 += v * b9;
      t14 += v * b10;
      t15 += v * b11;
      t16 += v * b12;
      t17 += v * b13;
      t18 += v * b14;
      t19 += v * b15;
      v = a2[5];
      t5 += v * b0;
      t6 += v * b1;
      t7 += v * b22;
      t8 += v * b32;
      t9 += v * b42;
      t10 += v * b52;
      t11 += v * b6;
      t12 += v * b7;
      t13 += v * b8;
      t14 += v * b9;
      t15 += v * b10;
      t16 += v * b11;
      t17 += v * b12;
      t18 += v * b13;
      t19 += v * b14;
      t20 += v * b15;
      v = a2[6];
      t6 += v * b0;
      t7 += v * b1;
      t8 += v * b22;
      t9 += v * b32;
      t10 += v * b42;
      t11 += v * b52;
      t12 += v * b6;
      t13 += v * b7;
      t14 += v * b8;
      t15 += v * b9;
      t16 += v * b10;
      t17 += v * b11;
      t18 += v * b12;
      t19 += v * b13;
      t20 += v * b14;
      t21 += v * b15;
      v = a2[7];
      t7 += v * b0;
      t8 += v * b1;
      t9 += v * b22;
      t10 += v * b32;
      t11 += v * b42;
      t12 += v * b52;
      t13 += v * b6;
      t14 += v * b7;
      t15 += v * b8;
      t16 += v * b9;
      t17 += v * b10;
      t18 += v * b11;
      t19 += v * b12;
      t20 += v * b13;
      t21 += v * b14;
      t22 += v * b15;
      v = a2[8];
      t8 += v * b0;
      t9 += v * b1;
      t10 += v * b22;
      t11 += v * b32;
      t12 += v * b42;
      t13 += v * b52;
      t14 += v * b6;
      t15 += v * b7;
      t16 += v * b8;
      t17 += v * b9;
      t18 += v * b10;
      t19 += v * b11;
      t20 += v * b12;
      t21 += v * b13;
      t22 += v * b14;
      t23 += v * b15;
      v = a2[9];
      t9 += v * b0;
      t10 += v * b1;
      t11 += v * b22;
      t12 += v * b32;
      t13 += v * b42;
      t14 += v * b52;
      t15 += v * b6;
      t16 += v * b7;
      t17 += v * b8;
      t18 += v * b9;
      t19 += v * b10;
      t20 += v * b11;
      t21 += v * b12;
      t22 += v * b13;
      t23 += v * b14;
      t24 += v * b15;
      v = a2[10];
      t10 += v * b0;
      t11 += v * b1;
      t12 += v * b22;
      t13 += v * b32;
      t14 += v * b42;
      t15 += v * b52;
      t16 += v * b6;
      t17 += v * b7;
      t18 += v * b8;
      t19 += v * b9;
      t20 += v * b10;
      t21 += v * b11;
      t22 += v * b12;
      t23 += v * b13;
      t24 += v * b14;
      t25 += v * b15;
      v = a2[11];
      t11 += v * b0;
      t12 += v * b1;
      t13 += v * b22;
      t14 += v * b32;
      t15 += v * b42;
      t16 += v * b52;
      t17 += v * b6;
      t18 += v * b7;
      t19 += v * b8;
      t20 += v * b9;
      t21 += v * b10;
      t22 += v * b11;
      t23 += v * b12;
      t24 += v * b13;
      t25 += v * b14;
      t26 += v * b15;
      v = a2[12];
      t12 += v * b0;
      t13 += v * b1;
      t14 += v * b22;
      t15 += v * b32;
      t16 += v * b42;
      t17 += v * b52;
      t18 += v * b6;
      t19 += v * b7;
      t20 += v * b8;
      t21 += v * b9;
      t22 += v * b10;
      t23 += v * b11;
      t24 += v * b12;
      t25 += v * b13;
      t26 += v * b14;
      t27 += v * b15;
      v = a2[13];
      t13 += v * b0;
      t14 += v * b1;
      t15 += v * b22;
      t16 += v * b32;
      t17 += v * b42;
      t18 += v * b52;
      t19 += v * b6;
      t20 += v * b7;
      t21 += v * b8;
      t22 += v * b9;
      t23 += v * b10;
      t24 += v * b11;
      t25 += v * b12;
      t26 += v * b13;
      t27 += v * b14;
      t28 += v * b15;
      v = a2[14];
      t14 += v * b0;
      t15 += v * b1;
      t16 += v * b22;
      t17 += v * b32;
      t18 += v * b42;
      t19 += v * b52;
      t20 += v * b6;
      t21 += v * b7;
      t22 += v * b8;
      t23 += v * b9;
      t24 += v * b10;
      t25 += v * b11;
      t26 += v * b12;
      t27 += v * b13;
      t28 += v * b14;
      t29 += v * b15;
      v = a2[15];
      t15 += v * b0;
      t16 += v * b1;
      t17 += v * b22;
      t18 += v * b32;
      t19 += v * b42;
      t20 += v * b52;
      t21 += v * b6;
      t22 += v * b7;
      t23 += v * b8;
      t24 += v * b9;
      t25 += v * b10;
      t26 += v * b11;
      t27 += v * b12;
      t28 += v * b13;
      t29 += v * b14;
      t30 += v * b15;
      t0 += 38 * t16;
      t1 += 38 * t17;
      t2 += 38 * t18;
      t3 += 38 * t19;
      t4 += 38 * t20;
      t5 += 38 * t21;
      t6 += 38 * t22;
      t7 += 38 * t23;
      t8 += 38 * t24;
      t9 += 38 * t25;
      t10 += 38 * t26;
      t11 += 38 * t27;
      t12 += 38 * t28;
      t13 += 38 * t29;
      t14 += 38 * t30;
      c3 = 1;
      v = t0 + c3 + 65535;
      c3 = Math.floor(v / 65536);
      t0 = v - c3 * 65536;
      v = t1 + c3 + 65535;
      c3 = Math.floor(v / 65536);
      t1 = v - c3 * 65536;
      v = t2 + c3 + 65535;
      c3 = Math.floor(v / 65536);
      t2 = v - c3 * 65536;
      v = t3 + c3 + 65535;
      c3 = Math.floor(v / 65536);
      t3 = v - c3 * 65536;
      v = t4 + c3 + 65535;
      c3 = Math.floor(v / 65536);
      t4 = v - c3 * 65536;
      v = t5 + c3 + 65535;
      c3 = Math.floor(v / 65536);
      t5 = v - c3 * 65536;
      v = t6 + c3 + 65535;
      c3 = Math.floor(v / 65536);
      t6 = v - c3 * 65536;
      v = t7 + c3 + 65535;
      c3 = Math.floor(v / 65536);
      t7 = v - c3 * 65536;
      v = t8 + c3 + 65535;
      c3 = Math.floor(v / 65536);
      t8 = v - c3 * 65536;
      v = t9 + c3 + 65535;
      c3 = Math.floor(v / 65536);
      t9 = v - c3 * 65536;
      v = t10 + c3 + 65535;
      c3 = Math.floor(v / 65536);
      t10 = v - c3 * 65536;
      v = t11 + c3 + 65535;
      c3 = Math.floor(v / 65536);
      t11 = v - c3 * 65536;
      v = t12 + c3 + 65535;
      c3 = Math.floor(v / 65536);
      t12 = v - c3 * 65536;
      v = t13 + c3 + 65535;
      c3 = Math.floor(v / 65536);
      t13 = v - c3 * 65536;
      v = t14 + c3 + 65535;
      c3 = Math.floor(v / 65536);
      t14 = v - c3 * 65536;
      v = t15 + c3 + 65535;
      c3 = Math.floor(v / 65536);
      t15 = v - c3 * 65536;
      t0 += c3 - 1 + 37 * (c3 - 1);
      c3 = 1;
      v = t0 + c3 + 65535;
      c3 = Math.floor(v / 65536);
      t0 = v - c3 * 65536;
      v = t1 + c3 + 65535;
      c3 = Math.floor(v / 65536);
      t1 = v - c3 * 65536;
      v = t2 + c3 + 65535;
      c3 = Math.floor(v / 65536);
      t2 = v - c3 * 65536;
      v = t3 + c3 + 65535;
      c3 = Math.floor(v / 65536);
      t3 = v - c3 * 65536;
      v = t4 + c3 + 65535;
      c3 = Math.floor(v / 65536);
      t4 = v - c3 * 65536;
      v = t5 + c3 + 65535;
      c3 = Math.floor(v / 65536);
      t5 = v - c3 * 65536;
      v = t6 + c3 + 65535;
      c3 = Math.floor(v / 65536);
      t6 = v - c3 * 65536;
      v = t7 + c3 + 65535;
      c3 = Math.floor(v / 65536);
      t7 = v - c3 * 65536;
      v = t8 + c3 + 65535;
      c3 = Math.floor(v / 65536);
      t8 = v - c3 * 65536;
      v = t9 + c3 + 65535;
      c3 = Math.floor(v / 65536);
      t9 = v - c3 * 65536;
      v = t10 + c3 + 65535;
      c3 = Math.floor(v / 65536);
      t10 = v - c3 * 65536;
      v = t11 + c3 + 65535;
      c3 = Math.floor(v / 65536);
      t11 = v - c3 * 65536;
      v = t12 + c3 + 65535;
      c3 = Math.floor(v / 65536);
      t12 = v - c3 * 65536;
      v = t13 + c3 + 65535;
      c3 = Math.floor(v / 65536);
      t13 = v - c3 * 65536;
      v = t14 + c3 + 65535;
      c3 = Math.floor(v / 65536);
      t14 = v - c3 * 65536;
      v = t15 + c3 + 65535;
      c3 = Math.floor(v / 65536);
      t15 = v - c3 * 65536;
      t0 += c3 - 1 + 37 * (c3 - 1);
      o[0] = t0;
      o[1] = t1;
      o[2] = t2;
      o[3] = t3;
      o[4] = t4;
      o[5] = t5;
      o[6] = t6;
      o[7] = t7;
      o[8] = t8;
      o[9] = t9;
      o[10] = t10;
      o[11] = t11;
      o[12] = t12;
      o[13] = t13;
      o[14] = t14;
      o[15] = t15;
    }
    function square(o, a2) {
      mul(o, a2, a2);
    }
    function inv25519(o, inp) {
      const c3 = gf();
      for (let i3 = 0; i3 < 16; i3++) {
        c3[i3] = inp[i3];
      }
      for (let i3 = 253; i3 >= 0; i3--) {
        square(c3, c3);
        if (i3 !== 2 && i3 !== 4) {
          mul(c3, c3, inp);
        }
      }
      for (let i3 = 0; i3 < 16; i3++) {
        o[i3] = c3[i3];
      }
    }
    function scalarMult(n2, p4) {
      const z6 = new Uint8Array(32);
      const x3 = new Float64Array(80);
      const a2 = gf(), b5 = gf(), c3 = gf(), d2 = gf(), e = gf(), f4 = gf();
      for (let i3 = 0; i3 < 31; i3++) {
        z6[i3] = n2[i3];
      }
      z6[31] = n2[31] & 127 | 64;
      z6[0] &= 248;
      unpack25519(x3, p4);
      for (let i3 = 0; i3 < 16; i3++) {
        b5[i3] = x3[i3];
      }
      a2[0] = d2[0] = 1;
      for (let i3 = 254; i3 >= 0; --i3) {
        const r = z6[i3 >>> 3] >>> (i3 & 7) & 1;
        sel25519(a2, b5, r);
        sel25519(c3, d2, r);
        add(e, a2, c3);
        sub(a2, a2, c3);
        add(c3, b5, d2);
        sub(b5, b5, d2);
        square(d2, e);
        square(f4, a2);
        mul(a2, c3, a2);
        mul(c3, b5, e);
        add(e, a2, c3);
        sub(a2, a2, c3);
        square(b5, a2);
        sub(c3, d2, f4);
        mul(a2, c3, _121665);
        add(a2, a2, d2);
        mul(c3, c3, a2);
        mul(a2, d2, f4);
        mul(d2, b5, x3);
        square(b5, e);
        sel25519(a2, b5, r);
        sel25519(c3, d2, r);
      }
      for (let i3 = 0; i3 < 16; i3++) {
        x3[i3 + 16] = a2[i3];
        x3[i3 + 32] = c3[i3];
        x3[i3 + 48] = b5[i3];
        x3[i3 + 64] = d2[i3];
      }
      const x32 = x3.subarray(32);
      const x16 = x3.subarray(16);
      inv25519(x32, x32);
      mul(x16, x16, x32);
      const q4 = new Uint8Array(32);
      pack25519(q4, x16);
      return q4;
    }
    exports.scalarMult = scalarMult;
    function scalarMultBase(n2) {
      return scalarMult(n2, _9);
    }
    exports.scalarMultBase = scalarMultBase;
    function generateKeyPairFromSeed2(seed) {
      if (seed.length !== exports.SECRET_KEY_LENGTH) {
        throw new Error(`x25519: seed must be ${exports.SECRET_KEY_LENGTH} bytes`);
      }
      const secretKey = new Uint8Array(seed);
      const publicKey = scalarMultBase(secretKey);
      return {
        publicKey,
        secretKey
      };
    }
    exports.generateKeyPairFromSeed = generateKeyPairFromSeed2;
    function generateKeyPair6(prng) {
      const seed = (0, random_1.randomBytes)(32, prng);
      const result = generateKeyPairFromSeed2(seed);
      (0, wipe_1.wipe)(seed);
      return result;
    }
    exports.generateKeyPair = generateKeyPair6;
    function sharedKey5(mySecretKey, theirPublicKey, rejectZero = false) {
      if (mySecretKey.length !== exports.PUBLIC_KEY_LENGTH) {
        throw new Error("X25519: incorrect secret key length");
      }
      if (theirPublicKey.length !== exports.PUBLIC_KEY_LENGTH) {
        throw new Error("X25519: incorrect public key length");
      }
      const result = scalarMult(mySecretKey, theirPublicKey);
      if (rejectZero) {
        let zeros = 0;
        for (let i3 = 0; i3 < result.length; i3++) {
          zeros |= result[i3];
        }
        if (zeros === 0) {
          throw new Error("X25519: invalid shared key");
        }
      }
      return result;
    }
    exports.sharedKey = sharedKey5;
  }
});

// node_modules/@walletconnect/time/node_modules/tslib/tslib.js
var require_tslib = __commonJS({
  "node_modules/@walletconnect/time/node_modules/tslib/tslib.js"(exports, module) {
    init_define_process_env();
    var __extends;
    var __assign;
    var __rest;
    var __decorate;
    var __param;
    var __metadata;
    var __awaiter;
    var __generator;
    var __exportStar;
    var __values;
    var __read;
    var __spread;
    var __spreadArrays;
    var __await;
    var __asyncGenerator;
    var __asyncDelegator;
    var __asyncValues;
    var __makeTemplateObject;
    var __importStar;
    var __importDefault;
    var __classPrivateFieldGet;
    var __classPrivateFieldSet;
    var __createBinding;
    (function(factory) {
      var root = typeof global === "object" ? global : typeof self === "object" ? self : typeof this === "object" ? this : {};
      if (typeof define === "function" && define.amd) {
        define("tslib", ["exports"], function(exports2) {
          factory(createExporter(root, createExporter(exports2)));
        });
      } else if (typeof module === "object" && typeof module.exports === "object") {
        factory(createExporter(root, createExporter(module.exports)));
      } else {
        factory(createExporter(root));
      }
      function createExporter(exports2, previous) {
        if (exports2 !== root) {
          if (typeof Object.create === "function") {
            Object.defineProperty(exports2, "__esModule", { value: true });
          } else {
            exports2.__esModule = true;
          }
        }
        return function(id, v) {
          return exports2[id] = previous ? previous(id, v) : v;
        };
      }
    })(function(exporter) {
      var extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b5) {
        d2.__proto__ = b5;
      } || function(d2, b5) {
        for (var p4 in b5)
          if (b5.hasOwnProperty(p4))
            d2[p4] = b5[p4];
      };
      __extends = function(d2, b5) {
        extendStatics(d2, b5);
        function __() {
          this.constructor = d2;
        }
        d2.prototype = b5 === null ? Object.create(b5) : (__.prototype = b5.prototype, new __());
      };
      __assign = Object.assign || function(t) {
        for (var s, i3 = 1, n2 = arguments.length; i3 < n2; i3++) {
          s = arguments[i3];
          for (var p4 in s)
            if (Object.prototype.hasOwnProperty.call(s, p4))
              t[p4] = s[p4];
        }
        return t;
      };
      __rest = function(s, e) {
        var t = {};
        for (var p4 in s)
          if (Object.prototype.hasOwnProperty.call(s, p4) && e.indexOf(p4) < 0)
            t[p4] = s[p4];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
          for (var i3 = 0, p4 = Object.getOwnPropertySymbols(s); i3 < p4.length; i3++) {
            if (e.indexOf(p4[i3]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p4[i3]))
              t[p4[i3]] = s[p4[i3]];
          }
        return t;
      };
      __decorate = function(decorators, target, key, desc) {
        var c3 = arguments.length, r = c3 < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d2;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
          r = Reflect.decorate(decorators, target, key, desc);
        else
          for (var i3 = decorators.length - 1; i3 >= 0; i3--)
            if (d2 = decorators[i3])
              r = (c3 < 3 ? d2(r) : c3 > 3 ? d2(target, key, r) : d2(target, key)) || r;
        return c3 > 3 && r && Object.defineProperty(target, key, r), r;
      };
      __param = function(paramIndex, decorator) {
        return function(target, key) {
          decorator(target, key, paramIndex);
        };
      };
      __metadata = function(metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
          return Reflect.metadata(metadataKey, metadataValue);
      };
      __awaiter = function(thisArg, _arguments, P3, generator) {
        function adopt(value) {
          return value instanceof P3 ? value : new P3(function(resolve) {
            resolve(value);
          });
        }
        return new (P3 || (P3 = Promise))(function(resolve, reject) {
          function fulfilled(value) {
            try {
              step(generator.next(value));
            } catch (e) {
              reject(e);
            }
          }
          function rejected(value) {
            try {
              step(generator["throw"](value));
            } catch (e) {
              reject(e);
            }
          }
          function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
          }
          step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
      };
      __generator = function(thisArg, body) {
        var _3 = { label: 0, sent: function() {
          if (t[0] & 1)
            throw t[1];
          return t[1];
        }, trys: [], ops: [] }, f4, y3, t, g3;
        return g3 = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g3[Symbol.iterator] = function() {
          return this;
        }), g3;
        function verb(n2) {
          return function(v) {
            return step([n2, v]);
          };
        }
        function step(op) {
          if (f4)
            throw new TypeError("Generator is already executing.");
          while (_3)
            try {
              if (f4 = 1, y3 && (t = op[0] & 2 ? y3["return"] : op[0] ? y3["throw"] || ((t = y3["return"]) && t.call(y3), 0) : y3.next) && !(t = t.call(y3, op[1])).done)
                return t;
              if (y3 = 0, t)
                op = [op[0] & 2, t.value];
              switch (op[0]) {
                case 0:
                case 1:
                  t = op;
                  break;
                case 4:
                  _3.label++;
                  return { value: op[1], done: false };
                case 5:
                  _3.label++;
                  y3 = op[1];
                  op = [0];
                  continue;
                case 7:
                  op = _3.ops.pop();
                  _3.trys.pop();
                  continue;
                default:
                  if (!(t = _3.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                    _3 = 0;
                    continue;
                  }
                  if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
                    _3.label = op[1];
                    break;
                  }
                  if (op[0] === 6 && _3.label < t[1]) {
                    _3.label = t[1];
                    t = op;
                    break;
                  }
                  if (t && _3.label < t[2]) {
                    _3.label = t[2];
                    _3.ops.push(op);
                    break;
                  }
                  if (t[2])
                    _3.ops.pop();
                  _3.trys.pop();
                  continue;
              }
              op = body.call(thisArg, _3);
            } catch (e) {
              op = [6, e];
              y3 = 0;
            } finally {
              f4 = t = 0;
            }
          if (op[0] & 5)
            throw op[1];
          return { value: op[0] ? op[1] : void 0, done: true };
        }
      };
      __createBinding = function(o, m4, k3, k22) {
        if (k22 === void 0)
          k22 = k3;
        o[k22] = m4[k3];
      };
      __exportStar = function(m4, exports2) {
        for (var p4 in m4)
          if (p4 !== "default" && !exports2.hasOwnProperty(p4))
            exports2[p4] = m4[p4];
      };
      __values = function(o) {
        var s = typeof Symbol === "function" && Symbol.iterator, m4 = s && o[s], i3 = 0;
        if (m4)
          return m4.call(o);
        if (o && typeof o.length === "number")
          return {
            next: function() {
              if (o && i3 >= o.length)
                o = void 0;
              return { value: o && o[i3++], done: !o };
            }
          };
        throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
      };
      __read = function(o, n2) {
        var m4 = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m4)
          return o;
        var i3 = m4.call(o), r, ar = [], e;
        try {
          while ((n2 === void 0 || n2-- > 0) && !(r = i3.next()).done)
            ar.push(r.value);
        } catch (error) {
          e = { error };
        } finally {
          try {
            if (r && !r.done && (m4 = i3["return"]))
              m4.call(i3);
          } finally {
            if (e)
              throw e.error;
          }
        }
        return ar;
      };
      __spread = function() {
        for (var ar = [], i3 = 0; i3 < arguments.length; i3++)
          ar = ar.concat(__read(arguments[i3]));
        return ar;
      };
      __spreadArrays = function() {
        for (var s = 0, i3 = 0, il = arguments.length; i3 < il; i3++)
          s += arguments[i3].length;
        for (var r = Array(s), k3 = 0, i3 = 0; i3 < il; i3++)
          for (var a2 = arguments[i3], j7 = 0, jl = a2.length; j7 < jl; j7++, k3++)
            r[k3] = a2[j7];
        return r;
      };
      __await = function(v) {
        return this instanceof __await ? (this.v = v, this) : new __await(v);
      };
      __asyncGenerator = function(thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator)
          throw new TypeError("Symbol.asyncIterator is not defined.");
        var g3 = generator.apply(thisArg, _arguments || []), i3, q4 = [];
        return i3 = {}, verb("next"), verb("throw"), verb("return"), i3[Symbol.asyncIterator] = function() {
          return this;
        }, i3;
        function verb(n2) {
          if (g3[n2])
            i3[n2] = function(v) {
              return new Promise(function(a2, b5) {
                q4.push([n2, v, a2, b5]) > 1 || resume(n2, v);
              });
            };
        }
        function resume(n2, v) {
          try {
            step(g3[n2](v));
          } catch (e) {
            settle(q4[0][3], e);
          }
        }
        function step(r) {
          r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q4[0][2], r);
        }
        function fulfill(value) {
          resume("next", value);
        }
        function reject(value) {
          resume("throw", value);
        }
        function settle(f4, v) {
          if (f4(v), q4.shift(), q4.length)
            resume(q4[0][0], q4[0][1]);
        }
      };
      __asyncDelegator = function(o) {
        var i3, p4;
        return i3 = {}, verb("next"), verb("throw", function(e) {
          throw e;
        }), verb("return"), i3[Symbol.iterator] = function() {
          return this;
        }, i3;
        function verb(n2, f4) {
          i3[n2] = o[n2] ? function(v) {
            return (p4 = !p4) ? { value: __await(o[n2](v)), done: n2 === "return" } : f4 ? f4(v) : v;
          } : f4;
        }
      };
      __asyncValues = function(o) {
        if (!Symbol.asyncIterator)
          throw new TypeError("Symbol.asyncIterator is not defined.");
        var m4 = o[Symbol.asyncIterator], i3;
        return m4 ? m4.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i3 = {}, verb("next"), verb("throw"), verb("return"), i3[Symbol.asyncIterator] = function() {
          return this;
        }, i3);
        function verb(n2) {
          i3[n2] = o[n2] && function(v) {
            return new Promise(function(resolve, reject) {
              v = o[n2](v), settle(resolve, reject, v.done, v.value);
            });
          };
        }
        function settle(resolve, reject, d2, v) {
          Promise.resolve(v).then(function(v2) {
            resolve({ value: v2, done: d2 });
          }, reject);
        }
      };
      __makeTemplateObject = function(cooked, raw) {
        if (Object.defineProperty) {
          Object.defineProperty(cooked, "raw", { value: raw });
        } else {
          cooked.raw = raw;
        }
        return cooked;
      };
      __importStar = function(mod) {
        if (mod && mod.__esModule)
          return mod;
        var result = {};
        if (mod != null) {
          for (var k3 in mod)
            if (Object.hasOwnProperty.call(mod, k3))
              result[k3] = mod[k3];
        }
        result["default"] = mod;
        return result;
      };
      __importDefault = function(mod) {
        return mod && mod.__esModule ? mod : { "default": mod };
      };
      __classPrivateFieldGet = function(receiver, privateMap) {
        if (!privateMap.has(receiver)) {
          throw new TypeError("attempted to get private field on non-instance");
        }
        return privateMap.get(receiver);
      };
      __classPrivateFieldSet = function(receiver, privateMap, value) {
        if (!privateMap.has(receiver)) {
          throw new TypeError("attempted to set private field on non-instance");
        }
        privateMap.set(receiver, value);
        return value;
      };
      exporter("__extends", __extends);
      exporter("__assign", __assign);
      exporter("__rest", __rest);
      exporter("__decorate", __decorate);
      exporter("__param", __param);
      exporter("__metadata", __metadata);
      exporter("__awaiter", __awaiter);
      exporter("__generator", __generator);
      exporter("__exportStar", __exportStar);
      exporter("__createBinding", __createBinding);
      exporter("__values", __values);
      exporter("__read", __read);
      exporter("__spread", __spread);
      exporter("__spreadArrays", __spreadArrays);
      exporter("__await", __await);
      exporter("__asyncGenerator", __asyncGenerator);
      exporter("__asyncDelegator", __asyncDelegator);
      exporter("__asyncValues", __asyncValues);
      exporter("__makeTemplateObject", __makeTemplateObject);
      exporter("__importStar", __importStar);
      exporter("__importDefault", __importDefault);
      exporter("__classPrivateFieldGet", __classPrivateFieldGet);
      exporter("__classPrivateFieldSet", __classPrivateFieldSet);
    });
  }
});

// node_modules/@walletconnect/time/dist/cjs/utils/delay.js
var require_delay = __commonJS({
  "node_modules/@walletconnect/time/dist/cjs/utils/delay.js"(exports) {
    "use strict";
    init_define_process_env();
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.delay = void 0;
    function delay(timeout) {
      return new Promise((resolve) => {
        setTimeout(() => {
          resolve(true);
        }, timeout);
      });
    }
    exports.delay = delay;
  }
});

// node_modules/@walletconnect/time/dist/cjs/constants/misc.js
var require_misc = __commonJS({
  "node_modules/@walletconnect/time/dist/cjs/constants/misc.js"(exports) {
    "use strict";
    init_define_process_env();
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ONE_THOUSAND = exports.ONE_HUNDRED = void 0;
    exports.ONE_HUNDRED = 100;
    exports.ONE_THOUSAND = 1e3;
  }
});

// node_modules/@walletconnect/time/dist/cjs/constants/time.js
var require_time = __commonJS({
  "node_modules/@walletconnect/time/dist/cjs/constants/time.js"(exports) {
    "use strict";
    init_define_process_env();
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ONE_YEAR = exports.FOUR_WEEKS = exports.THREE_WEEKS = exports.TWO_WEEKS = exports.ONE_WEEK = exports.THIRTY_DAYS = exports.SEVEN_DAYS = exports.FIVE_DAYS = exports.THREE_DAYS = exports.ONE_DAY = exports.TWENTY_FOUR_HOURS = exports.TWELVE_HOURS = exports.SIX_HOURS = exports.THREE_HOURS = exports.ONE_HOUR = exports.SIXTY_MINUTES = exports.THIRTY_MINUTES = exports.TEN_MINUTES = exports.FIVE_MINUTES = exports.ONE_MINUTE = exports.SIXTY_SECONDS = exports.THIRTY_SECONDS = exports.TEN_SECONDS = exports.FIVE_SECONDS = exports.ONE_SECOND = void 0;
    exports.ONE_SECOND = 1;
    exports.FIVE_SECONDS = 5;
    exports.TEN_SECONDS = 10;
    exports.THIRTY_SECONDS = 30;
    exports.SIXTY_SECONDS = 60;
    exports.ONE_MINUTE = exports.SIXTY_SECONDS;
    exports.FIVE_MINUTES = exports.ONE_MINUTE * 5;
    exports.TEN_MINUTES = exports.ONE_MINUTE * 10;
    exports.THIRTY_MINUTES = exports.ONE_MINUTE * 30;
    exports.SIXTY_MINUTES = exports.ONE_MINUTE * 60;
    exports.ONE_HOUR = exports.SIXTY_MINUTES;
    exports.THREE_HOURS = exports.ONE_HOUR * 3;
    exports.SIX_HOURS = exports.ONE_HOUR * 6;
    exports.TWELVE_HOURS = exports.ONE_HOUR * 12;
    exports.TWENTY_FOUR_HOURS = exports.ONE_HOUR * 24;
    exports.ONE_DAY = exports.TWENTY_FOUR_HOURS;
    exports.THREE_DAYS = exports.ONE_DAY * 3;
    exports.FIVE_DAYS = exports.ONE_DAY * 5;
    exports.SEVEN_DAYS = exports.ONE_DAY * 7;
    exports.THIRTY_DAYS = exports.ONE_DAY * 30;
    exports.ONE_WEEK = exports.SEVEN_DAYS;
    exports.TWO_WEEKS = exports.ONE_WEEK * 2;
    exports.THREE_WEEKS = exports.ONE_WEEK * 3;
    exports.FOUR_WEEKS = exports.ONE_WEEK * 4;
    exports.ONE_YEAR = exports.ONE_DAY * 365;
  }
});

// node_modules/@walletconnect/time/dist/cjs/constants/index.js
var require_constants = __commonJS({
  "node_modules/@walletconnect/time/dist/cjs/constants/index.js"(exports) {
    "use strict";
    init_define_process_env();
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = require_tslib();
    tslib_1.__exportStar(require_misc(), exports);
    tslib_1.__exportStar(require_time(), exports);
  }
});

// node_modules/@walletconnect/time/dist/cjs/utils/convert.js
var require_convert = __commonJS({
  "node_modules/@walletconnect/time/dist/cjs/utils/convert.js"(exports) {
    "use strict";
    init_define_process_env();
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.fromMiliseconds = exports.toMiliseconds = void 0;
    var constants_1 = require_constants();
    function toMiliseconds(seconds) {
      return seconds * constants_1.ONE_THOUSAND;
    }
    exports.toMiliseconds = toMiliseconds;
    function fromMiliseconds2(miliseconds) {
      return Math.floor(miliseconds / constants_1.ONE_THOUSAND);
    }
    exports.fromMiliseconds = fromMiliseconds2;
  }
});

// node_modules/@walletconnect/time/dist/cjs/utils/index.js
var require_utils = __commonJS({
  "node_modules/@walletconnect/time/dist/cjs/utils/index.js"(exports) {
    "use strict";
    init_define_process_env();
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = require_tslib();
    tslib_1.__exportStar(require_delay(), exports);
    tslib_1.__exportStar(require_convert(), exports);
  }
});

// node_modules/@walletconnect/time/dist/cjs/watch.js
var require_watch = __commonJS({
  "node_modules/@walletconnect/time/dist/cjs/watch.js"(exports) {
    "use strict";
    init_define_process_env();
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Watch = void 0;
    var Watch = class {
      constructor() {
        this.timestamps = /* @__PURE__ */ new Map();
      }
      start(label) {
        if (this.timestamps.has(label)) {
          throw new Error(`Watch already started for label: ${label}`);
        }
        this.timestamps.set(label, { started: Date.now() });
      }
      stop(label) {
        const timestamp = this.get(label);
        if (typeof timestamp.elapsed !== "undefined") {
          throw new Error(`Watch already stopped for label: ${label}`);
        }
        const elapsed = Date.now() - timestamp.started;
        this.timestamps.set(label, { started: timestamp.started, elapsed });
      }
      get(label) {
        const timestamp = this.timestamps.get(label);
        if (typeof timestamp === "undefined") {
          throw new Error(`No timestamp found for label: ${label}`);
        }
        return timestamp;
      }
      elapsed(label) {
        const timestamp = this.get(label);
        const elapsed = timestamp.elapsed || Date.now() - timestamp.started;
        return elapsed;
      }
    };
    exports.Watch = Watch;
    exports.default = Watch;
  }
});

// node_modules/@walletconnect/time/dist/cjs/types/watch.js
var require_watch2 = __commonJS({
  "node_modules/@walletconnect/time/dist/cjs/types/watch.js"(exports) {
    "use strict";
    init_define_process_env();
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.IWatch = void 0;
    var IWatch = class {
    };
    exports.IWatch = IWatch;
  }
});

// node_modules/@walletconnect/time/dist/cjs/types/index.js
var require_types = __commonJS({
  "node_modules/@walletconnect/time/dist/cjs/types/index.js"(exports) {
    "use strict";
    init_define_process_env();
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = require_tslib();
    tslib_1.__exportStar(require_watch2(), exports);
  }
});

// node_modules/@walletconnect/time/dist/cjs/index.js
var require_cjs = __commonJS({
  "node_modules/@walletconnect/time/dist/cjs/index.js"(exports) {
    "use strict";
    init_define_process_env();
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = require_tslib();
    tslib_1.__exportStar(require_utils(), exports);
    tslib_1.__exportStar(require_watch(), exports);
    tslib_1.__exportStar(require_types(), exports);
    tslib_1.__exportStar(require_constants(), exports);
  }
});

// node_modules/@walletconnect/ethereum-provider/node_modules/@walletconnect/window-getters/dist/cjs/index.js
var require_cjs2 = __commonJS({
  "node_modules/@walletconnect/ethereum-provider/node_modules/@walletconnect/window-getters/dist/cjs/index.js"(exports) {
    "use strict";
    init_define_process_env();
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.getLocalStorage = exports.getLocalStorageOrThrow = exports.getCrypto = exports.getCryptoOrThrow = exports.getLocation = exports.getLocationOrThrow = exports.getNavigator = exports.getNavigatorOrThrow = exports.getDocument = exports.getDocumentOrThrow = exports.getFromWindowOrThrow = exports.getFromWindow = void 0;
    function getFromWindow(name2) {
      let res = void 0;
      if (typeof window !== "undefined" && typeof window[name2] !== "undefined") {
        res = window[name2];
      }
      return res;
    }
    exports.getFromWindow = getFromWindow;
    function getFromWindowOrThrow(name2) {
      const res = getFromWindow(name2);
      if (!res) {
        throw new Error(`${name2} is not defined in Window`);
      }
      return res;
    }
    exports.getFromWindowOrThrow = getFromWindowOrThrow;
    function getDocumentOrThrow() {
      return getFromWindowOrThrow("document");
    }
    exports.getDocumentOrThrow = getDocumentOrThrow;
    function getDocument() {
      return getFromWindow("document");
    }
    exports.getDocument = getDocument;
    function getNavigatorOrThrow() {
      return getFromWindowOrThrow("navigator");
    }
    exports.getNavigatorOrThrow = getNavigatorOrThrow;
    function getNavigator() {
      return getFromWindow("navigator");
    }
    exports.getNavigator = getNavigator;
    function getLocationOrThrow() {
      return getFromWindowOrThrow("location");
    }
    exports.getLocationOrThrow = getLocationOrThrow;
    function getLocation() {
      return getFromWindow("location");
    }
    exports.getLocation = getLocation;
    function getCryptoOrThrow() {
      return getFromWindowOrThrow("crypto");
    }
    exports.getCryptoOrThrow = getCryptoOrThrow;
    function getCrypto() {
      return getFromWindow("crypto");
    }
    exports.getCrypto = getCrypto;
    function getLocalStorageOrThrow() {
      return getFromWindowOrThrow("localStorage");
    }
    exports.getLocalStorageOrThrow = getLocalStorageOrThrow;
    function getLocalStorage() {
      return getFromWindow("localStorage");
    }
    exports.getLocalStorage = getLocalStorage;
  }
});

// node_modules/@walletconnect/ethereum-provider/node_modules/@walletconnect/window-metadata/dist/cjs/index.js
var require_cjs3 = __commonJS({
  "node_modules/@walletconnect/ethereum-provider/node_modules/@walletconnect/window-metadata/dist/cjs/index.js"(exports) {
    "use strict";
    init_define_process_env();
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.getWindowMetadata = void 0;
    var window_getters_1 = require_cjs2();
    function getWindowMetadata() {
      let doc;
      let loc;
      try {
        doc = window_getters_1.getDocumentOrThrow();
        loc = window_getters_1.getLocationOrThrow();
      } catch (e) {
        return null;
      }
      function getIcons() {
        const links = doc.getElementsByTagName("link");
        const icons2 = [];
        for (let i3 = 0; i3 < links.length; i3++) {
          const link = links[i3];
          const rel = link.getAttribute("rel");
          if (rel) {
            if (rel.toLowerCase().indexOf("icon") > -1) {
              const href = link.getAttribute("href");
              if (href) {
                if (href.toLowerCase().indexOf("https:") === -1 && href.toLowerCase().indexOf("http:") === -1 && href.indexOf("//") !== 0) {
                  let absoluteHref = loc.protocol + "//" + loc.host;
                  if (href.indexOf("/") === 0) {
                    absoluteHref += href;
                  } else {
                    const path = loc.pathname.split("/");
                    path.pop();
                    const finalPath = path.join("/");
                    absoluteHref += finalPath + "/" + href;
                  }
                  icons2.push(absoluteHref);
                } else if (href.indexOf("//") === 0) {
                  const absoluteUrl = loc.protocol + href;
                  icons2.push(absoluteUrl);
                } else {
                  icons2.push(href);
                }
              }
            }
          }
        }
        return icons2;
      }
      function getWindowMetadataOfAny(...args) {
        const metaTags = doc.getElementsByTagName("meta");
        for (let i3 = 0; i3 < metaTags.length; i3++) {
          const tag = metaTags[i3];
          const attributes = ["itemprop", "property", "name"].map((target) => tag.getAttribute(target)).filter((attr) => {
            if (attr) {
              return args.includes(attr);
            }
            return false;
          });
          if (attributes.length && attributes) {
            const content = tag.getAttribute("content");
            if (content) {
              return content;
            }
          }
        }
        return "";
      }
      function getName() {
        let name3 = getWindowMetadataOfAny("name", "og:site_name", "og:title", "twitter:title");
        if (!name3) {
          name3 = doc.title;
        }
        return name3;
      }
      function getDescription() {
        const description2 = getWindowMetadataOfAny("description", "og:description", "twitter:description", "keywords");
        return description2;
      }
      const name2 = getName();
      const description = getDescription();
      const url = loc.origin;
      const icons = getIcons();
      const meta = {
        description,
        url,
        icons,
        name: name2
      };
      return meta;
    }
    exports.getWindowMetadata = getWindowMetadata;
  }
});

// node_modules/strict-uri-encode/index.js
var require_strict_uri_encode = __commonJS({
  "node_modules/strict-uri-encode/index.js"(exports, module) {
    "use strict";
    init_define_process_env();
    module.exports = (str) => encodeURIComponent(str).replace(/[!'()*]/g, (x3) => `%${x3.charCodeAt(0).toString(16).toUpperCase()}`);
  }
});

// node_modules/@walletconnect/ethereum-provider/node_modules/decode-uri-component/index.js
var require_decode_uri_component = __commonJS({
  "node_modules/@walletconnect/ethereum-provider/node_modules/decode-uri-component/index.js"(exports, module) {
    "use strict";
    init_define_process_env();
    var token = "%[a-f0-9]{2}";
    var singleMatcher = new RegExp("(" + token + ")|([^%]+?)", "gi");
    var multiMatcher = new RegExp("(" + token + ")+", "gi");
    function decodeComponents(components, split) {
      try {
        return [decodeURIComponent(components.join(""))];
      } catch (err) {
      }
      if (components.length === 1) {
        return components;
      }
      split = split || 1;
      var left = components.slice(0, split);
      var right = components.slice(split);
      return Array.prototype.concat.call([], decodeComponents(left), decodeComponents(right));
    }
    function decode6(input) {
      try {
        return decodeURIComponent(input);
      } catch (err) {
        var tokens = input.match(singleMatcher) || [];
        for (var i3 = 1; i3 < tokens.length; i3++) {
          input = decodeComponents(tokens, i3).join("");
          tokens = input.match(singleMatcher) || [];
        }
        return input;
      }
    }
    function customDecodeURIComponent(input) {
      var replaceMap = {
        "%FE%FF": "\uFFFD\uFFFD",
        "%FF%FE": "\uFFFD\uFFFD"
      };
      var match = multiMatcher.exec(input);
      while (match) {
        try {
          replaceMap[match[0]] = decodeURIComponent(match[0]);
        } catch (err) {
          var result = decode6(match[0]);
          if (result !== match[0]) {
            replaceMap[match[0]] = result;
          }
        }
        match = multiMatcher.exec(input);
      }
      replaceMap["%C2"] = "\uFFFD";
      var entries = Object.keys(replaceMap);
      for (var i3 = 0; i3 < entries.length; i3++) {
        var key = entries[i3];
        input = input.replace(new RegExp(key, "g"), replaceMap[key]);
      }
      return input;
    }
    module.exports = function(encodedURI) {
      if (typeof encodedURI !== "string") {
        throw new TypeError("Expected `encodedURI` to be of type `string`, got `" + typeof encodedURI + "`");
      }
      try {
        encodedURI = encodedURI.replace(/\+/g, " ");
        return decodeURIComponent(encodedURI);
      } catch (err) {
        return customDecodeURIComponent(encodedURI);
      }
    };
  }
});

// node_modules/split-on-first/index.js
var require_split_on_first = __commonJS({
  "node_modules/split-on-first/index.js"(exports, module) {
    "use strict";
    init_define_process_env();
    module.exports = (string2, separator) => {
      if (!(typeof string2 === "string" && typeof separator === "string")) {
        throw new TypeError("Expected the arguments to be of type `string`");
      }
      if (separator === "") {
        return [string2];
      }
      const separatorIndex = string2.indexOf(separator);
      if (separatorIndex === -1) {
        return [string2];
      }
      return [
        string2.slice(0, separatorIndex),
        string2.slice(separatorIndex + separator.length)
      ];
    };
  }
});

// node_modules/filter-obj/index.js
var require_filter_obj = __commonJS({
  "node_modules/filter-obj/index.js"(exports, module) {
    "use strict";
    init_define_process_env();
    module.exports = function(obj, predicate) {
      var ret = {};
      var keys = Object.keys(obj);
      var isArr = Array.isArray(predicate);
      for (var i3 = 0; i3 < keys.length; i3++) {
        var key = keys[i3];
        var val = obj[key];
        if (isArr ? predicate.indexOf(key) !== -1 : predicate(key, val, obj)) {
          ret[key] = val;
        }
      }
      return ret;
    };
  }
});

// node_modules/@walletconnect/ethereum-provider/node_modules/query-string/index.js
var require_query_string = __commonJS({
  "node_modules/@walletconnect/ethereum-provider/node_modules/query-string/index.js"(exports) {
    "use strict";
    init_define_process_env();
    var strictUriEncode = require_strict_uri_encode();
    var decodeComponent = require_decode_uri_component();
    var splitOnFirst = require_split_on_first();
    var filterObject = require_filter_obj();
    var isNullOrUndefined = (value) => value === null || value === void 0;
    var encodeFragmentIdentifier = Symbol("encodeFragmentIdentifier");
    function encoderForArrayFormat(options) {
      switch (options.arrayFormat) {
        case "index":
          return (key) => (result, value) => {
            const index = result.length;
            if (value === void 0 || options.skipNull && value === null || options.skipEmptyString && value === "") {
              return result;
            }
            if (value === null) {
              return [...result, [encode5(key, options), "[", index, "]"].join("")];
            }
            return [
              ...result,
              [encode5(key, options), "[", encode5(index, options), "]=", encode5(value, options)].join("")
            ];
          };
        case "bracket":
          return (key) => (result, value) => {
            if (value === void 0 || options.skipNull && value === null || options.skipEmptyString && value === "") {
              return result;
            }
            if (value === null) {
              return [...result, [encode5(key, options), "[]"].join("")];
            }
            return [...result, [encode5(key, options), "[]=", encode5(value, options)].join("")];
          };
        case "colon-list-separator":
          return (key) => (result, value) => {
            if (value === void 0 || options.skipNull && value === null || options.skipEmptyString && value === "") {
              return result;
            }
            if (value === null) {
              return [...result, [encode5(key, options), ":list="].join("")];
            }
            return [...result, [encode5(key, options), ":list=", encode5(value, options)].join("")];
          };
        case "comma":
        case "separator":
        case "bracket-separator": {
          const keyValueSep = options.arrayFormat === "bracket-separator" ? "[]=" : "=";
          return (key) => (result, value) => {
            if (value === void 0 || options.skipNull && value === null || options.skipEmptyString && value === "") {
              return result;
            }
            value = value === null ? "" : value;
            if (result.length === 0) {
              return [[encode5(key, options), keyValueSep, encode5(value, options)].join("")];
            }
            return [[result, encode5(value, options)].join(options.arrayFormatSeparator)];
          };
        }
        default:
          return (key) => (result, value) => {
            if (value === void 0 || options.skipNull && value === null || options.skipEmptyString && value === "") {
              return result;
            }
            if (value === null) {
              return [...result, encode5(key, options)];
            }
            return [...result, [encode5(key, options), "=", encode5(value, options)].join("")];
          };
      }
    }
    function parserForArrayFormat(options) {
      let result;
      switch (options.arrayFormat) {
        case "index":
          return (key, value, accumulator) => {
            result = /\[(\d*)\]$/.exec(key);
            key = key.replace(/\[\d*\]$/, "");
            if (!result) {
              accumulator[key] = value;
              return;
            }
            if (accumulator[key] === void 0) {
              accumulator[key] = {};
            }
            accumulator[key][result[1]] = value;
          };
        case "bracket":
          return (key, value, accumulator) => {
            result = /(\[\])$/.exec(key);
            key = key.replace(/\[\]$/, "");
            if (!result) {
              accumulator[key] = value;
              return;
            }
            if (accumulator[key] === void 0) {
              accumulator[key] = [value];
              return;
            }
            accumulator[key] = [].concat(accumulator[key], value);
          };
        case "colon-list-separator":
          return (key, value, accumulator) => {
            result = /(:list)$/.exec(key);
            key = key.replace(/:list$/, "");
            if (!result) {
              accumulator[key] = value;
              return;
            }
            if (accumulator[key] === void 0) {
              accumulator[key] = [value];
              return;
            }
            accumulator[key] = [].concat(accumulator[key], value);
          };
        case "comma":
        case "separator":
          return (key, value, accumulator) => {
            const isArray = typeof value === "string" && value.includes(options.arrayFormatSeparator);
            const isEncodedArray = typeof value === "string" && !isArray && decode6(value, options).includes(options.arrayFormatSeparator);
            value = isEncodedArray ? decode6(value, options) : value;
            const newValue = isArray || isEncodedArray ? value.split(options.arrayFormatSeparator).map((item) => decode6(item, options)) : value === null ? value : decode6(value, options);
            accumulator[key] = newValue;
          };
        case "bracket-separator":
          return (key, value, accumulator) => {
            const isArray = /(\[\])$/.test(key);
            key = key.replace(/\[\]$/, "");
            if (!isArray) {
              accumulator[key] = value ? decode6(value, options) : value;
              return;
            }
            const arrayValue = value === null ? [] : value.split(options.arrayFormatSeparator).map((item) => decode6(item, options));
            if (accumulator[key] === void 0) {
              accumulator[key] = arrayValue;
              return;
            }
            accumulator[key] = [].concat(accumulator[key], arrayValue);
          };
        default:
          return (key, value, accumulator) => {
            if (accumulator[key] === void 0) {
              accumulator[key] = value;
              return;
            }
            accumulator[key] = [].concat(accumulator[key], value);
          };
      }
    }
    function validateArrayFormatSeparator(value) {
      if (typeof value !== "string" || value.length !== 1) {
        throw new TypeError("arrayFormatSeparator must be single character string");
      }
    }
    function encode5(value, options) {
      if (options.encode) {
        return options.strict ? strictUriEncode(value) : encodeURIComponent(value);
      }
      return value;
    }
    function decode6(value, options) {
      if (options.decode) {
        return decodeComponent(value);
      }
      return value;
    }
    function keysSorter(input) {
      if (Array.isArray(input)) {
        return input.sort();
      }
      if (typeof input === "object") {
        return keysSorter(Object.keys(input)).sort((a2, b5) => Number(a2) - Number(b5)).map((key) => input[key]);
      }
      return input;
    }
    function removeHash(input) {
      const hashStart = input.indexOf("#");
      if (hashStart !== -1) {
        input = input.slice(0, hashStart);
      }
      return input;
    }
    function getHash(url) {
      let hash = "";
      const hashStart = url.indexOf("#");
      if (hashStart !== -1) {
        hash = url.slice(hashStart);
      }
      return hash;
    }
    function extract(input) {
      input = removeHash(input);
      const queryStart = input.indexOf("?");
      if (queryStart === -1) {
        return "";
      }
      return input.slice(queryStart + 1);
    }
    function parseValue(value, options) {
      if (options.parseNumbers && !Number.isNaN(Number(value)) && (typeof value === "string" && value.trim() !== "")) {
        value = Number(value);
      } else if (options.parseBooleans && value !== null && (value.toLowerCase() === "true" || value.toLowerCase() === "false")) {
        value = value.toLowerCase() === "true";
      }
      return value;
    }
    function parse5(query, options) {
      options = Object.assign({
        decode: true,
        sort: true,
        arrayFormat: "none",
        arrayFormatSeparator: ",",
        parseNumbers: false,
        parseBooleans: false
      }, options);
      validateArrayFormatSeparator(options.arrayFormatSeparator);
      const formatter = parserForArrayFormat(options);
      const ret = /* @__PURE__ */ Object.create(null);
      if (typeof query !== "string") {
        return ret;
      }
      query = query.trim().replace(/^[?#&]/, "");
      if (!query) {
        return ret;
      }
      for (const param of query.split("&")) {
        if (param === "") {
          continue;
        }
        let [key, value] = splitOnFirst(options.decode ? param.replace(/\+/g, " ") : param, "=");
        value = value === void 0 ? null : ["comma", "separator", "bracket-separator"].includes(options.arrayFormat) ? value : decode6(value, options);
        formatter(decode6(key, options), value, ret);
      }
      for (const key of Object.keys(ret)) {
        const value = ret[key];
        if (typeof value === "object" && value !== null) {
          for (const k3 of Object.keys(value)) {
            value[k3] = parseValue(value[k3], options);
          }
        } else {
          ret[key] = parseValue(value, options);
        }
      }
      if (options.sort === false) {
        return ret;
      }
      return (options.sort === true ? Object.keys(ret).sort() : Object.keys(ret).sort(options.sort)).reduce((result, key) => {
        const value = ret[key];
        if (Boolean(value) && typeof value === "object" && !Array.isArray(value)) {
          result[key] = keysSorter(value);
        } else {
          result[key] = value;
        }
        return result;
      }, /* @__PURE__ */ Object.create(null));
    }
    exports.extract = extract;
    exports.parse = parse5;
    exports.stringify = (object, options) => {
      if (!object) {
        return "";
      }
      options = Object.assign({
        encode: true,
        strict: true,
        arrayFormat: "none",
        arrayFormatSeparator: ","
      }, options);
      validateArrayFormatSeparator(options.arrayFormatSeparator);
      const shouldFilter = (key) => options.skipNull && isNullOrUndefined(object[key]) || options.skipEmptyString && object[key] === "";
      const formatter = encoderForArrayFormat(options);
      const objectCopy = {};
      for (const key of Object.keys(object)) {
        if (!shouldFilter(key)) {
          objectCopy[key] = object[key];
        }
      }
      const keys = Object.keys(objectCopy);
      if (options.sort !== false) {
        keys.sort(options.sort);
      }
      return keys.map((key) => {
        const value = object[key];
        if (value === void 0) {
          return "";
        }
        if (value === null) {
          return encode5(key, options);
        }
        if (Array.isArray(value)) {
          if (value.length === 0 && options.arrayFormat === "bracket-separator") {
            return encode5(key, options) + "[]";
          }
          return value.reduce(formatter(key), []).join("&");
        }
        return encode5(key, options) + "=" + encode5(value, options);
      }).filter((x3) => x3.length > 0).join("&");
    };
    exports.parseUrl = (url, options) => {
      options = Object.assign({
        decode: true
      }, options);
      const [url_, hash] = splitOnFirst(url, "#");
      return Object.assign({
        url: url_.split("?")[0] || "",
        query: parse5(extract(url), options)
      }, options && options.parseFragmentIdentifier && hash ? { fragmentIdentifier: decode6(hash, options) } : {});
    };
    exports.stringifyUrl = (object, options) => {
      options = Object.assign({
        encode: true,
        strict: true,
        [encodeFragmentIdentifier]: true
      }, options);
      const url = removeHash(object.url).split("?")[0] || "";
      const queryFromUrl = exports.extract(object.url);
      const parsedQueryFromUrl = exports.parse(queryFromUrl, { sort: false });
      const query = Object.assign(parsedQueryFromUrl, object.query);
      let queryString = exports.stringify(query, options);
      if (queryString) {
        queryString = `?${queryString}`;
      }
      let hash = getHash(object.url);
      if (object.fragmentIdentifier) {
        hash = `#${options[encodeFragmentIdentifier] ? encode5(object.fragmentIdentifier, options) : object.fragmentIdentifier}`;
      }
      return `${url}${queryString}${hash}`;
    };
    exports.pick = (input, filter, options) => {
      options = Object.assign({
        parseFragmentIdentifier: true,
        [encodeFragmentIdentifier]: false
      }, options);
      const { url, query, fragmentIdentifier } = exports.parseUrl(input, options);
      return exports.stringifyUrl({
        url,
        query: filterObject(query, filter),
        fragmentIdentifier
      }, options);
    };
    exports.exclude = (input, filter, options) => {
      const exclusionFilter = Array.isArray(filter) ? (key) => !filter.includes(key) : (key, value) => !filter(key, value);
      return exports.pick(input, exclusionFilter, options);
    };
  }
});

// node_modules/@walletconnect/keyvaluestorage/node_modules/tslib/tslib.js
var require_tslib2 = __commonJS({
  "node_modules/@walletconnect/keyvaluestorage/node_modules/tslib/tslib.js"(exports, module) {
    init_define_process_env();
    var __extends;
    var __assign;
    var __rest;
    var __decorate;
    var __param;
    var __metadata;
    var __awaiter;
    var __generator;
    var __exportStar;
    var __values;
    var __read;
    var __spread;
    var __spreadArrays;
    var __await;
    var __asyncGenerator;
    var __asyncDelegator;
    var __asyncValues;
    var __makeTemplateObject;
    var __importStar;
    var __importDefault;
    var __classPrivateFieldGet;
    var __classPrivateFieldSet;
    var __createBinding;
    (function(factory) {
      var root = typeof global === "object" ? global : typeof self === "object" ? self : typeof this === "object" ? this : {};
      if (typeof define === "function" && define.amd) {
        define("tslib", ["exports"], function(exports2) {
          factory(createExporter(root, createExporter(exports2)));
        });
      } else if (typeof module === "object" && typeof module.exports === "object") {
        factory(createExporter(root, createExporter(module.exports)));
      } else {
        factory(createExporter(root));
      }
      function createExporter(exports2, previous) {
        if (exports2 !== root) {
          if (typeof Object.create === "function") {
            Object.defineProperty(exports2, "__esModule", { value: true });
          } else {
            exports2.__esModule = true;
          }
        }
        return function(id, v) {
          return exports2[id] = previous ? previous(id, v) : v;
        };
      }
    })(function(exporter) {
      var extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b5) {
        d2.__proto__ = b5;
      } || function(d2, b5) {
        for (var p4 in b5)
          if (b5.hasOwnProperty(p4))
            d2[p4] = b5[p4];
      };
      __extends = function(d2, b5) {
        extendStatics(d2, b5);
        function __() {
          this.constructor = d2;
        }
        d2.prototype = b5 === null ? Object.create(b5) : (__.prototype = b5.prototype, new __());
      };
      __assign = Object.assign || function(t) {
        for (var s, i3 = 1, n2 = arguments.length; i3 < n2; i3++) {
          s = arguments[i3];
          for (var p4 in s)
            if (Object.prototype.hasOwnProperty.call(s, p4))
              t[p4] = s[p4];
        }
        return t;
      };
      __rest = function(s, e) {
        var t = {};
        for (var p4 in s)
          if (Object.prototype.hasOwnProperty.call(s, p4) && e.indexOf(p4) < 0)
            t[p4] = s[p4];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
          for (var i3 = 0, p4 = Object.getOwnPropertySymbols(s); i3 < p4.length; i3++) {
            if (e.indexOf(p4[i3]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p4[i3]))
              t[p4[i3]] = s[p4[i3]];
          }
        return t;
      };
      __decorate = function(decorators, target, key, desc) {
        var c3 = arguments.length, r = c3 < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d2;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
          r = Reflect.decorate(decorators, target, key, desc);
        else
          for (var i3 = decorators.length - 1; i3 >= 0; i3--)
            if (d2 = decorators[i3])
              r = (c3 < 3 ? d2(r) : c3 > 3 ? d2(target, key, r) : d2(target, key)) || r;
        return c3 > 3 && r && Object.defineProperty(target, key, r), r;
      };
      __param = function(paramIndex, decorator) {
        return function(target, key) {
          decorator(target, key, paramIndex);
        };
      };
      __metadata = function(metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
          return Reflect.metadata(metadataKey, metadataValue);
      };
      __awaiter = function(thisArg, _arguments, P3, generator) {
        function adopt(value) {
          return value instanceof P3 ? value : new P3(function(resolve) {
            resolve(value);
          });
        }
        return new (P3 || (P3 = Promise))(function(resolve, reject) {
          function fulfilled(value) {
            try {
              step(generator.next(value));
            } catch (e) {
              reject(e);
            }
          }
          function rejected(value) {
            try {
              step(generator["throw"](value));
            } catch (e) {
              reject(e);
            }
          }
          function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
          }
          step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
      };
      __generator = function(thisArg, body) {
        var _3 = { label: 0, sent: function() {
          if (t[0] & 1)
            throw t[1];
          return t[1];
        }, trys: [], ops: [] }, f4, y3, t, g3;
        return g3 = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g3[Symbol.iterator] = function() {
          return this;
        }), g3;
        function verb(n2) {
          return function(v) {
            return step([n2, v]);
          };
        }
        function step(op) {
          if (f4)
            throw new TypeError("Generator is already executing.");
          while (_3)
            try {
              if (f4 = 1, y3 && (t = op[0] & 2 ? y3["return"] : op[0] ? y3["throw"] || ((t = y3["return"]) && t.call(y3), 0) : y3.next) && !(t = t.call(y3, op[1])).done)
                return t;
              if (y3 = 0, t)
                op = [op[0] & 2, t.value];
              switch (op[0]) {
                case 0:
                case 1:
                  t = op;
                  break;
                case 4:
                  _3.label++;
                  return { value: op[1], done: false };
                case 5:
                  _3.label++;
                  y3 = op[1];
                  op = [0];
                  continue;
                case 7:
                  op = _3.ops.pop();
                  _3.trys.pop();
                  continue;
                default:
                  if (!(t = _3.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                    _3 = 0;
                    continue;
                  }
                  if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
                    _3.label = op[1];
                    break;
                  }
                  if (op[0] === 6 && _3.label < t[1]) {
                    _3.label = t[1];
                    t = op;
                    break;
                  }
                  if (t && _3.label < t[2]) {
                    _3.label = t[2];
                    _3.ops.push(op);
                    break;
                  }
                  if (t[2])
                    _3.ops.pop();
                  _3.trys.pop();
                  continue;
              }
              op = body.call(thisArg, _3);
            } catch (e) {
              op = [6, e];
              y3 = 0;
            } finally {
              f4 = t = 0;
            }
          if (op[0] & 5)
            throw op[1];
          return { value: op[0] ? op[1] : void 0, done: true };
        }
      };
      __createBinding = function(o, m4, k3, k22) {
        if (k22 === void 0)
          k22 = k3;
        o[k22] = m4[k3];
      };
      __exportStar = function(m4, exports2) {
        for (var p4 in m4)
          if (p4 !== "default" && !exports2.hasOwnProperty(p4))
            exports2[p4] = m4[p4];
      };
      __values = function(o) {
        var s = typeof Symbol === "function" && Symbol.iterator, m4 = s && o[s], i3 = 0;
        if (m4)
          return m4.call(o);
        if (o && typeof o.length === "number")
          return {
            next: function() {
              if (o && i3 >= o.length)
                o = void 0;
              return { value: o && o[i3++], done: !o };
            }
          };
        throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
      };
      __read = function(o, n2) {
        var m4 = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m4)
          return o;
        var i3 = m4.call(o), r, ar = [], e;
        try {
          while ((n2 === void 0 || n2-- > 0) && !(r = i3.next()).done)
            ar.push(r.value);
        } catch (error) {
          e = { error };
        } finally {
          try {
            if (r && !r.done && (m4 = i3["return"]))
              m4.call(i3);
          } finally {
            if (e)
              throw e.error;
          }
        }
        return ar;
      };
      __spread = function() {
        for (var ar = [], i3 = 0; i3 < arguments.length; i3++)
          ar = ar.concat(__read(arguments[i3]));
        return ar;
      };
      __spreadArrays = function() {
        for (var s = 0, i3 = 0, il = arguments.length; i3 < il; i3++)
          s += arguments[i3].length;
        for (var r = Array(s), k3 = 0, i3 = 0; i3 < il; i3++)
          for (var a2 = arguments[i3], j7 = 0, jl = a2.length; j7 < jl; j7++, k3++)
            r[k3] = a2[j7];
        return r;
      };
      __await = function(v) {
        return this instanceof __await ? (this.v = v, this) : new __await(v);
      };
      __asyncGenerator = function(thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator)
          throw new TypeError("Symbol.asyncIterator is not defined.");
        var g3 = generator.apply(thisArg, _arguments || []), i3, q4 = [];
        return i3 = {}, verb("next"), verb("throw"), verb("return"), i3[Symbol.asyncIterator] = function() {
          return this;
        }, i3;
        function verb(n2) {
          if (g3[n2])
            i3[n2] = function(v) {
              return new Promise(function(a2, b5) {
                q4.push([n2, v, a2, b5]) > 1 || resume(n2, v);
              });
            };
        }
        function resume(n2, v) {
          try {
            step(g3[n2](v));
          } catch (e) {
            settle(q4[0][3], e);
          }
        }
        function step(r) {
          r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q4[0][2], r);
        }
        function fulfill(value) {
          resume("next", value);
        }
        function reject(value) {
          resume("throw", value);
        }
        function settle(f4, v) {
          if (f4(v), q4.shift(), q4.length)
            resume(q4[0][0], q4[0][1]);
        }
      };
      __asyncDelegator = function(o) {
        var i3, p4;
        return i3 = {}, verb("next"), verb("throw", function(e) {
          throw e;
        }), verb("return"), i3[Symbol.iterator] = function() {
          return this;
        }, i3;
        function verb(n2, f4) {
          i3[n2] = o[n2] ? function(v) {
            return (p4 = !p4) ? { value: __await(o[n2](v)), done: n2 === "return" } : f4 ? f4(v) : v;
          } : f4;
        }
      };
      __asyncValues = function(o) {
        if (!Symbol.asyncIterator)
          throw new TypeError("Symbol.asyncIterator is not defined.");
        var m4 = o[Symbol.asyncIterator], i3;
        return m4 ? m4.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i3 = {}, verb("next"), verb("throw"), verb("return"), i3[Symbol.asyncIterator] = function() {
          return this;
        }, i3);
        function verb(n2) {
          i3[n2] = o[n2] && function(v) {
            return new Promise(function(resolve, reject) {
              v = o[n2](v), settle(resolve, reject, v.done, v.value);
            });
          };
        }
        function settle(resolve, reject, d2, v) {
          Promise.resolve(v).then(function(v2) {
            resolve({ value: v2, done: d2 });
          }, reject);
        }
      };
      __makeTemplateObject = function(cooked, raw) {
        if (Object.defineProperty) {
          Object.defineProperty(cooked, "raw", { value: raw });
        } else {
          cooked.raw = raw;
        }
        return cooked;
      };
      __importStar = function(mod) {
        if (mod && mod.__esModule)
          return mod;
        var result = {};
        if (mod != null) {
          for (var k3 in mod)
            if (Object.hasOwnProperty.call(mod, k3))
              result[k3] = mod[k3];
        }
        result["default"] = mod;
        return result;
      };
      __importDefault = function(mod) {
        return mod && mod.__esModule ? mod : { "default": mod };
      };
      __classPrivateFieldGet = function(receiver, privateMap) {
        if (!privateMap.has(receiver)) {
          throw new TypeError("attempted to get private field on non-instance");
        }
        return privateMap.get(receiver);
      };
      __classPrivateFieldSet = function(receiver, privateMap, value) {
        if (!privateMap.has(receiver)) {
          throw new TypeError("attempted to set private field on non-instance");
        }
        privateMap.set(receiver, value);
        return value;
      };
      exporter("__extends", __extends);
      exporter("__assign", __assign);
      exporter("__rest", __rest);
      exporter("__decorate", __decorate);
      exporter("__param", __param);
      exporter("__metadata", __metadata);
      exporter("__awaiter", __awaiter);
      exporter("__generator", __generator);
      exporter("__exportStar", __exportStar);
      exporter("__createBinding", __createBinding);
      exporter("__values", __values);
      exporter("__read", __read);
      exporter("__spread", __spread);
      exporter("__spreadArrays", __spreadArrays);
      exporter("__await", __await);
      exporter("__asyncGenerator", __asyncGenerator);
      exporter("__asyncDelegator", __asyncDelegator);
      exporter("__asyncValues", __asyncValues);
      exporter("__makeTemplateObject", __makeTemplateObject);
      exporter("__importStar", __importStar);
      exporter("__importDefault", __importDefault);
      exporter("__classPrivateFieldGet", __classPrivateFieldGet);
      exporter("__classPrivateFieldSet", __classPrivateFieldSet);
    });
  }
});

// node_modules/safe-json-utils/dist/cjs/index.js
var require_cjs4 = __commonJS({
  "node_modules/safe-json-utils/dist/cjs/index.js"(exports) {
    "use strict";
    init_define_process_env();
    Object.defineProperty(exports, "__esModule", { value: true });
    function safeJsonParse2(value) {
      if (typeof value !== "string") {
        throw new Error(`Cannot safe json parse value of type ${typeof value}`);
      }
      try {
        return JSON.parse(value);
      } catch (_a) {
        return value;
      }
    }
    exports.safeJsonParse = safeJsonParse2;
    function safeJsonStringify2(value) {
      return typeof value === "string" ? value : JSON.stringify(value, (key, value2) => typeof value2 === "undefined" ? null : value2);
    }
    exports.safeJsonStringify = safeJsonStringify2;
  }
});

// node_modules/@walletconnect/keyvaluestorage/dist/cjs/browser/lib/localStorage.js
var require_localStorage = __commonJS({
  "node_modules/@walletconnect/keyvaluestorage/dist/cjs/browser/lib/localStorage.js"(exports, module) {
    "use strict";
    init_define_process_env();
    (function() {
      "use strict";
      let db;
      function LocalStorage() {
      }
      db = LocalStorage;
      db.prototype.getItem = function(key) {
        if (this.hasOwnProperty(key)) {
          return String(this[key]);
        }
        return null;
      };
      db.prototype.setItem = function(key, val) {
        this[key] = String(val);
      };
      db.prototype.removeItem = function(key) {
        delete this[key];
      };
      db.prototype.clear = function() {
        const self2 = this;
        Object.keys(self2).forEach(function(key) {
          self2[key] = void 0;
          delete self2[key];
        });
      };
      db.prototype.key = function(i3) {
        i3 = i3 || 0;
        return Object.keys(this)[i3];
      };
      db.prototype.__defineGetter__("length", function() {
        return Object.keys(this).length;
      });
      if (typeof global !== "undefined" && global.localStorage) {
        module.exports = global.localStorage;
      } else if (typeof window !== "undefined" && window.localStorage) {
        module.exports = window.localStorage;
      } else {
        module.exports = new LocalStorage();
      }
    })();
  }
});

// node_modules/@walletconnect/keyvaluestorage/dist/cjs/shared/types.js
var require_types2 = __commonJS({
  "node_modules/@walletconnect/keyvaluestorage/dist/cjs/shared/types.js"(exports) {
    "use strict";
    init_define_process_env();
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.IKeyValueStorage = void 0;
    var IKeyValueStorage = class {
    };
    exports.IKeyValueStorage = IKeyValueStorage;
  }
});

// node_modules/@walletconnect/keyvaluestorage/dist/cjs/shared/utils.js
var require_utils2 = __commonJS({
  "node_modules/@walletconnect/keyvaluestorage/dist/cjs/shared/utils.js"(exports) {
    "use strict";
    init_define_process_env();
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.parseEntry = void 0;
    var safe_json_utils_1 = require_cjs4();
    function parseEntry(entry) {
      var _a;
      return [entry[0], safe_json_utils_1.safeJsonParse((_a = entry[1]) !== null && _a !== void 0 ? _a : "")];
    }
    exports.parseEntry = parseEntry;
  }
});

// node_modules/@walletconnect/keyvaluestorage/dist/cjs/shared/index.js
var require_shared = __commonJS({
  "node_modules/@walletconnect/keyvaluestorage/dist/cjs/shared/index.js"(exports) {
    "use strict";
    init_define_process_env();
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = require_tslib2();
    tslib_1.__exportStar(require_types2(), exports);
    tslib_1.__exportStar(require_utils2(), exports);
  }
});

// node_modules/@walletconnect/keyvaluestorage/dist/cjs/browser/index.js
var require_browser2 = __commonJS({
  "node_modules/@walletconnect/keyvaluestorage/dist/cjs/browser/index.js"(exports) {
    "use strict";
    init_define_process_env();
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.KeyValueStorage = void 0;
    var tslib_1 = require_tslib2();
    var safe_json_utils_1 = require_cjs4();
    var localStorage_1 = tslib_1.__importDefault(require_localStorage());
    var shared_1 = require_shared();
    var KeyValueStorage = class {
      constructor() {
        this.localStorage = localStorage_1.default;
      }
      getKeys() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
          return Object.keys(this.localStorage);
        });
      }
      getEntries() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
          return Object.entries(this.localStorage).map(shared_1.parseEntry);
        });
      }
      getItem(key) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
          const item = this.localStorage.getItem(key);
          if (item === null) {
            return void 0;
          }
          return safe_json_utils_1.safeJsonParse(item);
        });
      }
      setItem(key, value) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
          this.localStorage.setItem(key, safe_json_utils_1.safeJsonStringify(value));
        });
      }
      removeItem(key) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
          this.localStorage.removeItem(key);
        });
      }
    };
    exports.KeyValueStorage = KeyValueStorage;
    exports.default = KeyValueStorage;
  }
});

// node_modules/@walletconnect/heartbeat/node_modules/tslib/tslib.js
var require_tslib3 = __commonJS({
  "node_modules/@walletconnect/heartbeat/node_modules/tslib/tslib.js"(exports, module) {
    init_define_process_env();
    var __extends;
    var __assign;
    var __rest;
    var __decorate;
    var __param;
    var __metadata;
    var __awaiter;
    var __generator;
    var __exportStar;
    var __values;
    var __read;
    var __spread;
    var __spreadArrays;
    var __await;
    var __asyncGenerator;
    var __asyncDelegator;
    var __asyncValues;
    var __makeTemplateObject;
    var __importStar;
    var __importDefault;
    var __classPrivateFieldGet;
    var __classPrivateFieldSet;
    var __createBinding;
    (function(factory) {
      var root = typeof global === "object" ? global : typeof self === "object" ? self : typeof this === "object" ? this : {};
      if (typeof define === "function" && define.amd) {
        define("tslib", ["exports"], function(exports2) {
          factory(createExporter(root, createExporter(exports2)));
        });
      } else if (typeof module === "object" && typeof module.exports === "object") {
        factory(createExporter(root, createExporter(module.exports)));
      } else {
        factory(createExporter(root));
      }
      function createExporter(exports2, previous) {
        if (exports2 !== root) {
          if (typeof Object.create === "function") {
            Object.defineProperty(exports2, "__esModule", { value: true });
          } else {
            exports2.__esModule = true;
          }
        }
        return function(id, v) {
          return exports2[id] = previous ? previous(id, v) : v;
        };
      }
    })(function(exporter) {
      var extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b5) {
        d2.__proto__ = b5;
      } || function(d2, b5) {
        for (var p4 in b5)
          if (b5.hasOwnProperty(p4))
            d2[p4] = b5[p4];
      };
      __extends = function(d2, b5) {
        extendStatics(d2, b5);
        function __() {
          this.constructor = d2;
        }
        d2.prototype = b5 === null ? Object.create(b5) : (__.prototype = b5.prototype, new __());
      };
      __assign = Object.assign || function(t) {
        for (var s, i3 = 1, n2 = arguments.length; i3 < n2; i3++) {
          s = arguments[i3];
          for (var p4 in s)
            if (Object.prototype.hasOwnProperty.call(s, p4))
              t[p4] = s[p4];
        }
        return t;
      };
      __rest = function(s, e) {
        var t = {};
        for (var p4 in s)
          if (Object.prototype.hasOwnProperty.call(s, p4) && e.indexOf(p4) < 0)
            t[p4] = s[p4];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
          for (var i3 = 0, p4 = Object.getOwnPropertySymbols(s); i3 < p4.length; i3++) {
            if (e.indexOf(p4[i3]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p4[i3]))
              t[p4[i3]] = s[p4[i3]];
          }
        return t;
      };
      __decorate = function(decorators, target, key, desc) {
        var c3 = arguments.length, r = c3 < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d2;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
          r = Reflect.decorate(decorators, target, key, desc);
        else
          for (var i3 = decorators.length - 1; i3 >= 0; i3--)
            if (d2 = decorators[i3])
              r = (c3 < 3 ? d2(r) : c3 > 3 ? d2(target, key, r) : d2(target, key)) || r;
        return c3 > 3 && r && Object.defineProperty(target, key, r), r;
      };
      __param = function(paramIndex, decorator) {
        return function(target, key) {
          decorator(target, key, paramIndex);
        };
      };
      __metadata = function(metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
          return Reflect.metadata(metadataKey, metadataValue);
      };
      __awaiter = function(thisArg, _arguments, P3, generator) {
        function adopt(value) {
          return value instanceof P3 ? value : new P3(function(resolve) {
            resolve(value);
          });
        }
        return new (P3 || (P3 = Promise))(function(resolve, reject) {
          function fulfilled(value) {
            try {
              step(generator.next(value));
            } catch (e) {
              reject(e);
            }
          }
          function rejected(value) {
            try {
              step(generator["throw"](value));
            } catch (e) {
              reject(e);
            }
          }
          function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
          }
          step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
      };
      __generator = function(thisArg, body) {
        var _3 = { label: 0, sent: function() {
          if (t[0] & 1)
            throw t[1];
          return t[1];
        }, trys: [], ops: [] }, f4, y3, t, g3;
        return g3 = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g3[Symbol.iterator] = function() {
          return this;
        }), g3;
        function verb(n2) {
          return function(v) {
            return step([n2, v]);
          };
        }
        function step(op) {
          if (f4)
            throw new TypeError("Generator is already executing.");
          while (_3)
            try {
              if (f4 = 1, y3 && (t = op[0] & 2 ? y3["return"] : op[0] ? y3["throw"] || ((t = y3["return"]) && t.call(y3), 0) : y3.next) && !(t = t.call(y3, op[1])).done)
                return t;
              if (y3 = 0, t)
                op = [op[0] & 2, t.value];
              switch (op[0]) {
                case 0:
                case 1:
                  t = op;
                  break;
                case 4:
                  _3.label++;
                  return { value: op[1], done: false };
                case 5:
                  _3.label++;
                  y3 = op[1];
                  op = [0];
                  continue;
                case 7:
                  op = _3.ops.pop();
                  _3.trys.pop();
                  continue;
                default:
                  if (!(t = _3.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                    _3 = 0;
                    continue;
                  }
                  if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
                    _3.label = op[1];
                    break;
                  }
                  if (op[0] === 6 && _3.label < t[1]) {
                    _3.label = t[1];
                    t = op;
                    break;
                  }
                  if (t && _3.label < t[2]) {
                    _3.label = t[2];
                    _3.ops.push(op);
                    break;
                  }
                  if (t[2])
                    _3.ops.pop();
                  _3.trys.pop();
                  continue;
              }
              op = body.call(thisArg, _3);
            } catch (e) {
              op = [6, e];
              y3 = 0;
            } finally {
              f4 = t = 0;
            }
          if (op[0] & 5)
            throw op[1];
          return { value: op[0] ? op[1] : void 0, done: true };
        }
      };
      __createBinding = function(o, m4, k3, k22) {
        if (k22 === void 0)
          k22 = k3;
        o[k22] = m4[k3];
      };
      __exportStar = function(m4, exports2) {
        for (var p4 in m4)
          if (p4 !== "default" && !exports2.hasOwnProperty(p4))
            exports2[p4] = m4[p4];
      };
      __values = function(o) {
        var s = typeof Symbol === "function" && Symbol.iterator, m4 = s && o[s], i3 = 0;
        if (m4)
          return m4.call(o);
        if (o && typeof o.length === "number")
          return {
            next: function() {
              if (o && i3 >= o.length)
                o = void 0;
              return { value: o && o[i3++], done: !o };
            }
          };
        throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
      };
      __read = function(o, n2) {
        var m4 = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m4)
          return o;
        var i3 = m4.call(o), r, ar = [], e;
        try {
          while ((n2 === void 0 || n2-- > 0) && !(r = i3.next()).done)
            ar.push(r.value);
        } catch (error) {
          e = { error };
        } finally {
          try {
            if (r && !r.done && (m4 = i3["return"]))
              m4.call(i3);
          } finally {
            if (e)
              throw e.error;
          }
        }
        return ar;
      };
      __spread = function() {
        for (var ar = [], i3 = 0; i3 < arguments.length; i3++)
          ar = ar.concat(__read(arguments[i3]));
        return ar;
      };
      __spreadArrays = function() {
        for (var s = 0, i3 = 0, il = arguments.length; i3 < il; i3++)
          s += arguments[i3].length;
        for (var r = Array(s), k3 = 0, i3 = 0; i3 < il; i3++)
          for (var a2 = arguments[i3], j7 = 0, jl = a2.length; j7 < jl; j7++, k3++)
            r[k3] = a2[j7];
        return r;
      };
      __await = function(v) {
        return this instanceof __await ? (this.v = v, this) : new __await(v);
      };
      __asyncGenerator = function(thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator)
          throw new TypeError("Symbol.asyncIterator is not defined.");
        var g3 = generator.apply(thisArg, _arguments || []), i3, q4 = [];
        return i3 = {}, verb("next"), verb("throw"), verb("return"), i3[Symbol.asyncIterator] = function() {
          return this;
        }, i3;
        function verb(n2) {
          if (g3[n2])
            i3[n2] = function(v) {
              return new Promise(function(a2, b5) {
                q4.push([n2, v, a2, b5]) > 1 || resume(n2, v);
              });
            };
        }
        function resume(n2, v) {
          try {
            step(g3[n2](v));
          } catch (e) {
            settle(q4[0][3], e);
          }
        }
        function step(r) {
          r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q4[0][2], r);
        }
        function fulfill(value) {
          resume("next", value);
        }
        function reject(value) {
          resume("throw", value);
        }
        function settle(f4, v) {
          if (f4(v), q4.shift(), q4.length)
            resume(q4[0][0], q4[0][1]);
        }
      };
      __asyncDelegator = function(o) {
        var i3, p4;
        return i3 = {}, verb("next"), verb("throw", function(e) {
          throw e;
        }), verb("return"), i3[Symbol.iterator] = function() {
          return this;
        }, i3;
        function verb(n2, f4) {
          i3[n2] = o[n2] ? function(v) {
            return (p4 = !p4) ? { value: __await(o[n2](v)), done: n2 === "return" } : f4 ? f4(v) : v;
          } : f4;
        }
      };
      __asyncValues = function(o) {
        if (!Symbol.asyncIterator)
          throw new TypeError("Symbol.asyncIterator is not defined.");
        var m4 = o[Symbol.asyncIterator], i3;
        return m4 ? m4.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i3 = {}, verb("next"), verb("throw"), verb("return"), i3[Symbol.asyncIterator] = function() {
          return this;
        }, i3);
        function verb(n2) {
          i3[n2] = o[n2] && function(v) {
            return new Promise(function(resolve, reject) {
              v = o[n2](v), settle(resolve, reject, v.done, v.value);
            });
          };
        }
        function settle(resolve, reject, d2, v) {
          Promise.resolve(v).then(function(v2) {
            resolve({ value: v2, done: d2 });
          }, reject);
        }
      };
      __makeTemplateObject = function(cooked, raw) {
        if (Object.defineProperty) {
          Object.defineProperty(cooked, "raw", { value: raw });
        } else {
          cooked.raw = raw;
        }
        return cooked;
      };
      __importStar = function(mod) {
        if (mod && mod.__esModule)
          return mod;
        var result = {};
        if (mod != null) {
          for (var k3 in mod)
            if (Object.hasOwnProperty.call(mod, k3))
              result[k3] = mod[k3];
        }
        result["default"] = mod;
        return result;
      };
      __importDefault = function(mod) {
        return mod && mod.__esModule ? mod : { "default": mod };
      };
      __classPrivateFieldGet = function(receiver, privateMap) {
        if (!privateMap.has(receiver)) {
          throw new TypeError("attempted to get private field on non-instance");
        }
        return privateMap.get(receiver);
      };
      __classPrivateFieldSet = function(receiver, privateMap, value) {
        if (!privateMap.has(receiver)) {
          throw new TypeError("attempted to set private field on non-instance");
        }
        privateMap.set(receiver, value);
        return value;
      };
      exporter("__extends", __extends);
      exporter("__assign", __assign);
      exporter("__rest", __rest);
      exporter("__decorate", __decorate);
      exporter("__param", __param);
      exporter("__metadata", __metadata);
      exporter("__awaiter", __awaiter);
      exporter("__generator", __generator);
      exporter("__exportStar", __exportStar);
      exporter("__createBinding", __createBinding);
      exporter("__values", __values);
      exporter("__read", __read);
      exporter("__spread", __spread);
      exporter("__spreadArrays", __spreadArrays);
      exporter("__await", __await);
      exporter("__asyncGenerator", __asyncGenerator);
      exporter("__asyncDelegator", __asyncDelegator);
      exporter("__asyncValues", __asyncValues);
      exporter("__makeTemplateObject", __makeTemplateObject);
      exporter("__importStar", __importStar);
      exporter("__importDefault", __importDefault);
      exporter("__classPrivateFieldGet", __classPrivateFieldGet);
      exporter("__classPrivateFieldSet", __classPrivateFieldSet);
    });
  }
});

// node_modules/@walletconnect/events/dist/esm/events.js
var IEvents;
var init_events = __esm({
  "node_modules/@walletconnect/events/dist/esm/events.js"() {
    init_define_process_env();
    IEvents = class {
    };
  }
});

// node_modules/@walletconnect/events/dist/esm/index.js
var esm_exports = {};
__export(esm_exports, {
  IEvents: () => IEvents
});
var init_esm = __esm({
  "node_modules/@walletconnect/events/dist/esm/index.js"() {
    init_define_process_env();
    init_events();
  }
});

// node_modules/@walletconnect/heartbeat/dist/cjs/types/heartbeat.js
var require_heartbeat = __commonJS({
  "node_modules/@walletconnect/heartbeat/dist/cjs/types/heartbeat.js"(exports) {
    "use strict";
    init_define_process_env();
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.IHeartBeat = void 0;
    var events_1 = (init_esm(), __toCommonJS(esm_exports));
    var IHeartBeat = class extends events_1.IEvents {
      constructor(opts) {
        super();
      }
    };
    exports.IHeartBeat = IHeartBeat;
  }
});

// node_modules/@walletconnect/heartbeat/dist/cjs/types/index.js
var require_types3 = __commonJS({
  "node_modules/@walletconnect/heartbeat/dist/cjs/types/index.js"(exports) {
    "use strict";
    init_define_process_env();
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = require_tslib3();
    tslib_1.__exportStar(require_heartbeat(), exports);
  }
});

// node_modules/@walletconnect/heartbeat/dist/cjs/constants/heartbeat.js
var require_heartbeat2 = __commonJS({
  "node_modules/@walletconnect/heartbeat/dist/cjs/constants/heartbeat.js"(exports) {
    "use strict";
    init_define_process_env();
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.HEARTBEAT_EVENTS = exports.HEARTBEAT_INTERVAL = void 0;
    var time_1 = require_cjs();
    exports.HEARTBEAT_INTERVAL = time_1.FIVE_SECONDS;
    exports.HEARTBEAT_EVENTS = {
      pulse: "heartbeat_pulse"
    };
  }
});

// node_modules/@walletconnect/heartbeat/dist/cjs/constants/index.js
var require_constants2 = __commonJS({
  "node_modules/@walletconnect/heartbeat/dist/cjs/constants/index.js"(exports) {
    "use strict";
    init_define_process_env();
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = require_tslib3();
    tslib_1.__exportStar(require_heartbeat2(), exports);
  }
});

// node_modules/@walletconnect/heartbeat/dist/cjs/heartbeat.js
var require_heartbeat3 = __commonJS({
  "node_modules/@walletconnect/heartbeat/dist/cjs/heartbeat.js"(exports) {
    "use strict";
    init_define_process_env();
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.HeartBeat = void 0;
    var tslib_1 = require_tslib3();
    var events_1 = require_events();
    var time_1 = require_cjs();
    var types_1 = require_types3();
    var constants_1 = require_constants2();
    var HeartBeat = class extends types_1.IHeartBeat {
      constructor(opts) {
        super(opts);
        this.events = new events_1.EventEmitter();
        this.interval = constants_1.HEARTBEAT_INTERVAL;
        this.interval = (opts === null || opts === void 0 ? void 0 : opts.interval) || constants_1.HEARTBEAT_INTERVAL;
      }
      static init(opts) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
          const heartbeat = new HeartBeat(opts);
          yield heartbeat.init();
          return heartbeat;
        });
      }
      init() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
          yield this.initialize();
        });
      }
      stop() {
        clearInterval(this.intervalRef);
      }
      on(event, listener) {
        this.events.on(event, listener);
      }
      once(event, listener) {
        this.events.once(event, listener);
      }
      off(event, listener) {
        this.events.off(event, listener);
      }
      removeListener(event, listener) {
        this.events.removeListener(event, listener);
      }
      initialize() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
          this.intervalRef = setInterval(() => this.pulse(), time_1.toMiliseconds(this.interval));
        });
      }
      pulse() {
        this.events.emit(constants_1.HEARTBEAT_EVENTS.pulse);
      }
    };
    exports.HeartBeat = HeartBeat;
  }
});

// node_modules/@walletconnect/heartbeat/dist/cjs/index.js
var require_cjs5 = __commonJS({
  "node_modules/@walletconnect/heartbeat/dist/cjs/index.js"(exports) {
    "use strict";
    init_define_process_env();
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = require_tslib3();
    tslib_1.__exportStar(require_heartbeat3(), exports);
    tslib_1.__exportStar(require_types3(), exports);
    tslib_1.__exportStar(require_constants2(), exports);
  }
});

// node_modules/@walletconnect/logger/node_modules/tslib/tslib.js
var require_tslib4 = __commonJS({
  "node_modules/@walletconnect/logger/node_modules/tslib/tslib.js"(exports, module) {
    init_define_process_env();
    var __extends;
    var __assign;
    var __rest;
    var __decorate;
    var __param;
    var __metadata;
    var __awaiter;
    var __generator;
    var __exportStar;
    var __values;
    var __read;
    var __spread;
    var __spreadArrays;
    var __await;
    var __asyncGenerator;
    var __asyncDelegator;
    var __asyncValues;
    var __makeTemplateObject;
    var __importStar;
    var __importDefault;
    var __classPrivateFieldGet;
    var __classPrivateFieldSet;
    var __createBinding;
    (function(factory) {
      var root = typeof global === "object" ? global : typeof self === "object" ? self : typeof this === "object" ? this : {};
      if (typeof define === "function" && define.amd) {
        define("tslib", ["exports"], function(exports2) {
          factory(createExporter(root, createExporter(exports2)));
        });
      } else if (typeof module === "object" && typeof module.exports === "object") {
        factory(createExporter(root, createExporter(module.exports)));
      } else {
        factory(createExporter(root));
      }
      function createExporter(exports2, previous) {
        if (exports2 !== root) {
          if (typeof Object.create === "function") {
            Object.defineProperty(exports2, "__esModule", { value: true });
          } else {
            exports2.__esModule = true;
          }
        }
        return function(id, v) {
          return exports2[id] = previous ? previous(id, v) : v;
        };
      }
    })(function(exporter) {
      var extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b5) {
        d2.__proto__ = b5;
      } || function(d2, b5) {
        for (var p4 in b5)
          if (b5.hasOwnProperty(p4))
            d2[p4] = b5[p4];
      };
      __extends = function(d2, b5) {
        extendStatics(d2, b5);
        function __() {
          this.constructor = d2;
        }
        d2.prototype = b5 === null ? Object.create(b5) : (__.prototype = b5.prototype, new __());
      };
      __assign = Object.assign || function(t) {
        for (var s, i3 = 1, n2 = arguments.length; i3 < n2; i3++) {
          s = arguments[i3];
          for (var p4 in s)
            if (Object.prototype.hasOwnProperty.call(s, p4))
              t[p4] = s[p4];
        }
        return t;
      };
      __rest = function(s, e) {
        var t = {};
        for (var p4 in s)
          if (Object.prototype.hasOwnProperty.call(s, p4) && e.indexOf(p4) < 0)
            t[p4] = s[p4];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
          for (var i3 = 0, p4 = Object.getOwnPropertySymbols(s); i3 < p4.length; i3++) {
            if (e.indexOf(p4[i3]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p4[i3]))
              t[p4[i3]] = s[p4[i3]];
          }
        return t;
      };
      __decorate = function(decorators, target, key, desc) {
        var c3 = arguments.length, r = c3 < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d2;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
          r = Reflect.decorate(decorators, target, key, desc);
        else
          for (var i3 = decorators.length - 1; i3 >= 0; i3--)
            if (d2 = decorators[i3])
              r = (c3 < 3 ? d2(r) : c3 > 3 ? d2(target, key, r) : d2(target, key)) || r;
        return c3 > 3 && r && Object.defineProperty(target, key, r), r;
      };
      __param = function(paramIndex, decorator) {
        return function(target, key) {
          decorator(target, key, paramIndex);
        };
      };
      __metadata = function(metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
          return Reflect.metadata(metadataKey, metadataValue);
      };
      __awaiter = function(thisArg, _arguments, P3, generator) {
        function adopt(value) {
          return value instanceof P3 ? value : new P3(function(resolve) {
            resolve(value);
          });
        }
        return new (P3 || (P3 = Promise))(function(resolve, reject) {
          function fulfilled(value) {
            try {
              step(generator.next(value));
            } catch (e) {
              reject(e);
            }
          }
          function rejected(value) {
            try {
              step(generator["throw"](value));
            } catch (e) {
              reject(e);
            }
          }
          function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
          }
          step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
      };
      __generator = function(thisArg, body) {
        var _3 = { label: 0, sent: function() {
          if (t[0] & 1)
            throw t[1];
          return t[1];
        }, trys: [], ops: [] }, f4, y3, t, g3;
        return g3 = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g3[Symbol.iterator] = function() {
          return this;
        }), g3;
        function verb(n2) {
          return function(v) {
            return step([n2, v]);
          };
        }
        function step(op) {
          if (f4)
            throw new TypeError("Generator is already executing.");
          while (_3)
            try {
              if (f4 = 1, y3 && (t = op[0] & 2 ? y3["return"] : op[0] ? y3["throw"] || ((t = y3["return"]) && t.call(y3), 0) : y3.next) && !(t = t.call(y3, op[1])).done)
                return t;
              if (y3 = 0, t)
                op = [op[0] & 2, t.value];
              switch (op[0]) {
                case 0:
                case 1:
                  t = op;
                  break;
                case 4:
                  _3.label++;
                  return { value: op[1], done: false };
                case 5:
                  _3.label++;
                  y3 = op[1];
                  op = [0];
                  continue;
                case 7:
                  op = _3.ops.pop();
                  _3.trys.pop();
                  continue;
                default:
                  if (!(t = _3.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                    _3 = 0;
                    continue;
                  }
                  if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
                    _3.label = op[1];
                    break;
                  }
                  if (op[0] === 6 && _3.label < t[1]) {
                    _3.label = t[1];
                    t = op;
                    break;
                  }
                  if (t && _3.label < t[2]) {
                    _3.label = t[2];
                    _3.ops.push(op);
                    break;
                  }
                  if (t[2])
                    _3.ops.pop();
                  _3.trys.pop();
                  continue;
              }
              op = body.call(thisArg, _3);
            } catch (e) {
              op = [6, e];
              y3 = 0;
            } finally {
              f4 = t = 0;
            }
          if (op[0] & 5)
            throw op[1];
          return { value: op[0] ? op[1] : void 0, done: true };
        }
      };
      __createBinding = function(o, m4, k3, k22) {
        if (k22 === void 0)
          k22 = k3;
        o[k22] = m4[k3];
      };
      __exportStar = function(m4, exports2) {
        for (var p4 in m4)
          if (p4 !== "default" && !exports2.hasOwnProperty(p4))
            exports2[p4] = m4[p4];
      };
      __values = function(o) {
        var s = typeof Symbol === "function" && Symbol.iterator, m4 = s && o[s], i3 = 0;
        if (m4)
          return m4.call(o);
        if (o && typeof o.length === "number")
          return {
            next: function() {
              if (o && i3 >= o.length)
                o = void 0;
              return { value: o && o[i3++], done: !o };
            }
          };
        throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
      };
      __read = function(o, n2) {
        var m4 = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m4)
          return o;
        var i3 = m4.call(o), r, ar = [], e;
        try {
          while ((n2 === void 0 || n2-- > 0) && !(r = i3.next()).done)
            ar.push(r.value);
        } catch (error) {
          e = { error };
        } finally {
          try {
            if (r && !r.done && (m4 = i3["return"]))
              m4.call(i3);
          } finally {
            if (e)
              throw e.error;
          }
        }
        return ar;
      };
      __spread = function() {
        for (var ar = [], i3 = 0; i3 < arguments.length; i3++)
          ar = ar.concat(__read(arguments[i3]));
        return ar;
      };
      __spreadArrays = function() {
        for (var s = 0, i3 = 0, il = arguments.length; i3 < il; i3++)
          s += arguments[i3].length;
        for (var r = Array(s), k3 = 0, i3 = 0; i3 < il; i3++)
          for (var a2 = arguments[i3], j7 = 0, jl = a2.length; j7 < jl; j7++, k3++)
            r[k3] = a2[j7];
        return r;
      };
      __await = function(v) {
        return this instanceof __await ? (this.v = v, this) : new __await(v);
      };
      __asyncGenerator = function(thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator)
          throw new TypeError("Symbol.asyncIterator is not defined.");
        var g3 = generator.apply(thisArg, _arguments || []), i3, q4 = [];
        return i3 = {}, verb("next"), verb("throw"), verb("return"), i3[Symbol.asyncIterator] = function() {
          return this;
        }, i3;
        function verb(n2) {
          if (g3[n2])
            i3[n2] = function(v) {
              return new Promise(function(a2, b5) {
                q4.push([n2, v, a2, b5]) > 1 || resume(n2, v);
              });
            };
        }
        function resume(n2, v) {
          try {
            step(g3[n2](v));
          } catch (e) {
            settle(q4[0][3], e);
          }
        }
        function step(r) {
          r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q4[0][2], r);
        }
        function fulfill(value) {
          resume("next", value);
        }
        function reject(value) {
          resume("throw", value);
        }
        function settle(f4, v) {
          if (f4(v), q4.shift(), q4.length)
            resume(q4[0][0], q4[0][1]);
        }
      };
      __asyncDelegator = function(o) {
        var i3, p4;
        return i3 = {}, verb("next"), verb("throw", function(e) {
          throw e;
        }), verb("return"), i3[Symbol.iterator] = function() {
          return this;
        }, i3;
        function verb(n2, f4) {
          i3[n2] = o[n2] ? function(v) {
            return (p4 = !p4) ? { value: __await(o[n2](v)), done: n2 === "return" } : f4 ? f4(v) : v;
          } : f4;
        }
      };
      __asyncValues = function(o) {
        if (!Symbol.asyncIterator)
          throw new TypeError("Symbol.asyncIterator is not defined.");
        var m4 = o[Symbol.asyncIterator], i3;
        return m4 ? m4.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i3 = {}, verb("next"), verb("throw"), verb("return"), i3[Symbol.asyncIterator] = function() {
          return this;
        }, i3);
        function verb(n2) {
          i3[n2] = o[n2] && function(v) {
            return new Promise(function(resolve, reject) {
              v = o[n2](v), settle(resolve, reject, v.done, v.value);
            });
          };
        }
        function settle(resolve, reject, d2, v) {
          Promise.resolve(v).then(function(v2) {
            resolve({ value: v2, done: d2 });
          }, reject);
        }
      };
      __makeTemplateObject = function(cooked, raw) {
        if (Object.defineProperty) {
          Object.defineProperty(cooked, "raw", { value: raw });
        } else {
          cooked.raw = raw;
        }
        return cooked;
      };
      __importStar = function(mod) {
        if (mod && mod.__esModule)
          return mod;
        var result = {};
        if (mod != null) {
          for (var k3 in mod)
            if (Object.hasOwnProperty.call(mod, k3))
              result[k3] = mod[k3];
        }
        result["default"] = mod;
        return result;
      };
      __importDefault = function(mod) {
        return mod && mod.__esModule ? mod : { "default": mod };
      };
      __classPrivateFieldGet = function(receiver, privateMap) {
        if (!privateMap.has(receiver)) {
          throw new TypeError("attempted to get private field on non-instance");
        }
        return privateMap.get(receiver);
      };
      __classPrivateFieldSet = function(receiver, privateMap, value) {
        if (!privateMap.has(receiver)) {
          throw new TypeError("attempted to set private field on non-instance");
        }
        privateMap.set(receiver, value);
        return value;
      };
      exporter("__extends", __extends);
      exporter("__assign", __assign);
      exporter("__rest", __rest);
      exporter("__decorate", __decorate);
      exporter("__param", __param);
      exporter("__metadata", __metadata);
      exporter("__awaiter", __awaiter);
      exporter("__generator", __generator);
      exporter("__exportStar", __exportStar);
      exporter("__createBinding", __createBinding);
      exporter("__values", __values);
      exporter("__read", __read);
      exporter("__spread", __spread);
      exporter("__spreadArrays", __spreadArrays);
      exporter("__await", __await);
      exporter("__asyncGenerator", __asyncGenerator);
      exporter("__asyncDelegator", __asyncDelegator);
      exporter("__asyncValues", __asyncValues);
      exporter("__makeTemplateObject", __makeTemplateObject);
      exporter("__importStar", __importStar);
      exporter("__importDefault", __importDefault);
      exporter("__classPrivateFieldGet", __classPrivateFieldGet);
      exporter("__classPrivateFieldSet", __classPrivateFieldSet);
    });
  }
});

// node_modules/quick-format-unescaped/index.js
var require_quick_format_unescaped = __commonJS({
  "node_modules/quick-format-unescaped/index.js"(exports, module) {
    "use strict";
    init_define_process_env();
    function tryStringify(o) {
      try {
        return JSON.stringify(o);
      } catch (e) {
        return '"[Circular]"';
      }
    }
    module.exports = format;
    function format(f4, args, opts) {
      var ss3 = opts && opts.stringify || tryStringify;
      var offset = 1;
      if (typeof f4 === "object" && f4 !== null) {
        var len = args.length + offset;
        if (len === 1)
          return f4;
        var objects = new Array(len);
        objects[0] = ss3(f4);
        for (var index = 1; index < len; index++) {
          objects[index] = ss3(args[index]);
        }
        return objects.join(" ");
      }
      if (typeof f4 !== "string") {
        return f4;
      }
      var argLen = args.length;
      if (argLen === 0)
        return f4;
      var str = "";
      var a2 = 1 - offset;
      var lastPos = -1;
      var flen = f4 && f4.length || 0;
      for (var i3 = 0; i3 < flen; ) {
        if (f4.charCodeAt(i3) === 37 && i3 + 1 < flen) {
          lastPos = lastPos > -1 ? lastPos : 0;
          switch (f4.charCodeAt(i3 + 1)) {
            case 100:
            case 102:
              if (a2 >= argLen)
                break;
              if (args[a2] == null)
                break;
              if (lastPos < i3)
                str += f4.slice(lastPos, i3);
              str += Number(args[a2]);
              lastPos = i3 + 2;
              i3++;
              break;
            case 105:
              if (a2 >= argLen)
                break;
              if (args[a2] == null)
                break;
              if (lastPos < i3)
                str += f4.slice(lastPos, i3);
              str += Math.floor(Number(args[a2]));
              lastPos = i3 + 2;
              i3++;
              break;
            case 79:
            case 111:
            case 106:
              if (a2 >= argLen)
                break;
              if (args[a2] === void 0)
                break;
              if (lastPos < i3)
                str += f4.slice(lastPos, i3);
              var type = typeof args[a2];
              if (type === "string") {
                str += "'" + args[a2] + "'";
                lastPos = i3 + 2;
                i3++;
                break;
              }
              if (type === "function") {
                str += args[a2].name || "<anonymous>";
                lastPos = i3 + 2;
                i3++;
                break;
              }
              str += ss3(args[a2]);
              lastPos = i3 + 2;
              i3++;
              break;
            case 115:
              if (a2 >= argLen)
                break;
              if (lastPos < i3)
                str += f4.slice(lastPos, i3);
              str += String(args[a2]);
              lastPos = i3 + 2;
              i3++;
              break;
            case 37:
              if (lastPos < i3)
                str += f4.slice(lastPos, i3);
              str += "%";
              lastPos = i3 + 2;
              i3++;
              a2--;
              break;
          }
          ++a2;
        }
        ++i3;
      }
      if (lastPos === -1)
        return f4;
      else if (lastPos < flen) {
        str += f4.slice(lastPos);
      }
      return str;
    }
  }
});

// node_modules/pino/browser.js
var require_browser3 = __commonJS({
  "node_modules/pino/browser.js"(exports, module) {
    "use strict";
    init_define_process_env();
    var format = require_quick_format_unescaped();
    module.exports = pino;
    var _console = pfGlobalThisOrFallback().console || {};
    var stdSerializers = {
      mapHttpRequest: mock,
      mapHttpResponse: mock,
      wrapRequestSerializer: passthrough,
      wrapResponseSerializer: passthrough,
      wrapErrorSerializer: passthrough,
      req: mock,
      res: mock,
      err: asErrValue
    };
    function shouldSerialize(serialize, serializers) {
      if (Array.isArray(serialize)) {
        const hasToFilter = serialize.filter(function(k3) {
          return k3 !== "!stdSerializers.err";
        });
        return hasToFilter;
      } else if (serialize === true) {
        return Object.keys(serializers);
      }
      return false;
    }
    function pino(opts) {
      opts = opts || {};
      opts.browser = opts.browser || {};
      const transmit2 = opts.browser.transmit;
      if (transmit2 && typeof transmit2.send !== "function") {
        throw Error("pino: transmit option must have a send function");
      }
      const proto = opts.browser.write || _console;
      if (opts.browser.write)
        opts.browser.asObject = true;
      const serializers = opts.serializers || {};
      const serialize = shouldSerialize(opts.browser.serialize, serializers);
      let stdErrSerialize = opts.browser.serialize;
      if (Array.isArray(opts.browser.serialize) && opts.browser.serialize.indexOf("!stdSerializers.err") > -1)
        stdErrSerialize = false;
      const levels = ["error", "fatal", "warn", "info", "debug", "trace"];
      if (typeof proto === "function") {
        proto.error = proto.fatal = proto.warn = proto.info = proto.debug = proto.trace = proto;
      }
      if (opts.enabled === false)
        opts.level = "silent";
      const level = opts.level || "info";
      const logger = Object.create(proto);
      if (!logger.log)
        logger.log = noop;
      Object.defineProperty(logger, "levelVal", {
        get: getLevelVal
      });
      Object.defineProperty(logger, "level", {
        get: getLevel,
        set: setLevel
      });
      const setOpts = {
        transmit: transmit2,
        serialize,
        asObject: opts.browser.asObject,
        levels,
        timestamp: getTimeFunction(opts)
      };
      logger.levels = pino.levels;
      logger.level = level;
      logger.setMaxListeners = logger.getMaxListeners = logger.emit = logger.addListener = logger.on = logger.prependListener = logger.once = logger.prependOnceListener = logger.removeListener = logger.removeAllListeners = logger.listeners = logger.listenerCount = logger.eventNames = logger.write = logger.flush = noop;
      logger.serializers = serializers;
      logger._serialize = serialize;
      logger._stdErrSerialize = stdErrSerialize;
      logger.child = child;
      if (transmit2)
        logger._logEvent = createLogEventShape();
      function getLevelVal() {
        return this.level === "silent" ? Infinity : this.levels.values[this.level];
      }
      function getLevel() {
        return this._level;
      }
      function setLevel(level2) {
        if (level2 !== "silent" && !this.levels.values[level2]) {
          throw Error("unknown level " + level2);
        }
        this._level = level2;
        set(setOpts, logger, "error", "log");
        set(setOpts, logger, "fatal", "error");
        set(setOpts, logger, "warn", "error");
        set(setOpts, logger, "info", "log");
        set(setOpts, logger, "debug", "log");
        set(setOpts, logger, "trace", "log");
      }
      function child(bindings, childOptions) {
        if (!bindings) {
          throw new Error("missing bindings for child Pino");
        }
        childOptions = childOptions || {};
        if (serialize && bindings.serializers) {
          childOptions.serializers = bindings.serializers;
        }
        const childOptionsSerializers = childOptions.serializers;
        if (serialize && childOptionsSerializers) {
          var childSerializers = Object.assign({}, serializers, childOptionsSerializers);
          var childSerialize = opts.browser.serialize === true ? Object.keys(childSerializers) : serialize;
          delete bindings.serializers;
          applySerializers([bindings], childSerialize, childSerializers, this._stdErrSerialize);
        }
        function Child(parent) {
          this._childLevel = (parent._childLevel | 0) + 1;
          this.error = bind(parent, bindings, "error");
          this.fatal = bind(parent, bindings, "fatal");
          this.warn = bind(parent, bindings, "warn");
          this.info = bind(parent, bindings, "info");
          this.debug = bind(parent, bindings, "debug");
          this.trace = bind(parent, bindings, "trace");
          if (childSerializers) {
            this.serializers = childSerializers;
            this._serialize = childSerialize;
          }
          if (transmit2) {
            this._logEvent = createLogEventShape([].concat(parent._logEvent.bindings, bindings));
          }
        }
        Child.prototype = this;
        return new Child(this);
      }
      return logger;
    }
    pino.levels = {
      values: {
        fatal: 60,
        error: 50,
        warn: 40,
        info: 30,
        debug: 20,
        trace: 10
      },
      labels: {
        10: "trace",
        20: "debug",
        30: "info",
        40: "warn",
        50: "error",
        60: "fatal"
      }
    };
    pino.stdSerializers = stdSerializers;
    pino.stdTimeFunctions = Object.assign({}, { nullTime, epochTime, unixTime, isoTime });
    function set(opts, logger, level, fallback) {
      const proto = Object.getPrototypeOf(logger);
      logger[level] = logger.levelVal > logger.levels.values[level] ? noop : proto[level] ? proto[level] : _console[level] || _console[fallback] || noop;
      wrap(opts, logger, level);
    }
    function wrap(opts, logger, level) {
      if (!opts.transmit && logger[level] === noop)
        return;
      logger[level] = function(write) {
        return function LOG() {
          const ts3 = opts.timestamp();
          const args = new Array(arguments.length);
          const proto = Object.getPrototypeOf && Object.getPrototypeOf(this) === _console ? _console : this;
          for (var i3 = 0; i3 < args.length; i3++)
            args[i3] = arguments[i3];
          if (opts.serialize && !opts.asObject) {
            applySerializers(args, this._serialize, this.serializers, this._stdErrSerialize);
          }
          if (opts.asObject)
            write.call(proto, asObject(this, level, args, ts3));
          else
            write.apply(proto, args);
          if (opts.transmit) {
            const transmitLevel = opts.transmit.level || logger.level;
            const transmitValue = pino.levels.values[transmitLevel];
            const methodValue = pino.levels.values[level];
            if (methodValue < transmitValue)
              return;
            transmit(this, {
              ts: ts3,
              methodLevel: level,
              methodValue,
              transmitLevel,
              transmitValue: pino.levels.values[opts.transmit.level || logger.level],
              send: opts.transmit.send,
              val: logger.levelVal
            }, args);
          }
        };
      }(logger[level]);
    }
    function asObject(logger, level, args, ts3) {
      if (logger._serialize)
        applySerializers(args, logger._serialize, logger.serializers, logger._stdErrSerialize);
      const argsCloned = args.slice();
      let msg = argsCloned[0];
      const o = {};
      if (ts3) {
        o.time = ts3;
      }
      o.level = pino.levels.values[level];
      let lvl = (logger._childLevel | 0) + 1;
      if (lvl < 1)
        lvl = 1;
      if (msg !== null && typeof msg === "object") {
        while (lvl-- && typeof argsCloned[0] === "object") {
          Object.assign(o, argsCloned.shift());
        }
        msg = argsCloned.length ? format(argsCloned.shift(), argsCloned) : void 0;
      } else if (typeof msg === "string")
        msg = format(argsCloned.shift(), argsCloned);
      if (msg !== void 0)
        o.msg = msg;
      return o;
    }
    function applySerializers(args, serialize, serializers, stdErrSerialize) {
      for (const i3 in args) {
        if (stdErrSerialize && args[i3] instanceof Error) {
          args[i3] = pino.stdSerializers.err(args[i3]);
        } else if (typeof args[i3] === "object" && !Array.isArray(args[i3])) {
          for (const k3 in args[i3]) {
            if (serialize && serialize.indexOf(k3) > -1 && k3 in serializers) {
              args[i3][k3] = serializers[k3](args[i3][k3]);
            }
          }
        }
      }
    }
    function bind(parent, bindings, level) {
      return function() {
        const args = new Array(1 + arguments.length);
        args[0] = bindings;
        for (var i3 = 1; i3 < args.length; i3++) {
          args[i3] = arguments[i3 - 1];
        }
        return parent[level].apply(this, args);
      };
    }
    function transmit(logger, opts, args) {
      const send = opts.send;
      const ts3 = opts.ts;
      const methodLevel = opts.methodLevel;
      const methodValue = opts.methodValue;
      const val = opts.val;
      const bindings = logger._logEvent.bindings;
      applySerializers(args, logger._serialize || Object.keys(logger.serializers), logger.serializers, logger._stdErrSerialize === void 0 ? true : logger._stdErrSerialize);
      logger._logEvent.ts = ts3;
      logger._logEvent.messages = args.filter(function(arg) {
        return bindings.indexOf(arg) === -1;
      });
      logger._logEvent.level.label = methodLevel;
      logger._logEvent.level.value = methodValue;
      send(methodLevel, logger._logEvent, val);
      logger._logEvent = createLogEventShape(bindings);
    }
    function createLogEventShape(bindings) {
      return {
        ts: 0,
        messages: [],
        bindings: bindings || [],
        level: { label: "", value: 0 }
      };
    }
    function asErrValue(err) {
      const obj = {
        type: err.constructor.name,
        msg: err.message,
        stack: err.stack
      };
      for (const key in err) {
        if (obj[key] === void 0) {
          obj[key] = err[key];
        }
      }
      return obj;
    }
    function getTimeFunction(opts) {
      if (typeof opts.timestamp === "function") {
        return opts.timestamp;
      }
      if (opts.timestamp === false) {
        return nullTime;
      }
      return epochTime;
    }
    function mock() {
      return {};
    }
    function passthrough(a2) {
      return a2;
    }
    function noop() {
    }
    function nullTime() {
      return false;
    }
    function epochTime() {
      return Date.now();
    }
    function unixTime() {
      return Math.round(Date.now() / 1e3);
    }
    function isoTime() {
      return new Date(Date.now()).toISOString();
    }
    function pfGlobalThisOrFallback() {
      function defd(o) {
        return typeof o !== "undefined" && o;
      }
      try {
        if (typeof globalThis !== "undefined")
          return globalThis;
        Object.defineProperty(Object.prototype, "globalThis", {
          get: function() {
            delete Object.prototype.globalThis;
            return this.globalThis = this;
          },
          configurable: true
        });
        return globalThis;
      } catch (e) {
        return defd(self) || defd(window) || defd(this) || {};
      }
    }
  }
});

// node_modules/@walletconnect/logger/dist/cjs/constants.js
var require_constants3 = __commonJS({
  "node_modules/@walletconnect/logger/dist/cjs/constants.js"(exports) {
    "use strict";
    init_define_process_env();
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.PINO_CUSTOM_CONTEXT_KEY = exports.PINO_LOGGER_DEFAULTS = void 0;
    exports.PINO_LOGGER_DEFAULTS = {
      level: "info"
    };
    exports.PINO_CUSTOM_CONTEXT_KEY = "custom_context";
  }
});

// node_modules/@walletconnect/logger/dist/cjs/utils.js
var require_utils3 = __commonJS({
  "node_modules/@walletconnect/logger/dist/cjs/utils.js"(exports) {
    "use strict";
    init_define_process_env();
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.generateChildLogger = exports.formatChildLoggerContext = exports.getLoggerContext = exports.setBrowserLoggerContext = exports.getBrowserLoggerContext = exports.getDefaultLoggerOptions = void 0;
    var constants_1 = require_constants3();
    function getDefaultLoggerOptions(opts) {
      return Object.assign(Object.assign({}, opts), { level: (opts === null || opts === void 0 ? void 0 : opts.level) || constants_1.PINO_LOGGER_DEFAULTS.level });
    }
    exports.getDefaultLoggerOptions = getDefaultLoggerOptions;
    function getBrowserLoggerContext(logger, customContextKey = constants_1.PINO_CUSTOM_CONTEXT_KEY) {
      return logger[customContextKey] || "";
    }
    exports.getBrowserLoggerContext = getBrowserLoggerContext;
    function setBrowserLoggerContext(logger, context, customContextKey = constants_1.PINO_CUSTOM_CONTEXT_KEY) {
      logger[customContextKey] = context;
      return logger;
    }
    exports.setBrowserLoggerContext = setBrowserLoggerContext;
    function getLoggerContext(logger, customContextKey = constants_1.PINO_CUSTOM_CONTEXT_KEY) {
      let context = "";
      if (typeof logger.bindings === "undefined") {
        context = getBrowserLoggerContext(logger, customContextKey);
      } else {
        context = logger.bindings().context || "";
      }
      return context;
    }
    exports.getLoggerContext = getLoggerContext;
    function formatChildLoggerContext(logger, childContext, customContextKey = constants_1.PINO_CUSTOM_CONTEXT_KEY) {
      const parentContext = getLoggerContext(logger, customContextKey);
      const context = parentContext.trim() ? `${parentContext}/${childContext}` : childContext;
      return context;
    }
    exports.formatChildLoggerContext = formatChildLoggerContext;
    function generateChildLogger(logger, childContext, customContextKey = constants_1.PINO_CUSTOM_CONTEXT_KEY) {
      const context = formatChildLoggerContext(logger, childContext, customContextKey);
      const child = logger.child({ context });
      return setBrowserLoggerContext(child, context, customContextKey);
    }
    exports.generateChildLogger = generateChildLogger;
  }
});

// node_modules/@walletconnect/logger/dist/cjs/index.js
var require_cjs6 = __commonJS({
  "node_modules/@walletconnect/logger/dist/cjs/index.js"(exports) {
    "use strict";
    init_define_process_env();
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.pino = void 0;
    var tslib_1 = require_tslib4();
    var pino_1 = tslib_1.__importDefault(require_browser3());
    Object.defineProperty(exports, "pino", { enumerable: true, get: function() {
      return pino_1.default;
    } });
    tslib_1.__exportStar(require_constants3(), exports);
    tslib_1.__exportStar(require_utils3(), exports);
  }
});

// node_modules/@stablelib/sha512/lib/sha512.js
var require_sha512 = __commonJS({
  "node_modules/@stablelib/sha512/lib/sha512.js"(exports) {
    "use strict";
    init_define_process_env();
    Object.defineProperty(exports, "__esModule", { value: true });
    var binary_1 = require_binary();
    var wipe_1 = require_wipe();
    exports.DIGEST_LENGTH = 64;
    exports.BLOCK_SIZE = 128;
    var SHA512 = function() {
      function SHA5122() {
        this.digestLength = exports.DIGEST_LENGTH;
        this.blockSize = exports.BLOCK_SIZE;
        this._stateHi = new Int32Array(8);
        this._stateLo = new Int32Array(8);
        this._tempHi = new Int32Array(16);
        this._tempLo = new Int32Array(16);
        this._buffer = new Uint8Array(256);
        this._bufferLength = 0;
        this._bytesHashed = 0;
        this._finished = false;
        this.reset();
      }
      SHA5122.prototype._initState = function() {
        this._stateHi[0] = 1779033703;
        this._stateHi[1] = 3144134277;
        this._stateHi[2] = 1013904242;
        this._stateHi[3] = 2773480762;
        this._stateHi[4] = 1359893119;
        this._stateHi[5] = 2600822924;
        this._stateHi[6] = 528734635;
        this._stateHi[7] = 1541459225;
        this._stateLo[0] = 4089235720;
        this._stateLo[1] = 2227873595;
        this._stateLo[2] = 4271175723;
        this._stateLo[3] = 1595750129;
        this._stateLo[4] = 2917565137;
        this._stateLo[5] = 725511199;
        this._stateLo[6] = 4215389547;
        this._stateLo[7] = 327033209;
      };
      SHA5122.prototype.reset = function() {
        this._initState();
        this._bufferLength = 0;
        this._bytesHashed = 0;
        this._finished = false;
        return this;
      };
      SHA5122.prototype.clean = function() {
        wipe_1.wipe(this._buffer);
        wipe_1.wipe(this._tempHi);
        wipe_1.wipe(this._tempLo);
        this.reset();
      };
      SHA5122.prototype.update = function(data, dataLength) {
        if (dataLength === void 0) {
          dataLength = data.length;
        }
        if (this._finished) {
          throw new Error("SHA512: can't update because hash was finished.");
        }
        var dataPos = 0;
        this._bytesHashed += dataLength;
        if (this._bufferLength > 0) {
          while (this._bufferLength < exports.BLOCK_SIZE && dataLength > 0) {
            this._buffer[this._bufferLength++] = data[dataPos++];
            dataLength--;
          }
          if (this._bufferLength === this.blockSize) {
            hashBlocks(this._tempHi, this._tempLo, this._stateHi, this._stateLo, this._buffer, 0, this.blockSize);
            this._bufferLength = 0;
          }
        }
        if (dataLength >= this.blockSize) {
          dataPos = hashBlocks(this._tempHi, this._tempLo, this._stateHi, this._stateLo, data, dataPos, dataLength);
          dataLength %= this.blockSize;
        }
        while (dataLength > 0) {
          this._buffer[this._bufferLength++] = data[dataPos++];
          dataLength--;
        }
        return this;
      };
      SHA5122.prototype.finish = function(out) {
        if (!this._finished) {
          var bytesHashed = this._bytesHashed;
          var left = this._bufferLength;
          var bitLenHi = bytesHashed / 536870912 | 0;
          var bitLenLo = bytesHashed << 3;
          var padLength = bytesHashed % 128 < 112 ? 128 : 256;
          this._buffer[left] = 128;
          for (var i3 = left + 1; i3 < padLength - 8; i3++) {
            this._buffer[i3] = 0;
          }
          binary_1.writeUint32BE(bitLenHi, this._buffer, padLength - 8);
          binary_1.writeUint32BE(bitLenLo, this._buffer, padLength - 4);
          hashBlocks(this._tempHi, this._tempLo, this._stateHi, this._stateLo, this._buffer, 0, padLength);
          this._finished = true;
        }
        for (var i3 = 0; i3 < this.digestLength / 8; i3++) {
          binary_1.writeUint32BE(this._stateHi[i3], out, i3 * 8);
          binary_1.writeUint32BE(this._stateLo[i3], out, i3 * 8 + 4);
        }
        return this;
      };
      SHA5122.prototype.digest = function() {
        var out = new Uint8Array(this.digestLength);
        this.finish(out);
        return out;
      };
      SHA5122.prototype.saveState = function() {
        if (this._finished) {
          throw new Error("SHA256: cannot save finished state");
        }
        return {
          stateHi: new Int32Array(this._stateHi),
          stateLo: new Int32Array(this._stateLo),
          buffer: this._bufferLength > 0 ? new Uint8Array(this._buffer) : void 0,
          bufferLength: this._bufferLength,
          bytesHashed: this._bytesHashed
        };
      };
      SHA5122.prototype.restoreState = function(savedState) {
        this._stateHi.set(savedState.stateHi);
        this._stateLo.set(savedState.stateLo);
        this._bufferLength = savedState.bufferLength;
        if (savedState.buffer) {
          this._buffer.set(savedState.buffer);
        }
        this._bytesHashed = savedState.bytesHashed;
        this._finished = false;
        return this;
      };
      SHA5122.prototype.cleanSavedState = function(savedState) {
        wipe_1.wipe(savedState.stateHi);
        wipe_1.wipe(savedState.stateLo);
        if (savedState.buffer) {
          wipe_1.wipe(savedState.buffer);
        }
        savedState.bufferLength = 0;
        savedState.bytesHashed = 0;
      };
      return SHA5122;
    }();
    exports.SHA512 = SHA512;
    var K4 = new Int32Array([
      1116352408,
      3609767458,
      1899447441,
      602891725,
      3049323471,
      3964484399,
      3921009573,
      2173295548,
      961987163,
      4081628472,
      1508970993,
      3053834265,
      2453635748,
      2937671579,
      2870763221,
      3664609560,
      3624381080,
      2734883394,
      310598401,
      1164996542,
      607225278,
      1323610764,
      1426881987,
      3590304994,
      1925078388,
      4068182383,
      2162078206,
      991336113,
      2614888103,
      633803317,
      3248222580,
      3479774868,
      3835390401,
      2666613458,
      4022224774,
      944711139,
      264347078,
      2341262773,
      604807628,
      2007800933,
      770255983,
      1495990901,
      1249150122,
      1856431235,
      1555081692,
      3175218132,
      1996064986,
      2198950837,
      2554220882,
      3999719339,
      2821834349,
      766784016,
      2952996808,
      2566594879,
      3210313671,
      3203337956,
      3336571891,
      1034457026,
      3584528711,
      2466948901,
      113926993,
      3758326383,
      338241895,
      168717936,
      666307205,
      1188179964,
      773529912,
      1546045734,
      1294757372,
      1522805485,
      1396182291,
      2643833823,
      1695183700,
      2343527390,
      1986661051,
      1014477480,
      2177026350,
      1206759142,
      2456956037,
      344077627,
      2730485921,
      1290863460,
      2820302411,
      3158454273,
      3259730800,
      3505952657,
      3345764771,
      106217008,
      3516065817,
      3606008344,
      3600352804,
      1432725776,
      4094571909,
      1467031594,
      275423344,
      851169720,
      430227734,
      3100823752,
      506948616,
      1363258195,
      659060556,
      3750685593,
      883997877,
      3785050280,
      958139571,
      3318307427,
      1322822218,
      3812723403,
      1537002063,
      2003034995,
      1747873779,
      3602036899,
      1955562222,
      1575990012,
      2024104815,
      1125592928,
      2227730452,
      2716904306,
      2361852424,
      442776044,
      2428436474,
      593698344,
      2756734187,
      3733110249,
      3204031479,
      2999351573,
      3329325298,
      3815920427,
      3391569614,
      3928383900,
      3515267271,
      566280711,
      3940187606,
      3454069534,
      4118630271,
      4000239992,
      116418474,
      1914138554,
      174292421,
      2731055270,
      289380356,
      3203993006,
      460393269,
      320620315,
      685471733,
      587496836,
      852142971,
      1086792851,
      1017036298,
      365543100,
      1126000580,
      2618297676,
      1288033470,
      3409855158,
      1501505948,
      4234509866,
      1607167915,
      987167468,
      1816402316,
      1246189591
    ]);
    function hashBlocks(wh, wl, hh, hl, m4, pos, len) {
      var ah0 = hh[0], ah1 = hh[1], ah2 = hh[2], ah3 = hh[3], ah4 = hh[4], ah5 = hh[5], ah6 = hh[6], ah7 = hh[7], al0 = hl[0], al1 = hl[1], al2 = hl[2], al3 = hl[3], al4 = hl[4], al5 = hl[5], al6 = hl[6], al7 = hl[7];
      var h2, l;
      var th, tl;
      var a2, b5, c3, d2;
      while (len >= 128) {
        for (var i3 = 0; i3 < 16; i3++) {
          var j7 = 8 * i3 + pos;
          wh[i3] = binary_1.readUint32BE(m4, j7);
          wl[i3] = binary_1.readUint32BE(m4, j7 + 4);
        }
        for (var i3 = 0; i3 < 80; i3++) {
          var bh0 = ah0;
          var bh1 = ah1;
          var bh2 = ah2;
          var bh3 = ah3;
          var bh4 = ah4;
          var bh5 = ah5;
          var bh6 = ah6;
          var bh7 = ah7;
          var bl0 = al0;
          var bl1 = al1;
          var bl2 = al2;
          var bl3 = al3;
          var bl4 = al4;
          var bl5 = al5;
          var bl6 = al6;
          var bl7 = al7;
          h2 = ah7;
          l = al7;
          a2 = l & 65535;
          b5 = l >>> 16;
          c3 = h2 & 65535;
          d2 = h2 >>> 16;
          h2 = (ah4 >>> 14 | al4 << 32 - 14) ^ (ah4 >>> 18 | al4 << 32 - 18) ^ (al4 >>> 41 - 32 | ah4 << 32 - (41 - 32));
          l = (al4 >>> 14 | ah4 << 32 - 14) ^ (al4 >>> 18 | ah4 << 32 - 18) ^ (ah4 >>> 41 - 32 | al4 << 32 - (41 - 32));
          a2 += l & 65535;
          b5 += l >>> 16;
          c3 += h2 & 65535;
          d2 += h2 >>> 16;
          h2 = ah4 & ah5 ^ ~ah4 & ah6;
          l = al4 & al5 ^ ~al4 & al6;
          a2 += l & 65535;
          b5 += l >>> 16;
          c3 += h2 & 65535;
          d2 += h2 >>> 16;
          h2 = K4[i3 * 2];
          l = K4[i3 * 2 + 1];
          a2 += l & 65535;
          b5 += l >>> 16;
          c3 += h2 & 65535;
          d2 += h2 >>> 16;
          h2 = wh[i3 % 16];
          l = wl[i3 % 16];
          a2 += l & 65535;
          b5 += l >>> 16;
          c3 += h2 & 65535;
          d2 += h2 >>> 16;
          b5 += a2 >>> 16;
          c3 += b5 >>> 16;
          d2 += c3 >>> 16;
          th = c3 & 65535 | d2 << 16;
          tl = a2 & 65535 | b5 << 16;
          h2 = th;
          l = tl;
          a2 = l & 65535;
          b5 = l >>> 16;
          c3 = h2 & 65535;
          d2 = h2 >>> 16;
          h2 = (ah0 >>> 28 | al0 << 32 - 28) ^ (al0 >>> 34 - 32 | ah0 << 32 - (34 - 32)) ^ (al0 >>> 39 - 32 | ah0 << 32 - (39 - 32));
          l = (al0 >>> 28 | ah0 << 32 - 28) ^ (ah0 >>> 34 - 32 | al0 << 32 - (34 - 32)) ^ (ah0 >>> 39 - 32 | al0 << 32 - (39 - 32));
          a2 += l & 65535;
          b5 += l >>> 16;
          c3 += h2 & 65535;
          d2 += h2 >>> 16;
          h2 = ah0 & ah1 ^ ah0 & ah2 ^ ah1 & ah2;
          l = al0 & al1 ^ al0 & al2 ^ al1 & al2;
          a2 += l & 65535;
          b5 += l >>> 16;
          c3 += h2 & 65535;
          d2 += h2 >>> 16;
          b5 += a2 >>> 16;
          c3 += b5 >>> 16;
          d2 += c3 >>> 16;
          bh7 = c3 & 65535 | d2 << 16;
          bl7 = a2 & 65535 | b5 << 16;
          h2 = bh3;
          l = bl3;
          a2 = l & 65535;
          b5 = l >>> 16;
          c3 = h2 & 65535;
          d2 = h2 >>> 16;
          h2 = th;
          l = tl;
          a2 += l & 65535;
          b5 += l >>> 16;
          c3 += h2 & 65535;
          d2 += h2 >>> 16;
          b5 += a2 >>> 16;
          c3 += b5 >>> 16;
          d2 += c3 >>> 16;
          bh3 = c3 & 65535 | d2 << 16;
          bl3 = a2 & 65535 | b5 << 16;
          ah1 = bh0;
          ah2 = bh1;
          ah3 = bh2;
          ah4 = bh3;
          ah5 = bh4;
          ah6 = bh5;
          ah7 = bh6;
          ah0 = bh7;
          al1 = bl0;
          al2 = bl1;
          al3 = bl2;
          al4 = bl3;
          al5 = bl4;
          al6 = bl5;
          al7 = bl6;
          al0 = bl7;
          if (i3 % 16 === 15) {
            for (var j7 = 0; j7 < 16; j7++) {
              h2 = wh[j7];
              l = wl[j7];
              a2 = l & 65535;
              b5 = l >>> 16;
              c3 = h2 & 65535;
              d2 = h2 >>> 16;
              h2 = wh[(j7 + 9) % 16];
              l = wl[(j7 + 9) % 16];
              a2 += l & 65535;
              b5 += l >>> 16;
              c3 += h2 & 65535;
              d2 += h2 >>> 16;
              th = wh[(j7 + 1) % 16];
              tl = wl[(j7 + 1) % 16];
              h2 = (th >>> 1 | tl << 32 - 1) ^ (th >>> 8 | tl << 32 - 8) ^ th >>> 7;
              l = (tl >>> 1 | th << 32 - 1) ^ (tl >>> 8 | th << 32 - 8) ^ (tl >>> 7 | th << 32 - 7);
              a2 += l & 65535;
              b5 += l >>> 16;
              c3 += h2 & 65535;
              d2 += h2 >>> 16;
              th = wh[(j7 + 14) % 16];
              tl = wl[(j7 + 14) % 16];
              h2 = (th >>> 19 | tl << 32 - 19) ^ (tl >>> 61 - 32 | th << 32 - (61 - 32)) ^ th >>> 6;
              l = (tl >>> 19 | th << 32 - 19) ^ (th >>> 61 - 32 | tl << 32 - (61 - 32)) ^ (tl >>> 6 | th << 32 - 6);
              a2 += l & 65535;
              b5 += l >>> 16;
              c3 += h2 & 65535;
              d2 += h2 >>> 16;
              b5 += a2 >>> 16;
              c3 += b5 >>> 16;
              d2 += c3 >>> 16;
              wh[j7] = c3 & 65535 | d2 << 16;
              wl[j7] = a2 & 65535 | b5 << 16;
            }
          }
        }
        h2 = ah0;
        l = al0;
        a2 = l & 65535;
        b5 = l >>> 16;
        c3 = h2 & 65535;
        d2 = h2 >>> 16;
        h2 = hh[0];
        l = hl[0];
        a2 += l & 65535;
        b5 += l >>> 16;
        c3 += h2 & 65535;
        d2 += h2 >>> 16;
        b5 += a2 >>> 16;
        c3 += b5 >>> 16;
        d2 += c3 >>> 16;
        hh[0] = ah0 = c3 & 65535 | d2 << 16;
        hl[0] = al0 = a2 & 65535 | b5 << 16;
        h2 = ah1;
        l = al1;
        a2 = l & 65535;
        b5 = l >>> 16;
        c3 = h2 & 65535;
        d2 = h2 >>> 16;
        h2 = hh[1];
        l = hl[1];
        a2 += l & 65535;
        b5 += l >>> 16;
        c3 += h2 & 65535;
        d2 += h2 >>> 16;
        b5 += a2 >>> 16;
        c3 += b5 >>> 16;
        d2 += c3 >>> 16;
        hh[1] = ah1 = c3 & 65535 | d2 << 16;
        hl[1] = al1 = a2 & 65535 | b5 << 16;
        h2 = ah2;
        l = al2;
        a2 = l & 65535;
        b5 = l >>> 16;
        c3 = h2 & 65535;
        d2 = h2 >>> 16;
        h2 = hh[2];
        l = hl[2];
        a2 += l & 65535;
        b5 += l >>> 16;
        c3 += h2 & 65535;
        d2 += h2 >>> 16;
        b5 += a2 >>> 16;
        c3 += b5 >>> 16;
        d2 += c3 >>> 16;
        hh[2] = ah2 = c3 & 65535 | d2 << 16;
        hl[2] = al2 = a2 & 65535 | b5 << 16;
        h2 = ah3;
        l = al3;
        a2 = l & 65535;
        b5 = l >>> 16;
        c3 = h2 & 65535;
        d2 = h2 >>> 16;
        h2 = hh[3];
        l = hl[3];
        a2 += l & 65535;
        b5 += l >>> 16;
        c3 += h2 & 65535;
        d2 += h2 >>> 16;
        b5 += a2 >>> 16;
        c3 += b5 >>> 16;
        d2 += c3 >>> 16;
        hh[3] = ah3 = c3 & 65535 | d2 << 16;
        hl[3] = al3 = a2 & 65535 | b5 << 16;
        h2 = ah4;
        l = al4;
        a2 = l & 65535;
        b5 = l >>> 16;
        c3 = h2 & 65535;
        d2 = h2 >>> 16;
        h2 = hh[4];
        l = hl[4];
        a2 += l & 65535;
        b5 += l >>> 16;
        c3 += h2 & 65535;
        d2 += h2 >>> 16;
        b5 += a2 >>> 16;
        c3 += b5 >>> 16;
        d2 += c3 >>> 16;
        hh[4] = ah4 = c3 & 65535 | d2 << 16;
        hl[4] = al4 = a2 & 65535 | b5 << 16;
        h2 = ah5;
        l = al5;
        a2 = l & 65535;
        b5 = l >>> 16;
        c3 = h2 & 65535;
        d2 = h2 >>> 16;
        h2 = hh[5];
        l = hl[5];
        a2 += l & 65535;
        b5 += l >>> 16;
        c3 += h2 & 65535;
        d2 += h2 >>> 16;
        b5 += a2 >>> 16;
        c3 += b5 >>> 16;
        d2 += c3 >>> 16;
        hh[5] = ah5 = c3 & 65535 | d2 << 16;
        hl[5] = al5 = a2 & 65535 | b5 << 16;
        h2 = ah6;
        l = al6;
        a2 = l & 65535;
        b5 = l >>> 16;
        c3 = h2 & 65535;
        d2 = h2 >>> 16;
        h2 = hh[6];
        l = hl[6];
        a2 += l & 65535;
        b5 += l >>> 16;
        c3 += h2 & 65535;
        d2 += h2 >>> 16;
        b5 += a2 >>> 16;
        c3 += b5 >>> 16;
        d2 += c3 >>> 16;
        hh[6] = ah6 = c3 & 65535 | d2 << 16;
        hl[6] = al6 = a2 & 65535 | b5 << 16;
        h2 = ah7;
        l = al7;
        a2 = l & 65535;
        b5 = l >>> 16;
        c3 = h2 & 65535;
        d2 = h2 >>> 16;
        h2 = hh[7];
        l = hl[7];
        a2 += l & 65535;
        b5 += l >>> 16;
        c3 += h2 & 65535;
        d2 += h2 >>> 16;
        b5 += a2 >>> 16;
        c3 += b5 >>> 16;
        d2 += c3 >>> 16;
        hh[7] = ah7 = c3 & 65535 | d2 << 16;
        hl[7] = al7 = a2 & 65535 | b5 << 16;
        pos += 128;
        len -= 128;
      }
      return pos;
    }
    function hash(data) {
      var h2 = new SHA512();
      h2.update(data);
      var digest2 = h2.digest();
      h2.clean();
      return digest2;
    }
    exports.hash = hash;
  }
});

// node_modules/@stablelib/ed25519/lib/ed25519.js
var require_ed25519 = __commonJS({
  "node_modules/@stablelib/ed25519/lib/ed25519.js"(exports) {
    "use strict";
    init_define_process_env();
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.convertSecretKeyToX25519 = exports.convertPublicKeyToX25519 = exports.verify = exports.sign = exports.extractPublicKeyFromSecretKey = exports.generateKeyPair = exports.generateKeyPairFromSeed = exports.SEED_LENGTH = exports.SECRET_KEY_LENGTH = exports.PUBLIC_KEY_LENGTH = exports.SIGNATURE_LENGTH = void 0;
    var random_1 = require_random();
    var sha512_1 = require_sha512();
    var wipe_1 = require_wipe();
    exports.SIGNATURE_LENGTH = 64;
    exports.PUBLIC_KEY_LENGTH = 32;
    exports.SECRET_KEY_LENGTH = 64;
    exports.SEED_LENGTH = 32;
    function gf(init) {
      const r = new Float64Array(16);
      if (init) {
        for (let i3 = 0; i3 < init.length; i3++) {
          r[i3] = init[i3];
        }
      }
      return r;
    }
    var _9 = new Uint8Array(32);
    _9[0] = 9;
    var gf0 = gf();
    var gf1 = gf([1]);
    var D2 = gf([
      30883,
      4953,
      19914,
      30187,
      55467,
      16705,
      2637,
      112,
      59544,
      30585,
      16505,
      36039,
      65139,
      11119,
      27886,
      20995
    ]);
    var D22 = gf([
      61785,
      9906,
      39828,
      60374,
      45398,
      33411,
      5274,
      224,
      53552,
      61171,
      33010,
      6542,
      64743,
      22239,
      55772,
      9222
    ]);
    var X2 = gf([
      54554,
      36645,
      11616,
      51542,
      42930,
      38181,
      51040,
      26924,
      56412,
      64982,
      57905,
      49316,
      21502,
      52590,
      14035,
      8553
    ]);
    var Y4 = gf([
      26200,
      26214,
      26214,
      26214,
      26214,
      26214,
      26214,
      26214,
      26214,
      26214,
      26214,
      26214,
      26214,
      26214,
      26214,
      26214
    ]);
    var I2 = gf([
      41136,
      18958,
      6951,
      50414,
      58488,
      44335,
      6150,
      12099,
      55207,
      15867,
      153,
      11085,
      57099,
      20417,
      9344,
      11139
    ]);
    function set25519(r, a2) {
      for (let i3 = 0; i3 < 16; i3++) {
        r[i3] = a2[i3] | 0;
      }
    }
    function car25519(o) {
      let c3 = 1;
      for (let i3 = 0; i3 < 16; i3++) {
        let v = o[i3] + c3 + 65535;
        c3 = Math.floor(v / 65536);
        o[i3] = v - c3 * 65536;
      }
      o[0] += c3 - 1 + 37 * (c3 - 1);
    }
    function sel25519(p4, q4, b5) {
      const c3 = ~(b5 - 1);
      for (let i3 = 0; i3 < 16; i3++) {
        const t = c3 & (p4[i3] ^ q4[i3]);
        p4[i3] ^= t;
        q4[i3] ^= t;
      }
    }
    function pack25519(o, n2) {
      const m4 = gf();
      const t = gf();
      for (let i3 = 0; i3 < 16; i3++) {
        t[i3] = n2[i3];
      }
      car25519(t);
      car25519(t);
      car25519(t);
      for (let j7 = 0; j7 < 2; j7++) {
        m4[0] = t[0] - 65517;
        for (let i3 = 1; i3 < 15; i3++) {
          m4[i3] = t[i3] - 65535 - (m4[i3 - 1] >> 16 & 1);
          m4[i3 - 1] &= 65535;
        }
        m4[15] = t[15] - 32767 - (m4[14] >> 16 & 1);
        const b5 = m4[15] >> 16 & 1;
        m4[14] &= 65535;
        sel25519(t, m4, 1 - b5);
      }
      for (let i3 = 0; i3 < 16; i3++) {
        o[2 * i3] = t[i3] & 255;
        o[2 * i3 + 1] = t[i3] >> 8;
      }
    }
    function verify32(x3, y3) {
      let d2 = 0;
      for (let i3 = 0; i3 < 32; i3++) {
        d2 |= x3[i3] ^ y3[i3];
      }
      return (1 & d2 - 1 >>> 8) - 1;
    }
    function neq25519(a2, b5) {
      const c3 = new Uint8Array(32);
      const d2 = new Uint8Array(32);
      pack25519(c3, a2);
      pack25519(d2, b5);
      return verify32(c3, d2);
    }
    function par25519(a2) {
      const d2 = new Uint8Array(32);
      pack25519(d2, a2);
      return d2[0] & 1;
    }
    function unpack25519(o, n2) {
      for (let i3 = 0; i3 < 16; i3++) {
        o[i3] = n2[2 * i3] + (n2[2 * i3 + 1] << 8);
      }
      o[15] &= 32767;
    }
    function add(o, a2, b5) {
      for (let i3 = 0; i3 < 16; i3++) {
        o[i3] = a2[i3] + b5[i3];
      }
    }
    function sub(o, a2, b5) {
      for (let i3 = 0; i3 < 16; i3++) {
        o[i3] = a2[i3] - b5[i3];
      }
    }
    function mul(o, a2, b5) {
      let v, c3, t0 = 0, t1 = 0, t2 = 0, t3 = 0, t4 = 0, t5 = 0, t6 = 0, t7 = 0, t8 = 0, t9 = 0, t10 = 0, t11 = 0, t12 = 0, t13 = 0, t14 = 0, t15 = 0, t16 = 0, t17 = 0, t18 = 0, t19 = 0, t20 = 0, t21 = 0, t22 = 0, t23 = 0, t24 = 0, t25 = 0, t26 = 0, t27 = 0, t28 = 0, t29 = 0, t30 = 0, b0 = b5[0], b1 = b5[1], b22 = b5[2], b32 = b5[3], b42 = b5[4], b52 = b5[5], b6 = b5[6], b7 = b5[7], b8 = b5[8], b9 = b5[9], b10 = b5[10], b11 = b5[11], b12 = b5[12], b13 = b5[13], b14 = b5[14], b15 = b5[15];
      v = a2[0];
      t0 += v * b0;
      t1 += v * b1;
      t2 += v * b22;
      t3 += v * b32;
      t4 += v * b42;
      t5 += v * b52;
      t6 += v * b6;
      t7 += v * b7;
      t8 += v * b8;
      t9 += v * b9;
      t10 += v * b10;
      t11 += v * b11;
      t12 += v * b12;
      t13 += v * b13;
      t14 += v * b14;
      t15 += v * b15;
      v = a2[1];
      t1 += v * b0;
      t2 += v * b1;
      t3 += v * b22;
      t4 += v * b32;
      t5 += v * b42;
      t6 += v * b52;
      t7 += v * b6;
      t8 += v * b7;
      t9 += v * b8;
      t10 += v * b9;
      t11 += v * b10;
      t12 += v * b11;
      t13 += v * b12;
      t14 += v * b13;
      t15 += v * b14;
      t16 += v * b15;
      v = a2[2];
      t2 += v * b0;
      t3 += v * b1;
      t4 += v * b22;
      t5 += v * b32;
      t6 += v * b42;
      t7 += v * b52;
      t8 += v * b6;
      t9 += v * b7;
      t10 += v * b8;
      t11 += v * b9;
      t12 += v * b10;
      t13 += v * b11;
      t14 += v * b12;
      t15 += v * b13;
      t16 += v * b14;
      t17 += v * b15;
      v = a2[3];
      t3 += v * b0;
      t4 += v * b1;
      t5 += v * b22;
      t6 += v * b32;
      t7 += v * b42;
      t8 += v * b52;
      t9 += v * b6;
      t10 += v * b7;
      t11 += v * b8;
      t12 += v * b9;
      t13 += v * b10;
      t14 += v * b11;
      t15 += v * b12;
      t16 += v * b13;
      t17 += v * b14;
      t18 += v * b15;
      v = a2[4];
      t4 += v * b0;
      t5 += v * b1;
      t6 += v * b22;
      t7 += v * b32;
      t8 += v * b42;
      t9 += v * b52;
      t10 += v * b6;
      t11 += v * b7;
      t12 += v * b8;
      t13 += v * b9;
      t14 += v * b10;
      t15 += v * b11;
      t16 += v * b12;
      t17 += v * b13;
      t18 += v * b14;
      t19 += v * b15;
      v = a2[5];
      t5 += v * b0;
      t6 += v * b1;
      t7 += v * b22;
      t8 += v * b32;
      t9 += v * b42;
      t10 += v * b52;
      t11 += v * b6;
      t12 += v * b7;
      t13 += v * b8;
      t14 += v * b9;
      t15 += v * b10;
      t16 += v * b11;
      t17 += v * b12;
      t18 += v * b13;
      t19 += v * b14;
      t20 += v * b15;
      v = a2[6];
      t6 += v * b0;
      t7 += v * b1;
      t8 += v * b22;
      t9 += v * b32;
      t10 += v * b42;
      t11 += v * b52;
      t12 += v * b6;
      t13 += v * b7;
      t14 += v * b8;
      t15 += v * b9;
      t16 += v * b10;
      t17 += v * b11;
      t18 += v * b12;
      t19 += v * b13;
      t20 += v * b14;
      t21 += v * b15;
      v = a2[7];
      t7 += v * b0;
      t8 += v * b1;
      t9 += v * b22;
      t10 += v * b32;
      t11 += v * b42;
      t12 += v * b52;
      t13 += v * b6;
      t14 += v * b7;
      t15 += v * b8;
      t16 += v * b9;
      t17 += v * b10;
      t18 += v * b11;
      t19 += v * b12;
      t20 += v * b13;
      t21 += v * b14;
      t22 += v * b15;
      v = a2[8];
      t8 += v * b0;
      t9 += v * b1;
      t10 += v * b22;
      t11 += v * b32;
      t12 += v * b42;
      t13 += v * b52;
      t14 += v * b6;
      t15 += v * b7;
      t16 += v * b8;
      t17 += v * b9;
      t18 += v * b10;
      t19 += v * b11;
      t20 += v * b12;
      t21 += v * b13;
      t22 += v * b14;
      t23 += v * b15;
      v = a2[9];
      t9 += v * b0;
      t10 += v * b1;
      t11 += v * b22;
      t12 += v * b32;
      t13 += v * b42;
      t14 += v * b52;
      t15 += v * b6;
      t16 += v * b7;
      t17 += v * b8;
      t18 += v * b9;
      t19 += v * b10;
      t20 += v * b11;
      t21 += v * b12;
      t22 += v * b13;
      t23 += v * b14;
      t24 += v * b15;
      v = a2[10];
      t10 += v * b0;
      t11 += v * b1;
      t12 += v * b22;
      t13 += v * b32;
      t14 += v * b42;
      t15 += v * b52;
      t16 += v * b6;
      t17 += v * b7;
      t18 += v * b8;
      t19 += v * b9;
      t20 += v * b10;
      t21 += v * b11;
      t22 += v * b12;
      t23 += v * b13;
      t24 += v * b14;
      t25 += v * b15;
      v = a2[11];
      t11 += v * b0;
      t12 += v * b1;
      t13 += v * b22;
      t14 += v * b32;
      t15 += v * b42;
      t16 += v * b52;
      t17 += v * b6;
      t18 += v * b7;
      t19 += v * b8;
      t20 += v * b9;
      t21 += v * b10;
      t22 += v * b11;
      t23 += v * b12;
      t24 += v * b13;
      t25 += v * b14;
      t26 += v * b15;
      v = a2[12];
      t12 += v * b0;
      t13 += v * b1;
      t14 += v * b22;
      t15 += v * b32;
      t16 += v * b42;
      t17 += v * b52;
      t18 += v * b6;
      t19 += v * b7;
      t20 += v * b8;
      t21 += v * b9;
      t22 += v * b10;
      t23 += v * b11;
      t24 += v * b12;
      t25 += v * b13;
      t26 += v * b14;
      t27 += v * b15;
      v = a2[13];
      t13 += v * b0;
      t14 += v * b1;
      t15 += v * b22;
      t16 += v * b32;
      t17 += v * b42;
      t18 += v * b52;
      t19 += v * b6;
      t20 += v * b7;
      t21 += v * b8;
      t22 += v * b9;
      t23 += v * b10;
      t24 += v * b11;
      t25 += v * b12;
      t26 += v * b13;
      t27 += v * b14;
      t28 += v * b15;
      v = a2[14];
      t14 += v * b0;
      t15 += v * b1;
      t16 += v * b22;
      t17 += v * b32;
      t18 += v * b42;
      t19 += v * b52;
      t20 += v * b6;
      t21 += v * b7;
      t22 += v * b8;
      t23 += v * b9;
      t24 += v * b10;
      t25 += v * b11;
      t26 += v * b12;
      t27 += v * b13;
      t28 += v * b14;
      t29 += v * b15;
      v = a2[15];
      t15 += v * b0;
      t16 += v * b1;
      t17 += v * b22;
      t18 += v * b32;
      t19 += v * b42;
      t20 += v * b52;
      t21 += v * b6;
      t22 += v * b7;
      t23 += v * b8;
      t24 += v * b9;
      t25 += v * b10;
      t26 += v * b11;
      t27 += v * b12;
      t28 += v * b13;
      t29 += v * b14;
      t30 += v * b15;
      t0 += 38 * t16;
      t1 += 38 * t17;
      t2 += 38 * t18;
      t3 += 38 * t19;
      t4 += 38 * t20;
      t5 += 38 * t21;
      t6 += 38 * t22;
      t7 += 38 * t23;
      t8 += 38 * t24;
      t9 += 38 * t25;
      t10 += 38 * t26;
      t11 += 38 * t27;
      t12 += 38 * t28;
      t13 += 38 * t29;
      t14 += 38 * t30;
      c3 = 1;
      v = t0 + c3 + 65535;
      c3 = Math.floor(v / 65536);
      t0 = v - c3 * 65536;
      v = t1 + c3 + 65535;
      c3 = Math.floor(v / 65536);
      t1 = v - c3 * 65536;
      v = t2 + c3 + 65535;
      c3 = Math.floor(v / 65536);
      t2 = v - c3 * 65536;
      v = t3 + c3 + 65535;
      c3 = Math.floor(v / 65536);
      t3 = v - c3 * 65536;
      v = t4 + c3 + 65535;
      c3 = Math.floor(v / 65536);
      t4 = v - c3 * 65536;
      v = t5 + c3 + 65535;
      c3 = Math.floor(v / 65536);
      t5 = v - c3 * 65536;
      v = t6 + c3 + 65535;
      c3 = Math.floor(v / 65536);
      t6 = v - c3 * 65536;
      v = t7 + c3 + 65535;
      c3 = Math.floor(v / 65536);
      t7 = v - c3 * 65536;
      v = t8 + c3 + 65535;
      c3 = Math.floor(v / 65536);
      t8 = v - c3 * 65536;
      v = t9 + c3 + 65535;
      c3 = Math.floor(v / 65536);
      t9 = v - c3 * 65536;
      v = t10 + c3 + 65535;
      c3 = Math.floor(v / 65536);
      t10 = v - c3 * 65536;
      v = t11 + c3 + 65535;
      c3 = Math.floor(v / 65536);
      t11 = v - c3 * 65536;
      v = t12 + c3 + 65535;
      c3 = Math.floor(v / 65536);
      t12 = v - c3 * 65536;
      v = t13 + c3 + 65535;
      c3 = Math.floor(v / 65536);
      t13 = v - c3 * 65536;
      v = t14 + c3 + 65535;
      c3 = Math.floor(v / 65536);
      t14 = v - c3 * 65536;
      v = t15 + c3 + 65535;
      c3 = Math.floor(v / 65536);
      t15 = v - c3 * 65536;
      t0 += c3 - 1 + 37 * (c3 - 1);
      c3 = 1;
      v = t0 + c3 + 65535;
      c3 = Math.floor(v / 65536);
      t0 = v - c3 * 65536;
      v = t1 + c3 + 65535;
      c3 = Math.floor(v / 65536);
      t1 = v - c3 * 65536;
      v = t2 + c3 + 65535;
      c3 = Math.floor(v / 65536);
      t2 = v - c3 * 65536;
      v = t3 + c3 + 65535;
      c3 = Math.floor(v / 65536);
      t3 = v - c3 * 65536;
      v = t4 + c3 + 65535;
      c3 = Math.floor(v / 65536);
      t4 = v - c3 * 65536;
      v = t5 + c3 + 65535;
      c3 = Math.floor(v / 65536);
      t5 = v - c3 * 65536;
      v = t6 + c3 + 65535;
      c3 = Math.floor(v / 65536);
      t6 = v - c3 * 65536;
      v = t7 + c3 + 65535;
      c3 = Math.floor(v / 65536);
      t7 = v - c3 * 65536;
      v = t8 + c3 + 65535;
      c3 = Math.floor(v / 65536);
      t8 = v - c3 * 65536;
      v = t9 + c3 + 65535;
      c3 = Math.floor(v / 65536);
      t9 = v - c3 * 65536;
      v = t10 + c3 + 65535;
      c3 = Math.floor(v / 65536);
      t10 = v - c3 * 65536;
      v = t11 + c3 + 65535;
      c3 = Math.floor(v / 65536);
      t11 = v - c3 * 65536;
      v = t12 + c3 + 65535;
      c3 = Math.floor(v / 65536);
      t12 = v - c3 * 65536;
      v = t13 + c3 + 65535;
      c3 = Math.floor(v / 65536);
      t13 = v - c3 * 65536;
      v = t14 + c3 + 65535;
      c3 = Math.floor(v / 65536);
      t14 = v - c3 * 65536;
      v = t15 + c3 + 65535;
      c3 = Math.floor(v / 65536);
      t15 = v - c3 * 65536;
      t0 += c3 - 1 + 37 * (c3 - 1);
      o[0] = t0;
      o[1] = t1;
      o[2] = t2;
      o[3] = t3;
      o[4] = t4;
      o[5] = t5;
      o[6] = t6;
      o[7] = t7;
      o[8] = t8;
      o[9] = t9;
      o[10] = t10;
      o[11] = t11;
      o[12] = t12;
      o[13] = t13;
      o[14] = t14;
      o[15] = t15;
    }
    function square(o, a2) {
      mul(o, a2, a2);
    }
    function inv25519(o, i3) {
      const c3 = gf();
      let a2;
      for (a2 = 0; a2 < 16; a2++) {
        c3[a2] = i3[a2];
      }
      for (a2 = 253; a2 >= 0; a2--) {
        square(c3, c3);
        if (a2 !== 2 && a2 !== 4) {
          mul(c3, c3, i3);
        }
      }
      for (a2 = 0; a2 < 16; a2++) {
        o[a2] = c3[a2];
      }
    }
    function pow2523(o, i3) {
      const c3 = gf();
      let a2;
      for (a2 = 0; a2 < 16; a2++) {
        c3[a2] = i3[a2];
      }
      for (a2 = 250; a2 >= 0; a2--) {
        square(c3, c3);
        if (a2 !== 1) {
          mul(c3, c3, i3);
        }
      }
      for (a2 = 0; a2 < 16; a2++) {
        o[a2] = c3[a2];
      }
    }
    function edadd(p4, q4) {
      const a2 = gf(), b5 = gf(), c3 = gf(), d2 = gf(), e = gf(), f4 = gf(), g3 = gf(), h2 = gf(), t = gf();
      sub(a2, p4[1], p4[0]);
      sub(t, q4[1], q4[0]);
      mul(a2, a2, t);
      add(b5, p4[0], p4[1]);
      add(t, q4[0], q4[1]);
      mul(b5, b5, t);
      mul(c3, p4[3], q4[3]);
      mul(c3, c3, D22);
      mul(d2, p4[2], q4[2]);
      add(d2, d2, d2);
      sub(e, b5, a2);
      sub(f4, d2, c3);
      add(g3, d2, c3);
      add(h2, b5, a2);
      mul(p4[0], e, f4);
      mul(p4[1], h2, g3);
      mul(p4[2], g3, f4);
      mul(p4[3], e, h2);
    }
    function cswap(p4, q4, b5) {
      for (let i3 = 0; i3 < 4; i3++) {
        sel25519(p4[i3], q4[i3], b5);
      }
    }
    function pack(r, p4) {
      const tx = gf(), ty = gf(), zi = gf();
      inv25519(zi, p4[2]);
      mul(tx, p4[0], zi);
      mul(ty, p4[1], zi);
      pack25519(r, ty);
      r[31] ^= par25519(tx) << 7;
    }
    function scalarmult(p4, q4, s) {
      set25519(p4[0], gf0);
      set25519(p4[1], gf1);
      set25519(p4[2], gf1);
      set25519(p4[3], gf0);
      for (let i3 = 255; i3 >= 0; --i3) {
        const b5 = s[i3 / 8 | 0] >> (i3 & 7) & 1;
        cswap(p4, q4, b5);
        edadd(q4, p4);
        edadd(p4, p4);
        cswap(p4, q4, b5);
      }
    }
    function scalarbase(p4, s) {
      const q4 = [gf(), gf(), gf(), gf()];
      set25519(q4[0], X2);
      set25519(q4[1], Y4);
      set25519(q4[2], gf1);
      mul(q4[3], X2, Y4);
      scalarmult(p4, q4, s);
    }
    function generateKeyPairFromSeed2(seed) {
      if (seed.length !== exports.SEED_LENGTH) {
        throw new Error(`ed25519: seed must be ${exports.SEED_LENGTH} bytes`);
      }
      const d2 = (0, sha512_1.hash)(seed);
      d2[0] &= 248;
      d2[31] &= 127;
      d2[31] |= 64;
      const publicKey = new Uint8Array(32);
      const p4 = [gf(), gf(), gf(), gf()];
      scalarbase(p4, d2);
      pack(publicKey, p4);
      const secretKey = new Uint8Array(64);
      secretKey.set(seed);
      secretKey.set(publicKey, 32);
      return {
        publicKey,
        secretKey
      };
    }
    exports.generateKeyPairFromSeed = generateKeyPairFromSeed2;
    function generateKeyPair6(prng) {
      const seed = (0, random_1.randomBytes)(32, prng);
      const result = generateKeyPairFromSeed2(seed);
      (0, wipe_1.wipe)(seed);
      return result;
    }
    exports.generateKeyPair = generateKeyPair6;
    function extractPublicKeyFromSecretKey(secretKey) {
      if (secretKey.length !== exports.SECRET_KEY_LENGTH) {
        throw new Error(`ed25519: secret key must be ${exports.SECRET_KEY_LENGTH} bytes`);
      }
      return new Uint8Array(secretKey.subarray(32));
    }
    exports.extractPublicKeyFromSecretKey = extractPublicKeyFromSecretKey;
    var L3 = new Float64Array([
      237,
      211,
      245,
      92,
      26,
      99,
      18,
      88,
      214,
      156,
      247,
      162,
      222,
      249,
      222,
      20,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      16
    ]);
    function modL(r, x3) {
      let carry;
      let i3;
      let j7;
      let k3;
      for (i3 = 63; i3 >= 32; --i3) {
        carry = 0;
        for (j7 = i3 - 32, k3 = i3 - 12; j7 < k3; ++j7) {
          x3[j7] += carry - 16 * x3[i3] * L3[j7 - (i3 - 32)];
          carry = Math.floor((x3[j7] + 128) / 256);
          x3[j7] -= carry * 256;
        }
        x3[j7] += carry;
        x3[i3] = 0;
      }
      carry = 0;
      for (j7 = 0; j7 < 32; j7++) {
        x3[j7] += carry - (x3[31] >> 4) * L3[j7];
        carry = x3[j7] >> 8;
        x3[j7] &= 255;
      }
      for (j7 = 0; j7 < 32; j7++) {
        x3[j7] -= carry * L3[j7];
      }
      for (i3 = 0; i3 < 32; i3++) {
        x3[i3 + 1] += x3[i3] >> 8;
        r[i3] = x3[i3] & 255;
      }
    }
    function reduce(r) {
      const x3 = new Float64Array(64);
      for (let i3 = 0; i3 < 64; i3++) {
        x3[i3] = r[i3];
      }
      for (let i3 = 0; i3 < 64; i3++) {
        r[i3] = 0;
      }
      modL(r, x3);
    }
    function sign2(secretKey, message) {
      const x3 = new Float64Array(64);
      const p4 = [gf(), gf(), gf(), gf()];
      const d2 = (0, sha512_1.hash)(secretKey.subarray(0, 32));
      d2[0] &= 248;
      d2[31] &= 127;
      d2[31] |= 64;
      const signature = new Uint8Array(64);
      signature.set(d2.subarray(32), 32);
      const hs2 = new sha512_1.SHA512();
      hs2.update(signature.subarray(32));
      hs2.update(message);
      const r = hs2.digest();
      hs2.clean();
      reduce(r);
      scalarbase(p4, r);
      pack(signature, p4);
      hs2.reset();
      hs2.update(signature.subarray(0, 32));
      hs2.update(secretKey.subarray(32));
      hs2.update(message);
      const h2 = hs2.digest();
      reduce(h2);
      for (let i3 = 0; i3 < 32; i3++) {
        x3[i3] = r[i3];
      }
      for (let i3 = 0; i3 < 32; i3++) {
        for (let j7 = 0; j7 < 32; j7++) {
          x3[i3 + j7] += h2[i3] * d2[j7];
        }
      }
      modL(signature.subarray(32), x3);
      return signature;
    }
    exports.sign = sign2;
    function unpackneg(r, p4) {
      const t = gf(), chk = gf(), num = gf(), den = gf(), den2 = gf(), den4 = gf(), den6 = gf();
      set25519(r[2], gf1);
      unpack25519(r[1], p4);
      square(num, r[1]);
      mul(den, num, D2);
      sub(num, num, r[2]);
      add(den, r[2], den);
      square(den2, den);
      square(den4, den2);
      mul(den6, den4, den2);
      mul(t, den6, num);
      mul(t, t, den);
      pow2523(t, t);
      mul(t, t, num);
      mul(t, t, den);
      mul(t, t, den);
      mul(r[0], t, den);
      square(chk, r[0]);
      mul(chk, chk, den);
      if (neq25519(chk, num)) {
        mul(r[0], r[0], I2);
      }
      square(chk, r[0]);
      mul(chk, chk, den);
      if (neq25519(chk, num)) {
        return -1;
      }
      if (par25519(r[0]) === p4[31] >> 7) {
        sub(r[0], gf0, r[0]);
      }
      mul(r[3], r[0], r[1]);
      return 0;
    }
    function verify2(publicKey, message, signature) {
      const t = new Uint8Array(32);
      const p4 = [gf(), gf(), gf(), gf()];
      const q4 = [gf(), gf(), gf(), gf()];
      if (signature.length !== exports.SIGNATURE_LENGTH) {
        throw new Error(`ed25519: signature must be ${exports.SIGNATURE_LENGTH} bytes`);
      }
      if (unpackneg(q4, publicKey)) {
        return false;
      }
      const hs2 = new sha512_1.SHA512();
      hs2.update(signature.subarray(0, 32));
      hs2.update(publicKey);
      hs2.update(message);
      const h2 = hs2.digest();
      reduce(h2);
      scalarmult(p4, q4, h2);
      scalarbase(q4, signature.subarray(32));
      edadd(p4, q4);
      pack(t, p4);
      if (verify32(signature, t)) {
        return false;
      }
      return true;
    }
    exports.verify = verify2;
    function convertPublicKeyToX25519(publicKey) {
      let q4 = [gf(), gf(), gf(), gf()];
      if (unpackneg(q4, publicKey)) {
        throw new Error("Ed25519: invalid public key");
      }
      let a2 = gf();
      let b5 = gf();
      let y3 = q4[1];
      add(a2, gf1, y3);
      sub(b5, gf1, y3);
      inv25519(b5, b5);
      mul(a2, a2, b5);
      let z6 = new Uint8Array(32);
      pack25519(z6, a2);
      return z6;
    }
    exports.convertPublicKeyToX25519 = convertPublicKeyToX25519;
    function convertSecretKeyToX25519(secretKey) {
      const d2 = (0, sha512_1.hash)(secretKey.subarray(0, 32));
      d2[0] &= 248;
      d2[31] &= 127;
      d2[31] |= 64;
      const o = new Uint8Array(d2.subarray(0, 32));
      (0, wipe_1.wipe)(d2);
      return o;
    }
    exports.convertSecretKeyToX25519 = convertSecretKeyToX25519;
  }
});

// node_modules/@walletconnect/core/node_modules/@walletconnect/window-getters/dist/cjs/index.js
var require_cjs7 = __commonJS({
  "node_modules/@walletconnect/core/node_modules/@walletconnect/window-getters/dist/cjs/index.js"(exports) {
    "use strict";
    init_define_process_env();
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.getLocalStorage = exports.getLocalStorageOrThrow = exports.getCrypto = exports.getCryptoOrThrow = exports.getLocation = exports.getLocationOrThrow = exports.getNavigator = exports.getNavigatorOrThrow = exports.getDocument = exports.getDocumentOrThrow = exports.getFromWindowOrThrow = exports.getFromWindow = void 0;
    function getFromWindow(name2) {
      let res = void 0;
      if (typeof window !== "undefined" && typeof window[name2] !== "undefined") {
        res = window[name2];
      }
      return res;
    }
    exports.getFromWindow = getFromWindow;
    function getFromWindowOrThrow(name2) {
      const res = getFromWindow(name2);
      if (!res) {
        throw new Error(`${name2} is not defined in Window`);
      }
      return res;
    }
    exports.getFromWindowOrThrow = getFromWindowOrThrow;
    function getDocumentOrThrow() {
      return getFromWindowOrThrow("document");
    }
    exports.getDocumentOrThrow = getDocumentOrThrow;
    function getDocument() {
      return getFromWindow("document");
    }
    exports.getDocument = getDocument;
    function getNavigatorOrThrow() {
      return getFromWindowOrThrow("navigator");
    }
    exports.getNavigatorOrThrow = getNavigatorOrThrow;
    function getNavigator() {
      return getFromWindow("navigator");
    }
    exports.getNavigator = getNavigator;
    function getLocationOrThrow() {
      return getFromWindowOrThrow("location");
    }
    exports.getLocationOrThrow = getLocationOrThrow;
    function getLocation() {
      return getFromWindow("location");
    }
    exports.getLocation = getLocation;
    function getCryptoOrThrow() {
      return getFromWindowOrThrow("crypto");
    }
    exports.getCryptoOrThrow = getCryptoOrThrow;
    function getCrypto() {
      return getFromWindow("crypto");
    }
    exports.getCrypto = getCrypto;
    function getLocalStorageOrThrow() {
      return getFromWindowOrThrow("localStorage");
    }
    exports.getLocalStorageOrThrow = getLocalStorageOrThrow;
    function getLocalStorage() {
      return getFromWindow("localStorage");
    }
    exports.getLocalStorage = getLocalStorage;
  }
});

// node_modules/@walletconnect/core/node_modules/@walletconnect/window-metadata/dist/cjs/index.js
var require_cjs8 = __commonJS({
  "node_modules/@walletconnect/core/node_modules/@walletconnect/window-metadata/dist/cjs/index.js"(exports) {
    "use strict";
    init_define_process_env();
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.getWindowMetadata = void 0;
    var window_getters_1 = require_cjs7();
    function getWindowMetadata() {
      let doc;
      let loc;
      try {
        doc = window_getters_1.getDocumentOrThrow();
        loc = window_getters_1.getLocationOrThrow();
      } catch (e) {
        return null;
      }
      function getIcons() {
        const links = doc.getElementsByTagName("link");
        const icons2 = [];
        for (let i3 = 0; i3 < links.length; i3++) {
          const link = links[i3];
          const rel = link.getAttribute("rel");
          if (rel) {
            if (rel.toLowerCase().indexOf("icon") > -1) {
              const href = link.getAttribute("href");
              if (href) {
                if (href.toLowerCase().indexOf("https:") === -1 && href.toLowerCase().indexOf("http:") === -1 && href.indexOf("//") !== 0) {
                  let absoluteHref = loc.protocol + "//" + loc.host;
                  if (href.indexOf("/") === 0) {
                    absoluteHref += href;
                  } else {
                    const path = loc.pathname.split("/");
                    path.pop();
                    const finalPath = path.join("/");
                    absoluteHref += finalPath + "/" + href;
                  }
                  icons2.push(absoluteHref);
                } else if (href.indexOf("//") === 0) {
                  const absoluteUrl = loc.protocol + href;
                  icons2.push(absoluteUrl);
                } else {
                  icons2.push(href);
                }
              }
            }
          }
        }
        return icons2;
      }
      function getWindowMetadataOfAny(...args) {
        const metaTags = doc.getElementsByTagName("meta");
        for (let i3 = 0; i3 < metaTags.length; i3++) {
          const tag = metaTags[i3];
          const attributes = ["itemprop", "property", "name"].map((target) => tag.getAttribute(target)).filter((attr) => {
            if (attr) {
              return args.includes(attr);
            }
            return false;
          });
          if (attributes.length && attributes) {
            const content = tag.getAttribute("content");
            if (content) {
              return content;
            }
          }
        }
        return "";
      }
      function getName() {
        let name3 = getWindowMetadataOfAny("name", "og:site_name", "og:title", "twitter:title");
        if (!name3) {
          name3 = doc.title;
        }
        return name3;
      }
      function getDescription() {
        const description2 = getWindowMetadataOfAny("description", "og:description", "twitter:description", "keywords");
        return description2;
      }
      const name2 = getName();
      const description = getDescription();
      const url = loc.origin;
      const icons = getIcons();
      const meta = {
        description,
        url,
        icons,
        name: name2
      };
      return meta;
    }
    exports.getWindowMetadata = getWindowMetadata;
  }
});

// node_modules/@walletconnect/core/node_modules/decode-uri-component/index.js
var require_decode_uri_component2 = __commonJS({
  "node_modules/@walletconnect/core/node_modules/decode-uri-component/index.js"(exports, module) {
    "use strict";
    init_define_process_env();
    var token = "%[a-f0-9]{2}";
    var singleMatcher = new RegExp("(" + token + ")|([^%]+?)", "gi");
    var multiMatcher = new RegExp("(" + token + ")+", "gi");
    function decodeComponents(components, split) {
      try {
        return [decodeURIComponent(components.join(""))];
      } catch (err) {
      }
      if (components.length === 1) {
        return components;
      }
      split = split || 1;
      var left = components.slice(0, split);
      var right = components.slice(split);
      return Array.prototype.concat.call([], decodeComponents(left), decodeComponents(right));
    }
    function decode6(input) {
      try {
        return decodeURIComponent(input);
      } catch (err) {
        var tokens = input.match(singleMatcher) || [];
        for (var i3 = 1; i3 < tokens.length; i3++) {
          input = decodeComponents(tokens, i3).join("");
          tokens = input.match(singleMatcher) || [];
        }
        return input;
      }
    }
    function customDecodeURIComponent(input) {
      var replaceMap = {
        "%FE%FF": "\uFFFD\uFFFD",
        "%FF%FE": "\uFFFD\uFFFD"
      };
      var match = multiMatcher.exec(input);
      while (match) {
        try {
          replaceMap[match[0]] = decodeURIComponent(match[0]);
        } catch (err) {
          var result = decode6(match[0]);
          if (result !== match[0]) {
            replaceMap[match[0]] = result;
          }
        }
        match = multiMatcher.exec(input);
      }
      replaceMap["%C2"] = "\uFFFD";
      var entries = Object.keys(replaceMap);
      for (var i3 = 0; i3 < entries.length; i3++) {
        var key = entries[i3];
        input = input.replace(new RegExp(key, "g"), replaceMap[key]);
      }
      return input;
    }
    module.exports = function(encodedURI) {
      if (typeof encodedURI !== "string") {
        throw new TypeError("Expected `encodedURI` to be of type `string`, got `" + typeof encodedURI + "`");
      }
      try {
        encodedURI = encodedURI.replace(/\+/g, " ");
        return decodeURIComponent(encodedURI);
      } catch (err) {
        return customDecodeURIComponent(encodedURI);
      }
    };
  }
});

// node_modules/@walletconnect/core/node_modules/query-string/index.js
var require_query_string2 = __commonJS({
  "node_modules/@walletconnect/core/node_modules/query-string/index.js"(exports) {
    "use strict";
    init_define_process_env();
    var strictUriEncode = require_strict_uri_encode();
    var decodeComponent = require_decode_uri_component2();
    var splitOnFirst = require_split_on_first();
    var filterObject = require_filter_obj();
    var isNullOrUndefined = (value) => value === null || value === void 0;
    var encodeFragmentIdentifier = Symbol("encodeFragmentIdentifier");
    function encoderForArrayFormat(options) {
      switch (options.arrayFormat) {
        case "index":
          return (key) => (result, value) => {
            const index = result.length;
            if (value === void 0 || options.skipNull && value === null || options.skipEmptyString && value === "") {
              return result;
            }
            if (value === null) {
              return [...result, [encode5(key, options), "[", index, "]"].join("")];
            }
            return [
              ...result,
              [encode5(key, options), "[", encode5(index, options), "]=", encode5(value, options)].join("")
            ];
          };
        case "bracket":
          return (key) => (result, value) => {
            if (value === void 0 || options.skipNull && value === null || options.skipEmptyString && value === "") {
              return result;
            }
            if (value === null) {
              return [...result, [encode5(key, options), "[]"].join("")];
            }
            return [...result, [encode5(key, options), "[]=", encode5(value, options)].join("")];
          };
        case "colon-list-separator":
          return (key) => (result, value) => {
            if (value === void 0 || options.skipNull && value === null || options.skipEmptyString && value === "") {
              return result;
            }
            if (value === null) {
              return [...result, [encode5(key, options), ":list="].join("")];
            }
            return [...result, [encode5(key, options), ":list=", encode5(value, options)].join("")];
          };
        case "comma":
        case "separator":
        case "bracket-separator": {
          const keyValueSep = options.arrayFormat === "bracket-separator" ? "[]=" : "=";
          return (key) => (result, value) => {
            if (value === void 0 || options.skipNull && value === null || options.skipEmptyString && value === "") {
              return result;
            }
            value = value === null ? "" : value;
            if (result.length === 0) {
              return [[encode5(key, options), keyValueSep, encode5(value, options)].join("")];
            }
            return [[result, encode5(value, options)].join(options.arrayFormatSeparator)];
          };
        }
        default:
          return (key) => (result, value) => {
            if (value === void 0 || options.skipNull && value === null || options.skipEmptyString && value === "") {
              return result;
            }
            if (value === null) {
              return [...result, encode5(key, options)];
            }
            return [...result, [encode5(key, options), "=", encode5(value, options)].join("")];
          };
      }
    }
    function parserForArrayFormat(options) {
      let result;
      switch (options.arrayFormat) {
        case "index":
          return (key, value, accumulator) => {
            result = /\[(\d*)\]$/.exec(key);
            key = key.replace(/\[\d*\]$/, "");
            if (!result) {
              accumulator[key] = value;
              return;
            }
            if (accumulator[key] === void 0) {
              accumulator[key] = {};
            }
            accumulator[key][result[1]] = value;
          };
        case "bracket":
          return (key, value, accumulator) => {
            result = /(\[\])$/.exec(key);
            key = key.replace(/\[\]$/, "");
            if (!result) {
              accumulator[key] = value;
              return;
            }
            if (accumulator[key] === void 0) {
              accumulator[key] = [value];
              return;
            }
            accumulator[key] = [].concat(accumulator[key], value);
          };
        case "colon-list-separator":
          return (key, value, accumulator) => {
            result = /(:list)$/.exec(key);
            key = key.replace(/:list$/, "");
            if (!result) {
              accumulator[key] = value;
              return;
            }
            if (accumulator[key] === void 0) {
              accumulator[key] = [value];
              return;
            }
            accumulator[key] = [].concat(accumulator[key], value);
          };
        case "comma":
        case "separator":
          return (key, value, accumulator) => {
            const isArray = typeof value === "string" && value.includes(options.arrayFormatSeparator);
            const isEncodedArray = typeof value === "string" && !isArray && decode6(value, options).includes(options.arrayFormatSeparator);
            value = isEncodedArray ? decode6(value, options) : value;
            const newValue = isArray || isEncodedArray ? value.split(options.arrayFormatSeparator).map((item) => decode6(item, options)) : value === null ? value : decode6(value, options);
            accumulator[key] = newValue;
          };
        case "bracket-separator":
          return (key, value, accumulator) => {
            const isArray = /(\[\])$/.test(key);
            key = key.replace(/\[\]$/, "");
            if (!isArray) {
              accumulator[key] = value ? decode6(value, options) : value;
              return;
            }
            const arrayValue = value === null ? [] : value.split(options.arrayFormatSeparator).map((item) => decode6(item, options));
            if (accumulator[key] === void 0) {
              accumulator[key] = arrayValue;
              return;
            }
            accumulator[key] = [].concat(accumulator[key], arrayValue);
          };
        default:
          return (key, value, accumulator) => {
            if (accumulator[key] === void 0) {
              accumulator[key] = value;
              return;
            }
            accumulator[key] = [].concat(accumulator[key], value);
          };
      }
    }
    function validateArrayFormatSeparator(value) {
      if (typeof value !== "string" || value.length !== 1) {
        throw new TypeError("arrayFormatSeparator must be single character string");
      }
    }
    function encode5(value, options) {
      if (options.encode) {
        return options.strict ? strictUriEncode(value) : encodeURIComponent(value);
      }
      return value;
    }
    function decode6(value, options) {
      if (options.decode) {
        return decodeComponent(value);
      }
      return value;
    }
    function keysSorter(input) {
      if (Array.isArray(input)) {
        return input.sort();
      }
      if (typeof input === "object") {
        return keysSorter(Object.keys(input)).sort((a2, b5) => Number(a2) - Number(b5)).map((key) => input[key]);
      }
      return input;
    }
    function removeHash(input) {
      const hashStart = input.indexOf("#");
      if (hashStart !== -1) {
        input = input.slice(0, hashStart);
      }
      return input;
    }
    function getHash(url) {
      let hash = "";
      const hashStart = url.indexOf("#");
      if (hashStart !== -1) {
        hash = url.slice(hashStart);
      }
      return hash;
    }
    function extract(input) {
      input = removeHash(input);
      const queryStart = input.indexOf("?");
      if (queryStart === -1) {
        return "";
      }
      return input.slice(queryStart + 1);
    }
    function parseValue(value, options) {
      if (options.parseNumbers && !Number.isNaN(Number(value)) && (typeof value === "string" && value.trim() !== "")) {
        value = Number(value);
      } else if (options.parseBooleans && value !== null && (value.toLowerCase() === "true" || value.toLowerCase() === "false")) {
        value = value.toLowerCase() === "true";
      }
      return value;
    }
    function parse5(query, options) {
      options = Object.assign({
        decode: true,
        sort: true,
        arrayFormat: "none",
        arrayFormatSeparator: ",",
        parseNumbers: false,
        parseBooleans: false
      }, options);
      validateArrayFormatSeparator(options.arrayFormatSeparator);
      const formatter = parserForArrayFormat(options);
      const ret = /* @__PURE__ */ Object.create(null);
      if (typeof query !== "string") {
        return ret;
      }
      query = query.trim().replace(/^[?#&]/, "");
      if (!query) {
        return ret;
      }
      for (const param of query.split("&")) {
        if (param === "") {
          continue;
        }
        let [key, value] = splitOnFirst(options.decode ? param.replace(/\+/g, " ") : param, "=");
        value = value === void 0 ? null : ["comma", "separator", "bracket-separator"].includes(options.arrayFormat) ? value : decode6(value, options);
        formatter(decode6(key, options), value, ret);
      }
      for (const key of Object.keys(ret)) {
        const value = ret[key];
        if (typeof value === "object" && value !== null) {
          for (const k3 of Object.keys(value)) {
            value[k3] = parseValue(value[k3], options);
          }
        } else {
          ret[key] = parseValue(value, options);
        }
      }
      if (options.sort === false) {
        return ret;
      }
      return (options.sort === true ? Object.keys(ret).sort() : Object.keys(ret).sort(options.sort)).reduce((result, key) => {
        const value = ret[key];
        if (Boolean(value) && typeof value === "object" && !Array.isArray(value)) {
          result[key] = keysSorter(value);
        } else {
          result[key] = value;
        }
        return result;
      }, /* @__PURE__ */ Object.create(null));
    }
    exports.extract = extract;
    exports.parse = parse5;
    exports.stringify = (object, options) => {
      if (!object) {
        return "";
      }
      options = Object.assign({
        encode: true,
        strict: true,
        arrayFormat: "none",
        arrayFormatSeparator: ","
      }, options);
      validateArrayFormatSeparator(options.arrayFormatSeparator);
      const shouldFilter = (key) => options.skipNull && isNullOrUndefined(object[key]) || options.skipEmptyString && object[key] === "";
      const formatter = encoderForArrayFormat(options);
      const objectCopy = {};
      for (const key of Object.keys(object)) {
        if (!shouldFilter(key)) {
          objectCopy[key] = object[key];
        }
      }
      const keys = Object.keys(objectCopy);
      if (options.sort !== false) {
        keys.sort(options.sort);
      }
      return keys.map((key) => {
        const value = object[key];
        if (value === void 0) {
          return "";
        }
        if (value === null) {
          return encode5(key, options);
        }
        if (Array.isArray(value)) {
          if (value.length === 0 && options.arrayFormat === "bracket-separator") {
            return encode5(key, options) + "[]";
          }
          return value.reduce(formatter(key), []).join("&");
        }
        return encode5(key, options) + "=" + encode5(value, options);
      }).filter((x3) => x3.length > 0).join("&");
    };
    exports.parseUrl = (url, options) => {
      options = Object.assign({
        decode: true
      }, options);
      const [url_, hash] = splitOnFirst(url, "#");
      return Object.assign({
        url: url_.split("?")[0] || "",
        query: parse5(extract(url), options)
      }, options && options.parseFragmentIdentifier && hash ? { fragmentIdentifier: decode6(hash, options) } : {});
    };
    exports.stringifyUrl = (object, options) => {
      options = Object.assign({
        encode: true,
        strict: true,
        [encodeFragmentIdentifier]: true
      }, options);
      const url = removeHash(object.url).split("?")[0] || "";
      const queryFromUrl = exports.extract(object.url);
      const parsedQueryFromUrl = exports.parse(queryFromUrl, { sort: false });
      const query = Object.assign(parsedQueryFromUrl, object.query);
      let queryString = exports.stringify(query, options);
      if (queryString) {
        queryString = `?${queryString}`;
      }
      let hash = getHash(object.url);
      if (object.fragmentIdentifier) {
        hash = `#${options[encodeFragmentIdentifier] ? encode5(object.fragmentIdentifier, options) : object.fragmentIdentifier}`;
      }
      return `${url}${queryString}${hash}`;
    };
    exports.pick = (input, filter, options) => {
      options = Object.assign({
        parseFragmentIdentifier: true,
        [encodeFragmentIdentifier]: false
      }, options);
      const { url, query, fragmentIdentifier } = exports.parseUrl(input, options);
      return exports.stringifyUrl({
        url,
        query: filterObject(query, filter),
        fragmentIdentifier
      }, options);
    };
    exports.exclude = (input, filter, options) => {
      const exclusionFilter = Array.isArray(filter) ? (key) => !filter.includes(key) : (key, value) => !filter(key, value);
      return exports.pick(input, exclusionFilter, options);
    };
  }
});

// node_modules/@walletconnect/jsonrpc-utils/node_modules/tslib/tslib.js
var require_tslib5 = __commonJS({
  "node_modules/@walletconnect/jsonrpc-utils/node_modules/tslib/tslib.js"(exports, module) {
    init_define_process_env();
    var __extends;
    var __assign;
    var __rest;
    var __decorate;
    var __param;
    var __metadata;
    var __awaiter;
    var __generator;
    var __exportStar;
    var __values;
    var __read;
    var __spread;
    var __spreadArrays;
    var __await;
    var __asyncGenerator;
    var __asyncDelegator;
    var __asyncValues;
    var __makeTemplateObject;
    var __importStar;
    var __importDefault;
    var __classPrivateFieldGet;
    var __classPrivateFieldSet;
    var __createBinding;
    (function(factory) {
      var root = typeof global === "object" ? global : typeof self === "object" ? self : typeof this === "object" ? this : {};
      if (typeof define === "function" && define.amd) {
        define("tslib", ["exports"], function(exports2) {
          factory(createExporter(root, createExporter(exports2)));
        });
      } else if (typeof module === "object" && typeof module.exports === "object") {
        factory(createExporter(root, createExporter(module.exports)));
      } else {
        factory(createExporter(root));
      }
      function createExporter(exports2, previous) {
        if (exports2 !== root) {
          if (typeof Object.create === "function") {
            Object.defineProperty(exports2, "__esModule", { value: true });
          } else {
            exports2.__esModule = true;
          }
        }
        return function(id, v) {
          return exports2[id] = previous ? previous(id, v) : v;
        };
      }
    })(function(exporter) {
      var extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b5) {
        d2.__proto__ = b5;
      } || function(d2, b5) {
        for (var p4 in b5)
          if (b5.hasOwnProperty(p4))
            d2[p4] = b5[p4];
      };
      __extends = function(d2, b5) {
        extendStatics(d2, b5);
        function __() {
          this.constructor = d2;
        }
        d2.prototype = b5 === null ? Object.create(b5) : (__.prototype = b5.prototype, new __());
      };
      __assign = Object.assign || function(t) {
        for (var s, i3 = 1, n2 = arguments.length; i3 < n2; i3++) {
          s = arguments[i3];
          for (var p4 in s)
            if (Object.prototype.hasOwnProperty.call(s, p4))
              t[p4] = s[p4];
        }
        return t;
      };
      __rest = function(s, e) {
        var t = {};
        for (var p4 in s)
          if (Object.prototype.hasOwnProperty.call(s, p4) && e.indexOf(p4) < 0)
            t[p4] = s[p4];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
          for (var i3 = 0, p4 = Object.getOwnPropertySymbols(s); i3 < p4.length; i3++) {
            if (e.indexOf(p4[i3]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p4[i3]))
              t[p4[i3]] = s[p4[i3]];
          }
        return t;
      };
      __decorate = function(decorators, target, key, desc) {
        var c3 = arguments.length, r = c3 < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d2;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
          r = Reflect.decorate(decorators, target, key, desc);
        else
          for (var i3 = decorators.length - 1; i3 >= 0; i3--)
            if (d2 = decorators[i3])
              r = (c3 < 3 ? d2(r) : c3 > 3 ? d2(target, key, r) : d2(target, key)) || r;
        return c3 > 3 && r && Object.defineProperty(target, key, r), r;
      };
      __param = function(paramIndex, decorator) {
        return function(target, key) {
          decorator(target, key, paramIndex);
        };
      };
      __metadata = function(metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
          return Reflect.metadata(metadataKey, metadataValue);
      };
      __awaiter = function(thisArg, _arguments, P3, generator) {
        function adopt(value) {
          return value instanceof P3 ? value : new P3(function(resolve) {
            resolve(value);
          });
        }
        return new (P3 || (P3 = Promise))(function(resolve, reject) {
          function fulfilled(value) {
            try {
              step(generator.next(value));
            } catch (e) {
              reject(e);
            }
          }
          function rejected(value) {
            try {
              step(generator["throw"](value));
            } catch (e) {
              reject(e);
            }
          }
          function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
          }
          step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
      };
      __generator = function(thisArg, body) {
        var _3 = { label: 0, sent: function() {
          if (t[0] & 1)
            throw t[1];
          return t[1];
        }, trys: [], ops: [] }, f4, y3, t, g3;
        return g3 = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g3[Symbol.iterator] = function() {
          return this;
        }), g3;
        function verb(n2) {
          return function(v) {
            return step([n2, v]);
          };
        }
        function step(op) {
          if (f4)
            throw new TypeError("Generator is already executing.");
          while (_3)
            try {
              if (f4 = 1, y3 && (t = op[0] & 2 ? y3["return"] : op[0] ? y3["throw"] || ((t = y3["return"]) && t.call(y3), 0) : y3.next) && !(t = t.call(y3, op[1])).done)
                return t;
              if (y3 = 0, t)
                op = [op[0] & 2, t.value];
              switch (op[0]) {
                case 0:
                case 1:
                  t = op;
                  break;
                case 4:
                  _3.label++;
                  return { value: op[1], done: false };
                case 5:
                  _3.label++;
                  y3 = op[1];
                  op = [0];
                  continue;
                case 7:
                  op = _3.ops.pop();
                  _3.trys.pop();
                  continue;
                default:
                  if (!(t = _3.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                    _3 = 0;
                    continue;
                  }
                  if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
                    _3.label = op[1];
                    break;
                  }
                  if (op[0] === 6 && _3.label < t[1]) {
                    _3.label = t[1];
                    t = op;
                    break;
                  }
                  if (t && _3.label < t[2]) {
                    _3.label = t[2];
                    _3.ops.push(op);
                    break;
                  }
                  if (t[2])
                    _3.ops.pop();
                  _3.trys.pop();
                  continue;
              }
              op = body.call(thisArg, _3);
            } catch (e) {
              op = [6, e];
              y3 = 0;
            } finally {
              f4 = t = 0;
            }
          if (op[0] & 5)
            throw op[1];
          return { value: op[0] ? op[1] : void 0, done: true };
        }
      };
      __createBinding = function(o, m4, k3, k22) {
        if (k22 === void 0)
          k22 = k3;
        o[k22] = m4[k3];
      };
      __exportStar = function(m4, exports2) {
        for (var p4 in m4)
          if (p4 !== "default" && !exports2.hasOwnProperty(p4))
            exports2[p4] = m4[p4];
      };
      __values = function(o) {
        var s = typeof Symbol === "function" && Symbol.iterator, m4 = s && o[s], i3 = 0;
        if (m4)
          return m4.call(o);
        if (o && typeof o.length === "number")
          return {
            next: function() {
              if (o && i3 >= o.length)
                o = void 0;
              return { value: o && o[i3++], done: !o };
            }
          };
        throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
      };
      __read = function(o, n2) {
        var m4 = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m4)
          return o;
        var i3 = m4.call(o), r, ar = [], e;
        try {
          while ((n2 === void 0 || n2-- > 0) && !(r = i3.next()).done)
            ar.push(r.value);
        } catch (error) {
          e = { error };
        } finally {
          try {
            if (r && !r.done && (m4 = i3["return"]))
              m4.call(i3);
          } finally {
            if (e)
              throw e.error;
          }
        }
        return ar;
      };
      __spread = function() {
        for (var ar = [], i3 = 0; i3 < arguments.length; i3++)
          ar = ar.concat(__read(arguments[i3]));
        return ar;
      };
      __spreadArrays = function() {
        for (var s = 0, i3 = 0, il = arguments.length; i3 < il; i3++)
          s += arguments[i3].length;
        for (var r = Array(s), k3 = 0, i3 = 0; i3 < il; i3++)
          for (var a2 = arguments[i3], j7 = 0, jl = a2.length; j7 < jl; j7++, k3++)
            r[k3] = a2[j7];
        return r;
      };
      __await = function(v) {
        return this instanceof __await ? (this.v = v, this) : new __await(v);
      };
      __asyncGenerator = function(thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator)
          throw new TypeError("Symbol.asyncIterator is not defined.");
        var g3 = generator.apply(thisArg, _arguments || []), i3, q4 = [];
        return i3 = {}, verb("next"), verb("throw"), verb("return"), i3[Symbol.asyncIterator] = function() {
          return this;
        }, i3;
        function verb(n2) {
          if (g3[n2])
            i3[n2] = function(v) {
              return new Promise(function(a2, b5) {
                q4.push([n2, v, a2, b5]) > 1 || resume(n2, v);
              });
            };
        }
        function resume(n2, v) {
          try {
            step(g3[n2](v));
          } catch (e) {
            settle(q4[0][3], e);
          }
        }
        function step(r) {
          r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q4[0][2], r);
        }
        function fulfill(value) {
          resume("next", value);
        }
        function reject(value) {
          resume("throw", value);
        }
        function settle(f4, v) {
          if (f4(v), q4.shift(), q4.length)
            resume(q4[0][0], q4[0][1]);
        }
      };
      __asyncDelegator = function(o) {
        var i3, p4;
        return i3 = {}, verb("next"), verb("throw", function(e) {
          throw e;
        }), verb("return"), i3[Symbol.iterator] = function() {
          return this;
        }, i3;
        function verb(n2, f4) {
          i3[n2] = o[n2] ? function(v) {
            return (p4 = !p4) ? { value: __await(o[n2](v)), done: n2 === "return" } : f4 ? f4(v) : v;
          } : f4;
        }
      };
      __asyncValues = function(o) {
        if (!Symbol.asyncIterator)
          throw new TypeError("Symbol.asyncIterator is not defined.");
        var m4 = o[Symbol.asyncIterator], i3;
        return m4 ? m4.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i3 = {}, verb("next"), verb("throw"), verb("return"), i3[Symbol.asyncIterator] = function() {
          return this;
        }, i3);
        function verb(n2) {
          i3[n2] = o[n2] && function(v) {
            return new Promise(function(resolve, reject) {
              v = o[n2](v), settle(resolve, reject, v.done, v.value);
            });
          };
        }
        function settle(resolve, reject, d2, v) {
          Promise.resolve(v).then(function(v2) {
            resolve({ value: v2, done: d2 });
          }, reject);
        }
      };
      __makeTemplateObject = function(cooked, raw) {
        if (Object.defineProperty) {
          Object.defineProperty(cooked, "raw", { value: raw });
        } else {
          cooked.raw = raw;
        }
        return cooked;
      };
      __importStar = function(mod) {
        if (mod && mod.__esModule)
          return mod;
        var result = {};
        if (mod != null) {
          for (var k3 in mod)
            if (Object.hasOwnProperty.call(mod, k3))
              result[k3] = mod[k3];
        }
        result["default"] = mod;
        return result;
      };
      __importDefault = function(mod) {
        return mod && mod.__esModule ? mod : { "default": mod };
      };
      __classPrivateFieldGet = function(receiver, privateMap) {
        if (!privateMap.has(receiver)) {
          throw new TypeError("attempted to get private field on non-instance");
        }
        return privateMap.get(receiver);
      };
      __classPrivateFieldSet = function(receiver, privateMap, value) {
        if (!privateMap.has(receiver)) {
          throw new TypeError("attempted to set private field on non-instance");
        }
        privateMap.set(receiver, value);
        return value;
      };
      exporter("__extends", __extends);
      exporter("__assign", __assign);
      exporter("__rest", __rest);
      exporter("__decorate", __decorate);
      exporter("__param", __param);
      exporter("__metadata", __metadata);
      exporter("__awaiter", __awaiter);
      exporter("__generator", __generator);
      exporter("__exportStar", __exportStar);
      exporter("__createBinding", __createBinding);
      exporter("__values", __values);
      exporter("__read", __read);
      exporter("__spread", __spread);
      exporter("__spreadArrays", __spreadArrays);
      exporter("__await", __await);
      exporter("__asyncGenerator", __asyncGenerator);
      exporter("__asyncDelegator", __asyncDelegator);
      exporter("__asyncValues", __asyncValues);
      exporter("__makeTemplateObject", __makeTemplateObject);
      exporter("__importStar", __importStar);
      exporter("__importDefault", __importDefault);
      exporter("__classPrivateFieldGet", __classPrivateFieldGet);
      exporter("__classPrivateFieldSet", __classPrivateFieldSet);
    });
  }
});

// node_modules/@walletconnect/jsonrpc-utils/node_modules/@walletconnect/environment/dist/cjs/crypto.js
var require_crypto = __commonJS({
  "node_modules/@walletconnect/jsonrpc-utils/node_modules/@walletconnect/environment/dist/cjs/crypto.js"(exports) {
    "use strict";
    init_define_process_env();
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.isBrowserCryptoAvailable = exports.getSubtleCrypto = exports.getBrowerCrypto = void 0;
    function getBrowerCrypto() {
      return (global === null || global === void 0 ? void 0 : global.crypto) || (global === null || global === void 0 ? void 0 : global.msCrypto) || {};
    }
    exports.getBrowerCrypto = getBrowerCrypto;
    function getSubtleCrypto() {
      const browserCrypto = getBrowerCrypto();
      return browserCrypto.subtle || browserCrypto.webkitSubtle;
    }
    exports.getSubtleCrypto = getSubtleCrypto;
    function isBrowserCryptoAvailable() {
      return !!getBrowerCrypto() && !!getSubtleCrypto();
    }
    exports.isBrowserCryptoAvailable = isBrowserCryptoAvailable;
  }
});

// node_modules/@walletconnect/jsonrpc-utils/node_modules/@walletconnect/environment/dist/cjs/env.js
var require_env = __commonJS({
  "node_modules/@walletconnect/jsonrpc-utils/node_modules/@walletconnect/environment/dist/cjs/env.js"(exports) {
    "use strict";
    init_define_process_env();
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.isBrowser = exports.isNode = exports.isReactNative = void 0;
    function isReactNative2() {
      return typeof document === "undefined" && typeof navigator !== "undefined" && navigator.product === "ReactNative";
    }
    exports.isReactNative = isReactNative2;
    function isNode2() {
      return typeof process !== "undefined" && typeof process.versions !== "undefined" && typeof process.versions.node !== "undefined";
    }
    exports.isNode = isNode2;
    function isBrowser2() {
      return !isReactNative2() && !isNode2();
    }
    exports.isBrowser = isBrowser2;
  }
});

// node_modules/@walletconnect/jsonrpc-utils/node_modules/@walletconnect/environment/dist/cjs/index.js
var require_cjs9 = __commonJS({
  "node_modules/@walletconnect/jsonrpc-utils/node_modules/@walletconnect/environment/dist/cjs/index.js"(exports) {
    "use strict";
    init_define_process_env();
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = require_tslib5();
    tslib_1.__exportStar(require_crypto(), exports);
    tslib_1.__exportStar(require_env(), exports);
  }
});

// node_modules/ws/browser.js
var require_browser4 = __commonJS({
  "node_modules/ws/browser.js"(exports, module) {
    "use strict";
    init_define_process_env();
    module.exports = function() {
      throw new Error("ws does not work in the browser. Browser clients must use the native WebSocket object");
    };
  }
});

// node_modules/lodash.isequal/index.js
var require_lodash = __commonJS({
  "node_modules/lodash.isequal/index.js"(exports, module) {
    init_define_process_env();
    var LARGE_ARRAY_SIZE = 200;
    var HASH_UNDEFINED = "__lodash_hash_undefined__";
    var COMPARE_PARTIAL_FLAG = 1;
    var COMPARE_UNORDERED_FLAG = 2;
    var MAX_SAFE_INTEGER = 9007199254740991;
    var argsTag = "[object Arguments]";
    var arrayTag = "[object Array]";
    var asyncTag = "[object AsyncFunction]";
    var boolTag = "[object Boolean]";
    var dateTag = "[object Date]";
    var errorTag = "[object Error]";
    var funcTag = "[object Function]";
    var genTag = "[object GeneratorFunction]";
    var mapTag = "[object Map]";
    var numberTag = "[object Number]";
    var nullTag = "[object Null]";
    var objectTag = "[object Object]";
    var promiseTag = "[object Promise]";
    var proxyTag = "[object Proxy]";
    var regexpTag = "[object RegExp]";
    var setTag = "[object Set]";
    var stringTag = "[object String]";
    var symbolTag = "[object Symbol]";
    var undefinedTag = "[object Undefined]";
    var weakMapTag = "[object WeakMap]";
    var arrayBufferTag = "[object ArrayBuffer]";
    var dataViewTag = "[object DataView]";
    var float32Tag = "[object Float32Array]";
    var float64Tag = "[object Float64Array]";
    var int8Tag = "[object Int8Array]";
    var int16Tag = "[object Int16Array]";
    var int32Tag = "[object Int32Array]";
    var uint8Tag = "[object Uint8Array]";
    var uint8ClampedTag = "[object Uint8ClampedArray]";
    var uint16Tag = "[object Uint16Array]";
    var uint32Tag = "[object Uint32Array]";
    var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;
    var reIsHostCtor = /^\[object .+?Constructor\]$/;
    var reIsUint = /^(?:0|[1-9]\d*)$/;
    var typedArrayTags = {};
    typedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;
    typedArrayTags[argsTag] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dataViewTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;
    var freeGlobal = typeof global == "object" && global && global.Object === Object && global;
    var freeSelf = typeof self == "object" && self && self.Object === Object && self;
    var root = freeGlobal || freeSelf || Function("return this")();
    var freeExports = typeof exports == "object" && exports && !exports.nodeType && exports;
    var freeModule = freeExports && typeof module == "object" && module && !module.nodeType && module;
    var moduleExports = freeModule && freeModule.exports === freeExports;
    var freeProcess = moduleExports && freeGlobal.process;
    var nodeUtil = function() {
      try {
        return freeProcess && freeProcess.binding && freeProcess.binding("util");
      } catch (e) {
      }
    }();
    var nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;
    function arrayFilter(array, predicate) {
      var index = -1, length2 = array == null ? 0 : array.length, resIndex = 0, result = [];
      while (++index < length2) {
        var value = array[index];
        if (predicate(value, index, array)) {
          result[resIndex++] = value;
        }
      }
      return result;
    }
    function arrayPush(array, values) {
      var index = -1, length2 = values.length, offset = array.length;
      while (++index < length2) {
        array[offset + index] = values[index];
      }
      return array;
    }
    function arraySome(array, predicate) {
      var index = -1, length2 = array == null ? 0 : array.length;
      while (++index < length2) {
        if (predicate(array[index], index, array)) {
          return true;
        }
      }
      return false;
    }
    function baseTimes(n2, iteratee) {
      var index = -1, result = Array(n2);
      while (++index < n2) {
        result[index] = iteratee(index);
      }
      return result;
    }
    function baseUnary(func) {
      return function(value) {
        return func(value);
      };
    }
    function cacheHas(cache, key) {
      return cache.has(key);
    }
    function getValue(object, key) {
      return object == null ? void 0 : object[key];
    }
    function mapToArray(map) {
      var index = -1, result = Array(map.size);
      map.forEach(function(value, key) {
        result[++index] = [key, value];
      });
      return result;
    }
    function overArg(func, transform) {
      return function(arg) {
        return func(transform(arg));
      };
    }
    function setToArray(set) {
      var index = -1, result = Array(set.size);
      set.forEach(function(value) {
        result[++index] = value;
      });
      return result;
    }
    var arrayProto = Array.prototype;
    var funcProto = Function.prototype;
    var objectProto = Object.prototype;
    var coreJsData = root["__core-js_shared__"];
    var funcToString = funcProto.toString;
    var hasOwnProperty = objectProto.hasOwnProperty;
    var maskSrcKey = function() {
      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || "");
      return uid ? "Symbol(src)_1." + uid : "";
    }();
    var nativeObjectToString = objectProto.toString;
    var reIsNative = RegExp("^" + funcToString.call(hasOwnProperty).replace(reRegExpChar, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$");
    var Buffer = moduleExports ? root.Buffer : void 0;
    var Symbol2 = root.Symbol;
    var Uint8Array2 = root.Uint8Array;
    var propertyIsEnumerable = objectProto.propertyIsEnumerable;
    var splice = arrayProto.splice;
    var symToStringTag = Symbol2 ? Symbol2.toStringTag : void 0;
    var nativeGetSymbols = Object.getOwnPropertySymbols;
    var nativeIsBuffer = Buffer ? Buffer.isBuffer : void 0;
    var nativeKeys = overArg(Object.keys, Object);
    var DataView2 = getNative(root, "DataView");
    var Map2 = getNative(root, "Map");
    var Promise2 = getNative(root, "Promise");
    var Set2 = getNative(root, "Set");
    var WeakMap = getNative(root, "WeakMap");
    var nativeCreate = getNative(Object, "create");
    var dataViewCtorString = toSource(DataView2);
    var mapCtorString = toSource(Map2);
    var promiseCtorString = toSource(Promise2);
    var setCtorString = toSource(Set2);
    var weakMapCtorString = toSource(WeakMap);
    var symbolProto = Symbol2 ? Symbol2.prototype : void 0;
    var symbolValueOf = symbolProto ? symbolProto.valueOf : void 0;
    function Hash(entries) {
      var index = -1, length2 = entries == null ? 0 : entries.length;
      this.clear();
      while (++index < length2) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }
    function hashClear() {
      this.__data__ = nativeCreate ? nativeCreate(null) : {};
      this.size = 0;
    }
    function hashDelete(key) {
      var result = this.has(key) && delete this.__data__[key];
      this.size -= result ? 1 : 0;
      return result;
    }
    function hashGet(key) {
      var data = this.__data__;
      if (nativeCreate) {
        var result = data[key];
        return result === HASH_UNDEFINED ? void 0 : result;
      }
      return hasOwnProperty.call(data, key) ? data[key] : void 0;
    }
    function hashHas(key) {
      var data = this.__data__;
      return nativeCreate ? data[key] !== void 0 : hasOwnProperty.call(data, key);
    }
    function hashSet(key, value) {
      var data = this.__data__;
      this.size += this.has(key) ? 0 : 1;
      data[key] = nativeCreate && value === void 0 ? HASH_UNDEFINED : value;
      return this;
    }
    Hash.prototype.clear = hashClear;
    Hash.prototype["delete"] = hashDelete;
    Hash.prototype.get = hashGet;
    Hash.prototype.has = hashHas;
    Hash.prototype.set = hashSet;
    function ListCache(entries) {
      var index = -1, length2 = entries == null ? 0 : entries.length;
      this.clear();
      while (++index < length2) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }
    function listCacheClear() {
      this.__data__ = [];
      this.size = 0;
    }
    function listCacheDelete(key) {
      var data = this.__data__, index = assocIndexOf(data, key);
      if (index < 0) {
        return false;
      }
      var lastIndex = data.length - 1;
      if (index == lastIndex) {
        data.pop();
      } else {
        splice.call(data, index, 1);
      }
      --this.size;
      return true;
    }
    function listCacheGet(key) {
      var data = this.__data__, index = assocIndexOf(data, key);
      return index < 0 ? void 0 : data[index][1];
    }
    function listCacheHas(key) {
      return assocIndexOf(this.__data__, key) > -1;
    }
    function listCacheSet(key, value) {
      var data = this.__data__, index = assocIndexOf(data, key);
      if (index < 0) {
        ++this.size;
        data.push([key, value]);
      } else {
        data[index][1] = value;
      }
      return this;
    }
    ListCache.prototype.clear = listCacheClear;
    ListCache.prototype["delete"] = listCacheDelete;
    ListCache.prototype.get = listCacheGet;
    ListCache.prototype.has = listCacheHas;
    ListCache.prototype.set = listCacheSet;
    function MapCache(entries) {
      var index = -1, length2 = entries == null ? 0 : entries.length;
      this.clear();
      while (++index < length2) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }
    function mapCacheClear() {
      this.size = 0;
      this.__data__ = {
        "hash": new Hash(),
        "map": new (Map2 || ListCache)(),
        "string": new Hash()
      };
    }
    function mapCacheDelete(key) {
      var result = getMapData(this, key)["delete"](key);
      this.size -= result ? 1 : 0;
      return result;
    }
    function mapCacheGet(key) {
      return getMapData(this, key).get(key);
    }
    function mapCacheHas(key) {
      return getMapData(this, key).has(key);
    }
    function mapCacheSet(key, value) {
      var data = getMapData(this, key), size = data.size;
      data.set(key, value);
      this.size += data.size == size ? 0 : 1;
      return this;
    }
    MapCache.prototype.clear = mapCacheClear;
    MapCache.prototype["delete"] = mapCacheDelete;
    MapCache.prototype.get = mapCacheGet;
    MapCache.prototype.has = mapCacheHas;
    MapCache.prototype.set = mapCacheSet;
    function SetCache(values) {
      var index = -1, length2 = values == null ? 0 : values.length;
      this.__data__ = new MapCache();
      while (++index < length2) {
        this.add(values[index]);
      }
    }
    function setCacheAdd(value) {
      this.__data__.set(value, HASH_UNDEFINED);
      return this;
    }
    function setCacheHas(value) {
      return this.__data__.has(value);
    }
    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
    SetCache.prototype.has = setCacheHas;
    function Stack(entries) {
      var data = this.__data__ = new ListCache(entries);
      this.size = data.size;
    }
    function stackClear() {
      this.__data__ = new ListCache();
      this.size = 0;
    }
    function stackDelete(key) {
      var data = this.__data__, result = data["delete"](key);
      this.size = data.size;
      return result;
    }
    function stackGet(key) {
      return this.__data__.get(key);
    }
    function stackHas(key) {
      return this.__data__.has(key);
    }
    function stackSet(key, value) {
      var data = this.__data__;
      if (data instanceof ListCache) {
        var pairs = data.__data__;
        if (!Map2 || pairs.length < LARGE_ARRAY_SIZE - 1) {
          pairs.push([key, value]);
          this.size = ++data.size;
          return this;
        }
        data = this.__data__ = new MapCache(pairs);
      }
      data.set(key, value);
      this.size = data.size;
      return this;
    }
    Stack.prototype.clear = stackClear;
    Stack.prototype["delete"] = stackDelete;
    Stack.prototype.get = stackGet;
    Stack.prototype.has = stackHas;
    Stack.prototype.set = stackSet;
    function arrayLikeKeys(value, inherited) {
      var isArr = isArray(value), isArg = !isArr && isArguments(value), isBuff = !isArr && !isArg && isBuffer(value), isType = !isArr && !isArg && !isBuff && isTypedArray(value), skipIndexes = isArr || isArg || isBuff || isType, result = skipIndexes ? baseTimes(value.length, String) : [], length2 = result.length;
      for (var key in value) {
        if ((inherited || hasOwnProperty.call(value, key)) && !(skipIndexes && (key == "length" || isBuff && (key == "offset" || key == "parent") || isType && (key == "buffer" || key == "byteLength" || key == "byteOffset") || isIndex(key, length2)))) {
          result.push(key);
        }
      }
      return result;
    }
    function assocIndexOf(array, key) {
      var length2 = array.length;
      while (length2--) {
        if (eq(array[length2][0], key)) {
          return length2;
        }
      }
      return -1;
    }
    function baseGetAllKeys(object, keysFunc, symbolsFunc) {
      var result = keysFunc(object);
      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));
    }
    function baseGetTag(value) {
      if (value == null) {
        return value === void 0 ? undefinedTag : nullTag;
      }
      return symToStringTag && symToStringTag in Object(value) ? getRawTag(value) : objectToString(value);
    }
    function baseIsArguments(value) {
      return isObjectLike(value) && baseGetTag(value) == argsTag;
    }
    function baseIsEqual(value, other, bitmask, customizer, stack) {
      if (value === other) {
        return true;
      }
      if (value == null || other == null || !isObjectLike(value) && !isObjectLike(other)) {
        return value !== value && other !== other;
      }
      return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);
    }
    function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {
      var objIsArr = isArray(object), othIsArr = isArray(other), objTag = objIsArr ? arrayTag : getTag(object), othTag = othIsArr ? arrayTag : getTag(other);
      objTag = objTag == argsTag ? objectTag : objTag;
      othTag = othTag == argsTag ? objectTag : othTag;
      var objIsObj = objTag == objectTag, othIsObj = othTag == objectTag, isSameTag = objTag == othTag;
      if (isSameTag && isBuffer(object)) {
        if (!isBuffer(other)) {
          return false;
        }
        objIsArr = true;
        objIsObj = false;
      }
      if (isSameTag && !objIsObj) {
        stack || (stack = new Stack());
        return objIsArr || isTypedArray(object) ? equalArrays(object, other, bitmask, customizer, equalFunc, stack) : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);
      }
      if (!(bitmask & COMPARE_PARTIAL_FLAG)) {
        var objIsWrapped = objIsObj && hasOwnProperty.call(object, "__wrapped__"), othIsWrapped = othIsObj && hasOwnProperty.call(other, "__wrapped__");
        if (objIsWrapped || othIsWrapped) {
          var objUnwrapped = objIsWrapped ? object.value() : object, othUnwrapped = othIsWrapped ? other.value() : other;
          stack || (stack = new Stack());
          return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
        }
      }
      if (!isSameTag) {
        return false;
      }
      stack || (stack = new Stack());
      return equalObjects(object, other, bitmask, customizer, equalFunc, stack);
    }
    function baseIsNative(value) {
      if (!isObject(value) || isMasked(value)) {
        return false;
      }
      var pattern = isFunction(value) ? reIsNative : reIsHostCtor;
      return pattern.test(toSource(value));
    }
    function baseIsTypedArray(value) {
      return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
    }
    function baseKeys(object) {
      if (!isPrototype(object)) {
        return nativeKeys(object);
      }
      var result = [];
      for (var key in Object(object)) {
        if (hasOwnProperty.call(object, key) && key != "constructor") {
          result.push(key);
        }
      }
      return result;
    }
    function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG, arrLength = array.length, othLength = other.length;
      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
        return false;
      }
      var stacked = stack.get(array);
      if (stacked && stack.get(other)) {
        return stacked == other;
      }
      var index = -1, result = true, seen = bitmask & COMPARE_UNORDERED_FLAG ? new SetCache() : void 0;
      stack.set(array, other);
      stack.set(other, array);
      while (++index < arrLength) {
        var arrValue = array[index], othValue = other[index];
        if (customizer) {
          var compared = isPartial ? customizer(othValue, arrValue, index, other, array, stack) : customizer(arrValue, othValue, index, array, other, stack);
        }
        if (compared !== void 0) {
          if (compared) {
            continue;
          }
          result = false;
          break;
        }
        if (seen) {
          if (!arraySome(other, function(othValue2, othIndex) {
            if (!cacheHas(seen, othIndex) && (arrValue === othValue2 || equalFunc(arrValue, othValue2, bitmask, customizer, stack))) {
              return seen.push(othIndex);
            }
          })) {
            result = false;
            break;
          }
        } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
          result = false;
          break;
        }
      }
      stack["delete"](array);
      stack["delete"](other);
      return result;
    }
    function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {
      switch (tag) {
        case dataViewTag:
          if (object.byteLength != other.byteLength || object.byteOffset != other.byteOffset) {
            return false;
          }
          object = object.buffer;
          other = other.buffer;
        case arrayBufferTag:
          if (object.byteLength != other.byteLength || !equalFunc(new Uint8Array2(object), new Uint8Array2(other))) {
            return false;
          }
          return true;
        case boolTag:
        case dateTag:
        case numberTag:
          return eq(+object, +other);
        case errorTag:
          return object.name == other.name && object.message == other.message;
        case regexpTag:
        case stringTag:
          return object == other + "";
        case mapTag:
          var convert = mapToArray;
        case setTag:
          var isPartial = bitmask & COMPARE_PARTIAL_FLAG;
          convert || (convert = setToArray);
          if (object.size != other.size && !isPartial) {
            return false;
          }
          var stacked = stack.get(object);
          if (stacked) {
            return stacked == other;
          }
          bitmask |= COMPARE_UNORDERED_FLAG;
          stack.set(object, other);
          var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
          stack["delete"](object);
          return result;
        case symbolTag:
          if (symbolValueOf) {
            return symbolValueOf.call(object) == symbolValueOf.call(other);
          }
      }
      return false;
    }
    function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG, objProps = getAllKeys(object), objLength = objProps.length, othProps = getAllKeys(other), othLength = othProps.length;
      if (objLength != othLength && !isPartial) {
        return false;
      }
      var index = objLength;
      while (index--) {
        var key = objProps[index];
        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {
          return false;
        }
      }
      var stacked = stack.get(object);
      if (stacked && stack.get(other)) {
        return stacked == other;
      }
      var result = true;
      stack.set(object, other);
      stack.set(other, object);
      var skipCtor = isPartial;
      while (++index < objLength) {
        key = objProps[index];
        var objValue = object[key], othValue = other[key];
        if (customizer) {
          var compared = isPartial ? customizer(othValue, objValue, key, other, object, stack) : customizer(objValue, othValue, key, object, other, stack);
        }
        if (!(compared === void 0 ? objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack) : compared)) {
          result = false;
          break;
        }
        skipCtor || (skipCtor = key == "constructor");
      }
      if (result && !skipCtor) {
        var objCtor = object.constructor, othCtor = other.constructor;
        if (objCtor != othCtor && ("constructor" in object && "constructor" in other) && !(typeof objCtor == "function" && objCtor instanceof objCtor && typeof othCtor == "function" && othCtor instanceof othCtor)) {
          result = false;
        }
      }
      stack["delete"](object);
      stack["delete"](other);
      return result;
    }
    function getAllKeys(object) {
      return baseGetAllKeys(object, keys, getSymbols);
    }
    function getMapData(map, key) {
      var data = map.__data__;
      return isKeyable(key) ? data[typeof key == "string" ? "string" : "hash"] : data.map;
    }
    function getNative(object, key) {
      var value = getValue(object, key);
      return baseIsNative(value) ? value : void 0;
    }
    function getRawTag(value) {
      var isOwn = hasOwnProperty.call(value, symToStringTag), tag = value[symToStringTag];
      try {
        value[symToStringTag] = void 0;
        var unmasked = true;
      } catch (e) {
      }
      var result = nativeObjectToString.call(value);
      if (unmasked) {
        if (isOwn) {
          value[symToStringTag] = tag;
        } else {
          delete value[symToStringTag];
        }
      }
      return result;
    }
    var getSymbols = !nativeGetSymbols ? stubArray : function(object) {
      if (object == null) {
        return [];
      }
      object = Object(object);
      return arrayFilter(nativeGetSymbols(object), function(symbol) {
        return propertyIsEnumerable.call(object, symbol);
      });
    };
    var getTag = baseGetTag;
    if (DataView2 && getTag(new DataView2(new ArrayBuffer(1))) != dataViewTag || Map2 && getTag(new Map2()) != mapTag || Promise2 && getTag(Promise2.resolve()) != promiseTag || Set2 && getTag(new Set2()) != setTag || WeakMap && getTag(new WeakMap()) != weakMapTag) {
      getTag = function(value) {
        var result = baseGetTag(value), Ctor = result == objectTag ? value.constructor : void 0, ctorString = Ctor ? toSource(Ctor) : "";
        if (ctorString) {
          switch (ctorString) {
            case dataViewCtorString:
              return dataViewTag;
            case mapCtorString:
              return mapTag;
            case promiseCtorString:
              return promiseTag;
            case setCtorString:
              return setTag;
            case weakMapCtorString:
              return weakMapTag;
          }
        }
        return result;
      };
    }
    function isIndex(value, length2) {
      length2 = length2 == null ? MAX_SAFE_INTEGER : length2;
      return !!length2 && (typeof value == "number" || reIsUint.test(value)) && (value > -1 && value % 1 == 0 && value < length2);
    }
    function isKeyable(value) {
      var type = typeof value;
      return type == "string" || type == "number" || type == "symbol" || type == "boolean" ? value !== "__proto__" : value === null;
    }
    function isMasked(func) {
      return !!maskSrcKey && maskSrcKey in func;
    }
    function isPrototype(value) {
      var Ctor = value && value.constructor, proto = typeof Ctor == "function" && Ctor.prototype || objectProto;
      return value === proto;
    }
    function objectToString(value) {
      return nativeObjectToString.call(value);
    }
    function toSource(func) {
      if (func != null) {
        try {
          return funcToString.call(func);
        } catch (e) {
        }
        try {
          return func + "";
        } catch (e) {
        }
      }
      return "";
    }
    function eq(value, other) {
      return value === other || value !== value && other !== other;
    }
    var isArguments = baseIsArguments(function() {
      return arguments;
    }()) ? baseIsArguments : function(value) {
      return isObjectLike(value) && hasOwnProperty.call(value, "callee") && !propertyIsEnumerable.call(value, "callee");
    };
    var isArray = Array.isArray;
    function isArrayLike(value) {
      return value != null && isLength(value.length) && !isFunction(value);
    }
    var isBuffer = nativeIsBuffer || stubFalse;
    function isEqual(value, other) {
      return baseIsEqual(value, other);
    }
    function isFunction(value) {
      if (!isObject(value)) {
        return false;
      }
      var tag = baseGetTag(value);
      return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
    }
    function isLength(value) {
      return typeof value == "number" && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
    }
    function isObject(value) {
      var type = typeof value;
      return value != null && (type == "object" || type == "function");
    }
    function isObjectLike(value) {
      return value != null && typeof value == "object";
    }
    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;
    function keys(object) {
      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
    }
    function stubArray() {
      return [];
    }
    function stubFalse() {
      return false;
    }
    module.exports = isEqual;
  }
});

// node_modules/@walletconnect/sign-client/node_modules/@walletconnect/window-getters/dist/cjs/index.js
var require_cjs10 = __commonJS({
  "node_modules/@walletconnect/sign-client/node_modules/@walletconnect/window-getters/dist/cjs/index.js"(exports) {
    "use strict";
    init_define_process_env();
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.getLocalStorage = exports.getLocalStorageOrThrow = exports.getCrypto = exports.getCryptoOrThrow = exports.getLocation = exports.getLocationOrThrow = exports.getNavigator = exports.getNavigatorOrThrow = exports.getDocument = exports.getDocumentOrThrow = exports.getFromWindowOrThrow = exports.getFromWindow = void 0;
    function getFromWindow(name2) {
      let res = void 0;
      if (typeof window !== "undefined" && typeof window[name2] !== "undefined") {
        res = window[name2];
      }
      return res;
    }
    exports.getFromWindow = getFromWindow;
    function getFromWindowOrThrow(name2) {
      const res = getFromWindow(name2);
      if (!res) {
        throw new Error(`${name2} is not defined in Window`);
      }
      return res;
    }
    exports.getFromWindowOrThrow = getFromWindowOrThrow;
    function getDocumentOrThrow() {
      return getFromWindowOrThrow("document");
    }
    exports.getDocumentOrThrow = getDocumentOrThrow;
    function getDocument() {
      return getFromWindow("document");
    }
    exports.getDocument = getDocument;
    function getNavigatorOrThrow() {
      return getFromWindowOrThrow("navigator");
    }
    exports.getNavigatorOrThrow = getNavigatorOrThrow;
    function getNavigator() {
      return getFromWindow("navigator");
    }
    exports.getNavigator = getNavigator;
    function getLocationOrThrow() {
      return getFromWindowOrThrow("location");
    }
    exports.getLocationOrThrow = getLocationOrThrow;
    function getLocation() {
      return getFromWindow("location");
    }
    exports.getLocation = getLocation;
    function getCryptoOrThrow() {
      return getFromWindowOrThrow("crypto");
    }
    exports.getCryptoOrThrow = getCryptoOrThrow;
    function getCrypto() {
      return getFromWindow("crypto");
    }
    exports.getCrypto = getCrypto;
    function getLocalStorageOrThrow() {
      return getFromWindowOrThrow("localStorage");
    }
    exports.getLocalStorageOrThrow = getLocalStorageOrThrow;
    function getLocalStorage() {
      return getFromWindow("localStorage");
    }
    exports.getLocalStorage = getLocalStorage;
  }
});

// node_modules/@walletconnect/sign-client/node_modules/@walletconnect/window-metadata/dist/cjs/index.js
var require_cjs11 = __commonJS({
  "node_modules/@walletconnect/sign-client/node_modules/@walletconnect/window-metadata/dist/cjs/index.js"(exports) {
    "use strict";
    init_define_process_env();
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.getWindowMetadata = void 0;
    var window_getters_1 = require_cjs10();
    function getWindowMetadata() {
      let doc;
      let loc;
      try {
        doc = window_getters_1.getDocumentOrThrow();
        loc = window_getters_1.getLocationOrThrow();
      } catch (e) {
        return null;
      }
      function getIcons() {
        const links = doc.getElementsByTagName("link");
        const icons2 = [];
        for (let i3 = 0; i3 < links.length; i3++) {
          const link = links[i3];
          const rel = link.getAttribute("rel");
          if (rel) {
            if (rel.toLowerCase().indexOf("icon") > -1) {
              const href = link.getAttribute("href");
              if (href) {
                if (href.toLowerCase().indexOf("https:") === -1 && href.toLowerCase().indexOf("http:") === -1 && href.indexOf("//") !== 0) {
                  let absoluteHref = loc.protocol + "//" + loc.host;
                  if (href.indexOf("/") === 0) {
                    absoluteHref += href;
                  } else {
                    const path = loc.pathname.split("/");
                    path.pop();
                    const finalPath = path.join("/");
                    absoluteHref += finalPath + "/" + href;
                  }
                  icons2.push(absoluteHref);
                } else if (href.indexOf("//") === 0) {
                  const absoluteUrl = loc.protocol + href;
                  icons2.push(absoluteUrl);
                } else {
                  icons2.push(href);
                }
              }
            }
          }
        }
        return icons2;
      }
      function getWindowMetadataOfAny(...args) {
        const metaTags = doc.getElementsByTagName("meta");
        for (let i3 = 0; i3 < metaTags.length; i3++) {
          const tag = metaTags[i3];
          const attributes = ["itemprop", "property", "name"].map((target) => tag.getAttribute(target)).filter((attr) => {
            if (attr) {
              return args.includes(attr);
            }
            return false;
          });
          if (attributes.length && attributes) {
            const content = tag.getAttribute("content");
            if (content) {
              return content;
            }
          }
        }
        return "";
      }
      function getName() {
        let name3 = getWindowMetadataOfAny("name", "og:site_name", "og:title", "twitter:title");
        if (!name3) {
          name3 = doc.title;
        }
        return name3;
      }
      function getDescription() {
        const description2 = getWindowMetadataOfAny("description", "og:description", "twitter:description", "keywords");
        return description2;
      }
      const name2 = getName();
      const description = getDescription();
      const url = loc.origin;
      const icons = getIcons();
      const meta = {
        description,
        url,
        icons,
        name: name2
      };
      return meta;
    }
    exports.getWindowMetadata = getWindowMetadata;
  }
});

// node_modules/@walletconnect/sign-client/node_modules/decode-uri-component/index.js
var require_decode_uri_component3 = __commonJS({
  "node_modules/@walletconnect/sign-client/node_modules/decode-uri-component/index.js"(exports, module) {
    "use strict";
    init_define_process_env();
    var token = "%[a-f0-9]{2}";
    var singleMatcher = new RegExp("(" + token + ")|([^%]+?)", "gi");
    var multiMatcher = new RegExp("(" + token + ")+", "gi");
    function decodeComponents(components, split) {
      try {
        return [decodeURIComponent(components.join(""))];
      } catch (err) {
      }
      if (components.length === 1) {
        return components;
      }
      split = split || 1;
      var left = components.slice(0, split);
      var right = components.slice(split);
      return Array.prototype.concat.call([], decodeComponents(left), decodeComponents(right));
    }
    function decode6(input) {
      try {
        return decodeURIComponent(input);
      } catch (err) {
        var tokens = input.match(singleMatcher) || [];
        for (var i3 = 1; i3 < tokens.length; i3++) {
          input = decodeComponents(tokens, i3).join("");
          tokens = input.match(singleMatcher) || [];
        }
        return input;
      }
    }
    function customDecodeURIComponent(input) {
      var replaceMap = {
        "%FE%FF": "\uFFFD\uFFFD",
        "%FF%FE": "\uFFFD\uFFFD"
      };
      var match = multiMatcher.exec(input);
      while (match) {
        try {
          replaceMap[match[0]] = decodeURIComponent(match[0]);
        } catch (err) {
          var result = decode6(match[0]);
          if (result !== match[0]) {
            replaceMap[match[0]] = result;
          }
        }
        match = multiMatcher.exec(input);
      }
      replaceMap["%C2"] = "\uFFFD";
      var entries = Object.keys(replaceMap);
      for (var i3 = 0; i3 < entries.length; i3++) {
        var key = entries[i3];
        input = input.replace(new RegExp(key, "g"), replaceMap[key]);
      }
      return input;
    }
    module.exports = function(encodedURI) {
      if (typeof encodedURI !== "string") {
        throw new TypeError("Expected `encodedURI` to be of type `string`, got `" + typeof encodedURI + "`");
      }
      try {
        encodedURI = encodedURI.replace(/\+/g, " ");
        return decodeURIComponent(encodedURI);
      } catch (err) {
        return customDecodeURIComponent(encodedURI);
      }
    };
  }
});

// node_modules/@walletconnect/sign-client/node_modules/query-string/index.js
var require_query_string3 = __commonJS({
  "node_modules/@walletconnect/sign-client/node_modules/query-string/index.js"(exports) {
    "use strict";
    init_define_process_env();
    var strictUriEncode = require_strict_uri_encode();
    var decodeComponent = require_decode_uri_component3();
    var splitOnFirst = require_split_on_first();
    var filterObject = require_filter_obj();
    var isNullOrUndefined = (value) => value === null || value === void 0;
    var encodeFragmentIdentifier = Symbol("encodeFragmentIdentifier");
    function encoderForArrayFormat(options) {
      switch (options.arrayFormat) {
        case "index":
          return (key) => (result, value) => {
            const index = result.length;
            if (value === void 0 || options.skipNull && value === null || options.skipEmptyString && value === "") {
              return result;
            }
            if (value === null) {
              return [...result, [encode5(key, options), "[", index, "]"].join("")];
            }
            return [
              ...result,
              [encode5(key, options), "[", encode5(index, options), "]=", encode5(value, options)].join("")
            ];
          };
        case "bracket":
          return (key) => (result, value) => {
            if (value === void 0 || options.skipNull && value === null || options.skipEmptyString && value === "") {
              return result;
            }
            if (value === null) {
              return [...result, [encode5(key, options), "[]"].join("")];
            }
            return [...result, [encode5(key, options), "[]=", encode5(value, options)].join("")];
          };
        case "colon-list-separator":
          return (key) => (result, value) => {
            if (value === void 0 || options.skipNull && value === null || options.skipEmptyString && value === "") {
              return result;
            }
            if (value === null) {
              return [...result, [encode5(key, options), ":list="].join("")];
            }
            return [...result, [encode5(key, options), ":list=", encode5(value, options)].join("")];
          };
        case "comma":
        case "separator":
        case "bracket-separator": {
          const keyValueSep = options.arrayFormat === "bracket-separator" ? "[]=" : "=";
          return (key) => (result, value) => {
            if (value === void 0 || options.skipNull && value === null || options.skipEmptyString && value === "") {
              return result;
            }
            value = value === null ? "" : value;
            if (result.length === 0) {
              return [[encode5(key, options), keyValueSep, encode5(value, options)].join("")];
            }
            return [[result, encode5(value, options)].join(options.arrayFormatSeparator)];
          };
        }
        default:
          return (key) => (result, value) => {
            if (value === void 0 || options.skipNull && value === null || options.skipEmptyString && value === "") {
              return result;
            }
            if (value === null) {
              return [...result, encode5(key, options)];
            }
            return [...result, [encode5(key, options), "=", encode5(value, options)].join("")];
          };
      }
    }
    function parserForArrayFormat(options) {
      let result;
      switch (options.arrayFormat) {
        case "index":
          return (key, value, accumulator) => {
            result = /\[(\d*)\]$/.exec(key);
            key = key.replace(/\[\d*\]$/, "");
            if (!result) {
              accumulator[key] = value;
              return;
            }
            if (accumulator[key] === void 0) {
              accumulator[key] = {};
            }
            accumulator[key][result[1]] = value;
          };
        case "bracket":
          return (key, value, accumulator) => {
            result = /(\[\])$/.exec(key);
            key = key.replace(/\[\]$/, "");
            if (!result) {
              accumulator[key] = value;
              return;
            }
            if (accumulator[key] === void 0) {
              accumulator[key] = [value];
              return;
            }
            accumulator[key] = [].concat(accumulator[key], value);
          };
        case "colon-list-separator":
          return (key, value, accumulator) => {
            result = /(:list)$/.exec(key);
            key = key.replace(/:list$/, "");
            if (!result) {
              accumulator[key] = value;
              return;
            }
            if (accumulator[key] === void 0) {
              accumulator[key] = [value];
              return;
            }
            accumulator[key] = [].concat(accumulator[key], value);
          };
        case "comma":
        case "separator":
          return (key, value, accumulator) => {
            const isArray = typeof value === "string" && value.includes(options.arrayFormatSeparator);
            const isEncodedArray = typeof value === "string" && !isArray && decode6(value, options).includes(options.arrayFormatSeparator);
            value = isEncodedArray ? decode6(value, options) : value;
            const newValue = isArray || isEncodedArray ? value.split(options.arrayFormatSeparator).map((item) => decode6(item, options)) : value === null ? value : decode6(value, options);
            accumulator[key] = newValue;
          };
        case "bracket-separator":
          return (key, value, accumulator) => {
            const isArray = /(\[\])$/.test(key);
            key = key.replace(/\[\]$/, "");
            if (!isArray) {
              accumulator[key] = value ? decode6(value, options) : value;
              return;
            }
            const arrayValue = value === null ? [] : value.split(options.arrayFormatSeparator).map((item) => decode6(item, options));
            if (accumulator[key] === void 0) {
              accumulator[key] = arrayValue;
              return;
            }
            accumulator[key] = [].concat(accumulator[key], arrayValue);
          };
        default:
          return (key, value, accumulator) => {
            if (accumulator[key] === void 0) {
              accumulator[key] = value;
              return;
            }
            accumulator[key] = [].concat(accumulator[key], value);
          };
      }
    }
    function validateArrayFormatSeparator(value) {
      if (typeof value !== "string" || value.length !== 1) {
        throw new TypeError("arrayFormatSeparator must be single character string");
      }
    }
    function encode5(value, options) {
      if (options.encode) {
        return options.strict ? strictUriEncode(value) : encodeURIComponent(value);
      }
      return value;
    }
    function decode6(value, options) {
      if (options.decode) {
        return decodeComponent(value);
      }
      return value;
    }
    function keysSorter(input) {
      if (Array.isArray(input)) {
        return input.sort();
      }
      if (typeof input === "object") {
        return keysSorter(Object.keys(input)).sort((a2, b5) => Number(a2) - Number(b5)).map((key) => input[key]);
      }
      return input;
    }
    function removeHash(input) {
      const hashStart = input.indexOf("#");
      if (hashStart !== -1) {
        input = input.slice(0, hashStart);
      }
      return input;
    }
    function getHash(url) {
      let hash = "";
      const hashStart = url.indexOf("#");
      if (hashStart !== -1) {
        hash = url.slice(hashStart);
      }
      return hash;
    }
    function extract(input) {
      input = removeHash(input);
      const queryStart = input.indexOf("?");
      if (queryStart === -1) {
        return "";
      }
      return input.slice(queryStart + 1);
    }
    function parseValue(value, options) {
      if (options.parseNumbers && !Number.isNaN(Number(value)) && (typeof value === "string" && value.trim() !== "")) {
        value = Number(value);
      } else if (options.parseBooleans && value !== null && (value.toLowerCase() === "true" || value.toLowerCase() === "false")) {
        value = value.toLowerCase() === "true";
      }
      return value;
    }
    function parse5(query, options) {
      options = Object.assign({
        decode: true,
        sort: true,
        arrayFormat: "none",
        arrayFormatSeparator: ",",
        parseNumbers: false,
        parseBooleans: false
      }, options);
      validateArrayFormatSeparator(options.arrayFormatSeparator);
      const formatter = parserForArrayFormat(options);
      const ret = /* @__PURE__ */ Object.create(null);
      if (typeof query !== "string") {
        return ret;
      }
      query = query.trim().replace(/^[?#&]/, "");
      if (!query) {
        return ret;
      }
      for (const param of query.split("&")) {
        if (param === "") {
          continue;
        }
        let [key, value] = splitOnFirst(options.decode ? param.replace(/\+/g, " ") : param, "=");
        value = value === void 0 ? null : ["comma", "separator", "bracket-separator"].includes(options.arrayFormat) ? value : decode6(value, options);
        formatter(decode6(key, options), value, ret);
      }
      for (const key of Object.keys(ret)) {
        const value = ret[key];
        if (typeof value === "object" && value !== null) {
          for (const k3 of Object.keys(value)) {
            value[k3] = parseValue(value[k3], options);
          }
        } else {
          ret[key] = parseValue(value, options);
        }
      }
      if (options.sort === false) {
        return ret;
      }
      return (options.sort === true ? Object.keys(ret).sort() : Object.keys(ret).sort(options.sort)).reduce((result, key) => {
        const value = ret[key];
        if (Boolean(value) && typeof value === "object" && !Array.isArray(value)) {
          result[key] = keysSorter(value);
        } else {
          result[key] = value;
        }
        return result;
      }, /* @__PURE__ */ Object.create(null));
    }
    exports.extract = extract;
    exports.parse = parse5;
    exports.stringify = (object, options) => {
      if (!object) {
        return "";
      }
      options = Object.assign({
        encode: true,
        strict: true,
        arrayFormat: "none",
        arrayFormatSeparator: ","
      }, options);
      validateArrayFormatSeparator(options.arrayFormatSeparator);
      const shouldFilter = (key) => options.skipNull && isNullOrUndefined(object[key]) || options.skipEmptyString && object[key] === "";
      const formatter = encoderForArrayFormat(options);
      const objectCopy = {};
      for (const key of Object.keys(object)) {
        if (!shouldFilter(key)) {
          objectCopy[key] = object[key];
        }
      }
      const keys = Object.keys(objectCopy);
      if (options.sort !== false) {
        keys.sort(options.sort);
      }
      return keys.map((key) => {
        const value = object[key];
        if (value === void 0) {
          return "";
        }
        if (value === null) {
          return encode5(key, options);
        }
        if (Array.isArray(value)) {
          if (value.length === 0 && options.arrayFormat === "bracket-separator") {
            return encode5(key, options) + "[]";
          }
          return value.reduce(formatter(key), []).join("&");
        }
        return encode5(key, options) + "=" + encode5(value, options);
      }).filter((x3) => x3.length > 0).join("&");
    };
    exports.parseUrl = (url, options) => {
      options = Object.assign({
        decode: true
      }, options);
      const [url_, hash] = splitOnFirst(url, "#");
      return Object.assign({
        url: url_.split("?")[0] || "",
        query: parse5(extract(url), options)
      }, options && options.parseFragmentIdentifier && hash ? { fragmentIdentifier: decode6(hash, options) } : {});
    };
    exports.stringifyUrl = (object, options) => {
      options = Object.assign({
        encode: true,
        strict: true,
        [encodeFragmentIdentifier]: true
      }, options);
      const url = removeHash(object.url).split("?")[0] || "";
      const queryFromUrl = exports.extract(object.url);
      const parsedQueryFromUrl = exports.parse(queryFromUrl, { sort: false });
      const query = Object.assign(parsedQueryFromUrl, object.query);
      let queryString = exports.stringify(query, options);
      if (queryString) {
        queryString = `?${queryString}`;
      }
      let hash = getHash(object.url);
      if (object.fragmentIdentifier) {
        hash = `#${options[encodeFragmentIdentifier] ? encode5(object.fragmentIdentifier, options) : object.fragmentIdentifier}`;
      }
      return `${url}${queryString}${hash}`;
    };
    exports.pick = (input, filter, options) => {
      options = Object.assign({
        parseFragmentIdentifier: true,
        [encodeFragmentIdentifier]: false
      }, options);
      const { url, query, fragmentIdentifier } = exports.parseUrl(input, options);
      return exports.stringifyUrl({
        url,
        query: filterObject(query, filter),
        fragmentIdentifier
      }, options);
    };
    exports.exclude = (input, filter, options) => {
      const exclusionFilter = Array.isArray(filter) ? (key) => !filter.includes(key) : (key, value) => !filter(key, value);
      return exports.pick(input, exclusionFilter, options);
    };
  }
});

// node_modules/@walletconnect/universal-provider/node_modules/@walletconnect/window-getters/dist/cjs/index.js
var require_cjs12 = __commonJS({
  "node_modules/@walletconnect/universal-provider/node_modules/@walletconnect/window-getters/dist/cjs/index.js"(exports) {
    "use strict";
    init_define_process_env();
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.getLocalStorage = exports.getLocalStorageOrThrow = exports.getCrypto = exports.getCryptoOrThrow = exports.getLocation = exports.getLocationOrThrow = exports.getNavigator = exports.getNavigatorOrThrow = exports.getDocument = exports.getDocumentOrThrow = exports.getFromWindowOrThrow = exports.getFromWindow = void 0;
    function getFromWindow(name2) {
      let res = void 0;
      if (typeof window !== "undefined" && typeof window[name2] !== "undefined") {
        res = window[name2];
      }
      return res;
    }
    exports.getFromWindow = getFromWindow;
    function getFromWindowOrThrow(name2) {
      const res = getFromWindow(name2);
      if (!res) {
        throw new Error(`${name2} is not defined in Window`);
      }
      return res;
    }
    exports.getFromWindowOrThrow = getFromWindowOrThrow;
    function getDocumentOrThrow() {
      return getFromWindowOrThrow("document");
    }
    exports.getDocumentOrThrow = getDocumentOrThrow;
    function getDocument() {
      return getFromWindow("document");
    }
    exports.getDocument = getDocument;
    function getNavigatorOrThrow() {
      return getFromWindowOrThrow("navigator");
    }
    exports.getNavigatorOrThrow = getNavigatorOrThrow;
    function getNavigator() {
      return getFromWindow("navigator");
    }
    exports.getNavigator = getNavigator;
    function getLocationOrThrow() {
      return getFromWindowOrThrow("location");
    }
    exports.getLocationOrThrow = getLocationOrThrow;
    function getLocation() {
      return getFromWindow("location");
    }
    exports.getLocation = getLocation;
    function getCryptoOrThrow() {
      return getFromWindowOrThrow("crypto");
    }
    exports.getCryptoOrThrow = getCryptoOrThrow;
    function getCrypto() {
      return getFromWindow("crypto");
    }
    exports.getCrypto = getCrypto;
    function getLocalStorageOrThrow() {
      return getFromWindowOrThrow("localStorage");
    }
    exports.getLocalStorageOrThrow = getLocalStorageOrThrow;
    function getLocalStorage() {
      return getFromWindow("localStorage");
    }
    exports.getLocalStorage = getLocalStorage;
  }
});

// node_modules/@walletconnect/universal-provider/node_modules/@walletconnect/window-metadata/dist/cjs/index.js
var require_cjs13 = __commonJS({
  "node_modules/@walletconnect/universal-provider/node_modules/@walletconnect/window-metadata/dist/cjs/index.js"(exports) {
    "use strict";
    init_define_process_env();
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.getWindowMetadata = void 0;
    var window_getters_1 = require_cjs12();
    function getWindowMetadata() {
      let doc;
      let loc;
      try {
        doc = window_getters_1.getDocumentOrThrow();
        loc = window_getters_1.getLocationOrThrow();
      } catch (e) {
        return null;
      }
      function getIcons() {
        const links = doc.getElementsByTagName("link");
        const icons2 = [];
        for (let i3 = 0; i3 < links.length; i3++) {
          const link = links[i3];
          const rel = link.getAttribute("rel");
          if (rel) {
            if (rel.toLowerCase().indexOf("icon") > -1) {
              const href = link.getAttribute("href");
              if (href) {
                if (href.toLowerCase().indexOf("https:") === -1 && href.toLowerCase().indexOf("http:") === -1 && href.indexOf("//") !== 0) {
                  let absoluteHref = loc.protocol + "//" + loc.host;
                  if (href.indexOf("/") === 0) {
                    absoluteHref += href;
                  } else {
                    const path = loc.pathname.split("/");
                    path.pop();
                    const finalPath = path.join("/");
                    absoluteHref += finalPath + "/" + href;
                  }
                  icons2.push(absoluteHref);
                } else if (href.indexOf("//") === 0) {
                  const absoluteUrl = loc.protocol + href;
                  icons2.push(absoluteUrl);
                } else {
                  icons2.push(href);
                }
              }
            }
          }
        }
        return icons2;
      }
      function getWindowMetadataOfAny(...args) {
        const metaTags = doc.getElementsByTagName("meta");
        for (let i3 = 0; i3 < metaTags.length; i3++) {
          const tag = metaTags[i3];
          const attributes = ["itemprop", "property", "name"].map((target) => tag.getAttribute(target)).filter((attr) => {
            if (attr) {
              return args.includes(attr);
            }
            return false;
          });
          if (attributes.length && attributes) {
            const content = tag.getAttribute("content");
            if (content) {
              return content;
            }
          }
        }
        return "";
      }
      function getName() {
        let name3 = getWindowMetadataOfAny("name", "og:site_name", "og:title", "twitter:title");
        if (!name3) {
          name3 = doc.title;
        }
        return name3;
      }
      function getDescription() {
        const description2 = getWindowMetadataOfAny("description", "og:description", "twitter:description", "keywords");
        return description2;
      }
      const name2 = getName();
      const description = getDescription();
      const url = loc.origin;
      const icons = getIcons();
      const meta = {
        description,
        url,
        icons,
        name: name2
      };
      return meta;
    }
    exports.getWindowMetadata = getWindowMetadata;
  }
});

// node_modules/@walletconnect/universal-provider/node_modules/decode-uri-component/index.js
var require_decode_uri_component4 = __commonJS({
  "node_modules/@walletconnect/universal-provider/node_modules/decode-uri-component/index.js"(exports, module) {
    "use strict";
    init_define_process_env();
    var token = "%[a-f0-9]{2}";
    var singleMatcher = new RegExp("(" + token + ")|([^%]+?)", "gi");
    var multiMatcher = new RegExp("(" + token + ")+", "gi");
    function decodeComponents(components, split) {
      try {
        return [decodeURIComponent(components.join(""))];
      } catch (err) {
      }
      if (components.length === 1) {
        return components;
      }
      split = split || 1;
      var left = components.slice(0, split);
      var right = components.slice(split);
      return Array.prototype.concat.call([], decodeComponents(left), decodeComponents(right));
    }
    function decode6(input) {
      try {
        return decodeURIComponent(input);
      } catch (err) {
        var tokens = input.match(singleMatcher) || [];
        for (var i3 = 1; i3 < tokens.length; i3++) {
          input = decodeComponents(tokens, i3).join("");
          tokens = input.match(singleMatcher) || [];
        }
        return input;
      }
    }
    function customDecodeURIComponent(input) {
      var replaceMap = {
        "%FE%FF": "\uFFFD\uFFFD",
        "%FF%FE": "\uFFFD\uFFFD"
      };
      var match = multiMatcher.exec(input);
      while (match) {
        try {
          replaceMap[match[0]] = decodeURIComponent(match[0]);
        } catch (err) {
          var result = decode6(match[0]);
          if (result !== match[0]) {
            replaceMap[match[0]] = result;
          }
        }
        match = multiMatcher.exec(input);
      }
      replaceMap["%C2"] = "\uFFFD";
      var entries = Object.keys(replaceMap);
      for (var i3 = 0; i3 < entries.length; i3++) {
        var key = entries[i3];
        input = input.replace(new RegExp(key, "g"), replaceMap[key]);
      }
      return input;
    }
    module.exports = function(encodedURI) {
      if (typeof encodedURI !== "string") {
        throw new TypeError("Expected `encodedURI` to be of type `string`, got `" + typeof encodedURI + "`");
      }
      try {
        encodedURI = encodedURI.replace(/\+/g, " ");
        return decodeURIComponent(encodedURI);
      } catch (err) {
        return customDecodeURIComponent(encodedURI);
      }
    };
  }
});

// node_modules/@walletconnect/universal-provider/node_modules/query-string/index.js
var require_query_string4 = __commonJS({
  "node_modules/@walletconnect/universal-provider/node_modules/query-string/index.js"(exports) {
    "use strict";
    init_define_process_env();
    var strictUriEncode = require_strict_uri_encode();
    var decodeComponent = require_decode_uri_component4();
    var splitOnFirst = require_split_on_first();
    var filterObject = require_filter_obj();
    var isNullOrUndefined = (value) => value === null || value === void 0;
    var encodeFragmentIdentifier = Symbol("encodeFragmentIdentifier");
    function encoderForArrayFormat(options) {
      switch (options.arrayFormat) {
        case "index":
          return (key) => (result, value) => {
            const index = result.length;
            if (value === void 0 || options.skipNull && value === null || options.skipEmptyString && value === "") {
              return result;
            }
            if (value === null) {
              return [...result, [encode5(key, options), "[", index, "]"].join("")];
            }
            return [
              ...result,
              [encode5(key, options), "[", encode5(index, options), "]=", encode5(value, options)].join("")
            ];
          };
        case "bracket":
          return (key) => (result, value) => {
            if (value === void 0 || options.skipNull && value === null || options.skipEmptyString && value === "") {
              return result;
            }
            if (value === null) {
              return [...result, [encode5(key, options), "[]"].join("")];
            }
            return [...result, [encode5(key, options), "[]=", encode5(value, options)].join("")];
          };
        case "colon-list-separator":
          return (key) => (result, value) => {
            if (value === void 0 || options.skipNull && value === null || options.skipEmptyString && value === "") {
              return result;
            }
            if (value === null) {
              return [...result, [encode5(key, options), ":list="].join("")];
            }
            return [...result, [encode5(key, options), ":list=", encode5(value, options)].join("")];
          };
        case "comma":
        case "separator":
        case "bracket-separator": {
          const keyValueSep = options.arrayFormat === "bracket-separator" ? "[]=" : "=";
          return (key) => (result, value) => {
            if (value === void 0 || options.skipNull && value === null || options.skipEmptyString && value === "") {
              return result;
            }
            value = value === null ? "" : value;
            if (result.length === 0) {
              return [[encode5(key, options), keyValueSep, encode5(value, options)].join("")];
            }
            return [[result, encode5(value, options)].join(options.arrayFormatSeparator)];
          };
        }
        default:
          return (key) => (result, value) => {
            if (value === void 0 || options.skipNull && value === null || options.skipEmptyString && value === "") {
              return result;
            }
            if (value === null) {
              return [...result, encode5(key, options)];
            }
            return [...result, [encode5(key, options), "=", encode5(value, options)].join("")];
          };
      }
    }
    function parserForArrayFormat(options) {
      let result;
      switch (options.arrayFormat) {
        case "index":
          return (key, value, accumulator) => {
            result = /\[(\d*)\]$/.exec(key);
            key = key.replace(/\[\d*\]$/, "");
            if (!result) {
              accumulator[key] = value;
              return;
            }
            if (accumulator[key] === void 0) {
              accumulator[key] = {};
            }
            accumulator[key][result[1]] = value;
          };
        case "bracket":
          return (key, value, accumulator) => {
            result = /(\[\])$/.exec(key);
            key = key.replace(/\[\]$/, "");
            if (!result) {
              accumulator[key] = value;
              return;
            }
            if (accumulator[key] === void 0) {
              accumulator[key] = [value];
              return;
            }
            accumulator[key] = [].concat(accumulator[key], value);
          };
        case "colon-list-separator":
          return (key, value, accumulator) => {
            result = /(:list)$/.exec(key);
            key = key.replace(/:list$/, "");
            if (!result) {
              accumulator[key] = value;
              return;
            }
            if (accumulator[key] === void 0) {
              accumulator[key] = [value];
              return;
            }
            accumulator[key] = [].concat(accumulator[key], value);
          };
        case "comma":
        case "separator":
          return (key, value, accumulator) => {
            const isArray = typeof value === "string" && value.includes(options.arrayFormatSeparator);
            const isEncodedArray = typeof value === "string" && !isArray && decode6(value, options).includes(options.arrayFormatSeparator);
            value = isEncodedArray ? decode6(value, options) : value;
            const newValue = isArray || isEncodedArray ? value.split(options.arrayFormatSeparator).map((item) => decode6(item, options)) : value === null ? value : decode6(value, options);
            accumulator[key] = newValue;
          };
        case "bracket-separator":
          return (key, value, accumulator) => {
            const isArray = /(\[\])$/.test(key);
            key = key.replace(/\[\]$/, "");
            if (!isArray) {
              accumulator[key] = value ? decode6(value, options) : value;
              return;
            }
            const arrayValue = value === null ? [] : value.split(options.arrayFormatSeparator).map((item) => decode6(item, options));
            if (accumulator[key] === void 0) {
              accumulator[key] = arrayValue;
              return;
            }
            accumulator[key] = [].concat(accumulator[key], arrayValue);
          };
        default:
          return (key, value, accumulator) => {
            if (accumulator[key] === void 0) {
              accumulator[key] = value;
              return;
            }
            accumulator[key] = [].concat(accumulator[key], value);
          };
      }
    }
    function validateArrayFormatSeparator(value) {
      if (typeof value !== "string" || value.length !== 1) {
        throw new TypeError("arrayFormatSeparator must be single character string");
      }
    }
    function encode5(value, options) {
      if (options.encode) {
        return options.strict ? strictUriEncode(value) : encodeURIComponent(value);
      }
      return value;
    }
    function decode6(value, options) {
      if (options.decode) {
        return decodeComponent(value);
      }
      return value;
    }
    function keysSorter(input) {
      if (Array.isArray(input)) {
        return input.sort();
      }
      if (typeof input === "object") {
        return keysSorter(Object.keys(input)).sort((a2, b5) => Number(a2) - Number(b5)).map((key) => input[key]);
      }
      return input;
    }
    function removeHash(input) {
      const hashStart = input.indexOf("#");
      if (hashStart !== -1) {
        input = input.slice(0, hashStart);
      }
      return input;
    }
    function getHash(url) {
      let hash = "";
      const hashStart = url.indexOf("#");
      if (hashStart !== -1) {
        hash = url.slice(hashStart);
      }
      return hash;
    }
    function extract(input) {
      input = removeHash(input);
      const queryStart = input.indexOf("?");
      if (queryStart === -1) {
        return "";
      }
      return input.slice(queryStart + 1);
    }
    function parseValue(value, options) {
      if (options.parseNumbers && !Number.isNaN(Number(value)) && (typeof value === "string" && value.trim() !== "")) {
        value = Number(value);
      } else if (options.parseBooleans && value !== null && (value.toLowerCase() === "true" || value.toLowerCase() === "false")) {
        value = value.toLowerCase() === "true";
      }
      return value;
    }
    function parse5(query, options) {
      options = Object.assign({
        decode: true,
        sort: true,
        arrayFormat: "none",
        arrayFormatSeparator: ",",
        parseNumbers: false,
        parseBooleans: false
      }, options);
      validateArrayFormatSeparator(options.arrayFormatSeparator);
      const formatter = parserForArrayFormat(options);
      const ret = /* @__PURE__ */ Object.create(null);
      if (typeof query !== "string") {
        return ret;
      }
      query = query.trim().replace(/^[?#&]/, "");
      if (!query) {
        return ret;
      }
      for (const param of query.split("&")) {
        if (param === "") {
          continue;
        }
        let [key, value] = splitOnFirst(options.decode ? param.replace(/\+/g, " ") : param, "=");
        value = value === void 0 ? null : ["comma", "separator", "bracket-separator"].includes(options.arrayFormat) ? value : decode6(value, options);
        formatter(decode6(key, options), value, ret);
      }
      for (const key of Object.keys(ret)) {
        const value = ret[key];
        if (typeof value === "object" && value !== null) {
          for (const k3 of Object.keys(value)) {
            value[k3] = parseValue(value[k3], options);
          }
        } else {
          ret[key] = parseValue(value, options);
        }
      }
      if (options.sort === false) {
        return ret;
      }
      return (options.sort === true ? Object.keys(ret).sort() : Object.keys(ret).sort(options.sort)).reduce((result, key) => {
        const value = ret[key];
        if (Boolean(value) && typeof value === "object" && !Array.isArray(value)) {
          result[key] = keysSorter(value);
        } else {
          result[key] = value;
        }
        return result;
      }, /* @__PURE__ */ Object.create(null));
    }
    exports.extract = extract;
    exports.parse = parse5;
    exports.stringify = (object, options) => {
      if (!object) {
        return "";
      }
      options = Object.assign({
        encode: true,
        strict: true,
        arrayFormat: "none",
        arrayFormatSeparator: ","
      }, options);
      validateArrayFormatSeparator(options.arrayFormatSeparator);
      const shouldFilter = (key) => options.skipNull && isNullOrUndefined(object[key]) || options.skipEmptyString && object[key] === "";
      const formatter = encoderForArrayFormat(options);
      const objectCopy = {};
      for (const key of Object.keys(object)) {
        if (!shouldFilter(key)) {
          objectCopy[key] = object[key];
        }
      }
      const keys = Object.keys(objectCopy);
      if (options.sort !== false) {
        keys.sort(options.sort);
      }
      return keys.map((key) => {
        const value = object[key];
        if (value === void 0) {
          return "";
        }
        if (value === null) {
          return encode5(key, options);
        }
        if (Array.isArray(value)) {
          if (value.length === 0 && options.arrayFormat === "bracket-separator") {
            return encode5(key, options) + "[]";
          }
          return value.reduce(formatter(key), []).join("&");
        }
        return encode5(key, options) + "=" + encode5(value, options);
      }).filter((x3) => x3.length > 0).join("&");
    };
    exports.parseUrl = (url, options) => {
      options = Object.assign({
        decode: true
      }, options);
      const [url_, hash] = splitOnFirst(url, "#");
      return Object.assign({
        url: url_.split("?")[0] || "",
        query: parse5(extract(url), options)
      }, options && options.parseFragmentIdentifier && hash ? { fragmentIdentifier: decode6(hash, options) } : {});
    };
    exports.stringifyUrl = (object, options) => {
      options = Object.assign({
        encode: true,
        strict: true,
        [encodeFragmentIdentifier]: true
      }, options);
      const url = removeHash(object.url).split("?")[0] || "";
      const queryFromUrl = exports.extract(object.url);
      const parsedQueryFromUrl = exports.parse(queryFromUrl, { sort: false });
      const query = Object.assign(parsedQueryFromUrl, object.query);
      let queryString = exports.stringify(query, options);
      if (queryString) {
        queryString = `?${queryString}`;
      }
      let hash = getHash(object.url);
      if (object.fragmentIdentifier) {
        hash = `#${options[encodeFragmentIdentifier] ? encode5(object.fragmentIdentifier, options) : object.fragmentIdentifier}`;
      }
      return `${url}${queryString}${hash}`;
    };
    exports.pick = (input, filter, options) => {
      options = Object.assign({
        parseFragmentIdentifier: true,
        [encodeFragmentIdentifier]: false
      }, options);
      const { url, query, fragmentIdentifier } = exports.parseUrl(input, options);
      return exports.stringifyUrl({
        url,
        query: filterObject(query, filter),
        fragmentIdentifier
      }, options);
    };
    exports.exclude = (input, filter, options) => {
      const exclusionFilter = Array.isArray(filter) ? (key) => !filter.includes(key) : (key, value) => !filter(key, value);
      return exports.pick(input, exclusionFilter, options);
    };
  }
});

// node_modules/@walletconnect/ethereum-provider/dist/index.es.js
init_define_process_env();
var import_events11 = __toESM(require_events());

// node_modules/@walletconnect/ethereum-provider/node_modules/@walletconnect/utils/dist/index.es.js
init_define_process_env();
var import_chacha20poly1305 = __toESM(require_chacha20poly1305());
var import_hkdf = __toESM(require_hkdf());
var import_random = __toESM(require_random());
var import_sha256 = __toESM(require_sha256());
var ue = __toESM(require_x25519());

// node_modules/uint8arrays/esm/src/index.js
init_define_process_env();

// node_modules/uint8arrays/esm/src/compare.js
init_define_process_env();

// node_modules/uint8arrays/esm/src/concat.js
init_define_process_env();

// node_modules/uint8arrays/esm/src/alloc.js
init_define_process_env();

// node_modules/uint8arrays/esm/src/util/as-uint8array.js
init_define_process_env();
function asUint8Array(buf) {
  if (globalThis.Buffer != null) {
    return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength);
  }
  return buf;
}

// node_modules/uint8arrays/esm/src/alloc.js
function allocUnsafe(size = 0) {
  if (globalThis.Buffer != null && globalThis.Buffer.allocUnsafe != null) {
    return asUint8Array(globalThis.Buffer.allocUnsafe(size));
  }
  return new Uint8Array(size);
}

// node_modules/uint8arrays/esm/src/concat.js
function concat(arrays, length2) {
  if (!length2) {
    length2 = arrays.reduce((acc, curr) => acc + curr.length, 0);
  }
  const output = allocUnsafe(length2);
  let offset = 0;
  for (const arr of arrays) {
    output.set(arr, offset);
    offset += arr.length;
  }
  return asUint8Array(output);
}

// node_modules/uint8arrays/esm/src/equals.js
init_define_process_env();

// node_modules/uint8arrays/esm/src/from-string.js
init_define_process_env();

// node_modules/uint8arrays/esm/src/util/bases.js
init_define_process_env();

// node_modules/multiformats/esm/src/basics.js
init_define_process_env();

// node_modules/multiformats/esm/src/bases/identity.js
var identity_exports = {};
__export(identity_exports, {
  identity: () => identity
});
init_define_process_env();

// node_modules/multiformats/esm/src/bases/base.js
init_define_process_env();

// node_modules/multiformats/esm/vendor/base-x.js
init_define_process_env();
function base(ALPHABET, name2) {
  if (ALPHABET.length >= 255) {
    throw new TypeError("Alphabet too long");
  }
  var BASE_MAP = new Uint8Array(256);
  for (var j7 = 0; j7 < BASE_MAP.length; j7++) {
    BASE_MAP[j7] = 255;
  }
  for (var i3 = 0; i3 < ALPHABET.length; i3++) {
    var x3 = ALPHABET.charAt(i3);
    var xc = x3.charCodeAt(0);
    if (BASE_MAP[xc] !== 255) {
      throw new TypeError(x3 + " is ambiguous");
    }
    BASE_MAP[xc] = i3;
  }
  var BASE = ALPHABET.length;
  var LEADER = ALPHABET.charAt(0);
  var FACTOR = Math.log(BASE) / Math.log(256);
  var iFACTOR = Math.log(256) / Math.log(BASE);
  function encode5(source) {
    if (source instanceof Uint8Array)
      ;
    else if (ArrayBuffer.isView(source)) {
      source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength);
    } else if (Array.isArray(source)) {
      source = Uint8Array.from(source);
    }
    if (!(source instanceof Uint8Array)) {
      throw new TypeError("Expected Uint8Array");
    }
    if (source.length === 0) {
      return "";
    }
    var zeroes = 0;
    var length2 = 0;
    var pbegin = 0;
    var pend = source.length;
    while (pbegin !== pend && source[pbegin] === 0) {
      pbegin++;
      zeroes++;
    }
    var size = (pend - pbegin) * iFACTOR + 1 >>> 0;
    var b58 = new Uint8Array(size);
    while (pbegin !== pend) {
      var carry = source[pbegin];
      var i4 = 0;
      for (var it1 = size - 1; (carry !== 0 || i4 < length2) && it1 !== -1; it1--, i4++) {
        carry += 256 * b58[it1] >>> 0;
        b58[it1] = carry % BASE >>> 0;
        carry = carry / BASE >>> 0;
      }
      if (carry !== 0) {
        throw new Error("Non-zero carry");
      }
      length2 = i4;
      pbegin++;
    }
    var it22 = size - length2;
    while (it22 !== size && b58[it22] === 0) {
      it22++;
    }
    var str = LEADER.repeat(zeroes);
    for (; it22 < size; ++it22) {
      str += ALPHABET.charAt(b58[it22]);
    }
    return str;
  }
  function decodeUnsafe(source) {
    if (typeof source !== "string") {
      throw new TypeError("Expected String");
    }
    if (source.length === 0) {
      return new Uint8Array();
    }
    var psz = 0;
    if (source[psz] === " ") {
      return;
    }
    var zeroes = 0;
    var length2 = 0;
    while (source[psz] === LEADER) {
      zeroes++;
      psz++;
    }
    var size = (source.length - psz) * FACTOR + 1 >>> 0;
    var b256 = new Uint8Array(size);
    while (source[psz]) {
      var carry = BASE_MAP[source.charCodeAt(psz)];
      if (carry === 255) {
        return;
      }
      var i4 = 0;
      for (var it32 = size - 1; (carry !== 0 || i4 < length2) && it32 !== -1; it32--, i4++) {
        carry += BASE * b256[it32] >>> 0;
        b256[it32] = carry % 256 >>> 0;
        carry = carry / 256 >>> 0;
      }
      if (carry !== 0) {
        throw new Error("Non-zero carry");
      }
      length2 = i4;
      psz++;
    }
    if (source[psz] === " ") {
      return;
    }
    var it4 = size - length2;
    while (it4 !== size && b256[it4] === 0) {
      it4++;
    }
    var vch = new Uint8Array(zeroes + (size - it4));
    var j8 = zeroes;
    while (it4 !== size) {
      vch[j8++] = b256[it4++];
    }
    return vch;
  }
  function decode6(string2) {
    var buffer = decodeUnsafe(string2);
    if (buffer) {
      return buffer;
    }
    throw new Error(`Non-${name2} character`);
  }
  return {
    encode: encode5,
    decodeUnsafe,
    decode: decode6
  };
}
var src = base;
var _brrp__multiformats_scope_baseX = src;
var base_x_default = _brrp__multiformats_scope_baseX;

// node_modules/multiformats/esm/src/bytes.js
init_define_process_env();
var empty = new Uint8Array(0);
var equals = (aa, bb) => {
  if (aa === bb)
    return true;
  if (aa.byteLength !== bb.byteLength) {
    return false;
  }
  for (let ii = 0; ii < aa.byteLength; ii++) {
    if (aa[ii] !== bb[ii]) {
      return false;
    }
  }
  return true;
};
var coerce = (o) => {
  if (o instanceof Uint8Array && o.constructor.name === "Uint8Array")
    return o;
  if (o instanceof ArrayBuffer)
    return new Uint8Array(o);
  if (ArrayBuffer.isView(o)) {
    return new Uint8Array(o.buffer, o.byteOffset, o.byteLength);
  }
  throw new Error("Unknown type, must be binary type");
};
var fromString = (str) => new TextEncoder().encode(str);
var toString = (b5) => new TextDecoder().decode(b5);

// node_modules/multiformats/esm/src/bases/base.js
var Encoder = class {
  constructor(name2, prefix, baseEncode) {
    this.name = name2;
    this.prefix = prefix;
    this.baseEncode = baseEncode;
  }
  encode(bytes) {
    if (bytes instanceof Uint8Array) {
      return `${this.prefix}${this.baseEncode(bytes)}`;
    } else {
      throw Error("Unknown type, must be binary type");
    }
  }
};
var Decoder = class {
  constructor(name2, prefix, baseDecode) {
    this.name = name2;
    this.prefix = prefix;
    if (prefix.codePointAt(0) === void 0) {
      throw new Error("Invalid prefix character");
    }
    this.prefixCodePoint = prefix.codePointAt(0);
    this.baseDecode = baseDecode;
  }
  decode(text) {
    if (typeof text === "string") {
      if (text.codePointAt(0) !== this.prefixCodePoint) {
        throw Error(`Unable to decode multibase string ${JSON.stringify(text)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`);
      }
      return this.baseDecode(text.slice(this.prefix.length));
    } else {
      throw Error("Can only multibase decode strings");
    }
  }
  or(decoder) {
    return or(this, decoder);
  }
};
var ComposedDecoder = class {
  constructor(decoders) {
    this.decoders = decoders;
  }
  or(decoder) {
    return or(this, decoder);
  }
  decode(input) {
    const prefix = input[0];
    const decoder = this.decoders[prefix];
    if (decoder) {
      return decoder.decode(input);
    } else {
      throw RangeError(`Unable to decode multibase string ${JSON.stringify(input)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`);
    }
  }
};
var or = (left, right) => new ComposedDecoder(__spreadValues(__spreadValues({}, left.decoders || { [left.prefix]: left }), right.decoders || { [right.prefix]: right }));
var Codec = class {
  constructor(name2, prefix, baseEncode, baseDecode) {
    this.name = name2;
    this.prefix = prefix;
    this.baseEncode = baseEncode;
    this.baseDecode = baseDecode;
    this.encoder = new Encoder(name2, prefix, baseEncode);
    this.decoder = new Decoder(name2, prefix, baseDecode);
  }
  encode(input) {
    return this.encoder.encode(input);
  }
  decode(input) {
    return this.decoder.decode(input);
  }
};
var from = ({ name: name2, prefix, encode: encode5, decode: decode6 }) => new Codec(name2, prefix, encode5, decode6);
var baseX = ({ prefix, name: name2, alphabet: alphabet2 }) => {
  const { encode: encode5, decode: decode6 } = base_x_default(alphabet2, name2);
  return from({
    prefix,
    name: name2,
    encode: encode5,
    decode: (text) => coerce(decode6(text))
  });
};
var decode = (string2, alphabet2, bitsPerChar, name2) => {
  const codes = {};
  for (let i3 = 0; i3 < alphabet2.length; ++i3) {
    codes[alphabet2[i3]] = i3;
  }
  let end = string2.length;
  while (string2[end - 1] === "=") {
    --end;
  }
  const out = new Uint8Array(end * bitsPerChar / 8 | 0);
  let bits = 0;
  let buffer = 0;
  let written = 0;
  for (let i3 = 0; i3 < end; ++i3) {
    const value = codes[string2[i3]];
    if (value === void 0) {
      throw new SyntaxError(`Non-${name2} character`);
    }
    buffer = buffer << bitsPerChar | value;
    bits += bitsPerChar;
    if (bits >= 8) {
      bits -= 8;
      out[written++] = 255 & buffer >> bits;
    }
  }
  if (bits >= bitsPerChar || 255 & buffer << 8 - bits) {
    throw new SyntaxError("Unexpected end of data");
  }
  return out;
};
var encode = (data, alphabet2, bitsPerChar) => {
  const pad = alphabet2[alphabet2.length - 1] === "=";
  const mask = (1 << bitsPerChar) - 1;
  let out = "";
  let bits = 0;
  let buffer = 0;
  for (let i3 = 0; i3 < data.length; ++i3) {
    buffer = buffer << 8 | data[i3];
    bits += 8;
    while (bits > bitsPerChar) {
      bits -= bitsPerChar;
      out += alphabet2[mask & buffer >> bits];
    }
  }
  if (bits) {
    out += alphabet2[mask & buffer << bitsPerChar - bits];
  }
  if (pad) {
    while (out.length * bitsPerChar & 7) {
      out += "=";
    }
  }
  return out;
};
var rfc4648 = ({ name: name2, prefix, bitsPerChar, alphabet: alphabet2 }) => {
  return from({
    prefix,
    name: name2,
    encode(input) {
      return encode(input, alphabet2, bitsPerChar);
    },
    decode(input) {
      return decode(input, alphabet2, bitsPerChar, name2);
    }
  });
};

// node_modules/multiformats/esm/src/bases/identity.js
var identity = from({
  prefix: "\0",
  name: "identity",
  encode: (buf) => toString(buf),
  decode: (str) => fromString(str)
});

// node_modules/multiformats/esm/src/bases/base2.js
var base2_exports = {};
__export(base2_exports, {
  base2: () => base2
});
init_define_process_env();
var base2 = rfc4648({
  prefix: "0",
  name: "base2",
  alphabet: "01",
  bitsPerChar: 1
});

// node_modules/multiformats/esm/src/bases/base8.js
var base8_exports = {};
__export(base8_exports, {
  base8: () => base8
});
init_define_process_env();
var base8 = rfc4648({
  prefix: "7",
  name: "base8",
  alphabet: "01234567",
  bitsPerChar: 3
});

// node_modules/multiformats/esm/src/bases/base10.js
var base10_exports = {};
__export(base10_exports, {
  base10: () => base10
});
init_define_process_env();
var base10 = baseX({
  prefix: "9",
  name: "base10",
  alphabet: "0123456789"
});

// node_modules/multiformats/esm/src/bases/base16.js
var base16_exports = {};
__export(base16_exports, {
  base16: () => base16,
  base16upper: () => base16upper
});
init_define_process_env();
var base16 = rfc4648({
  prefix: "f",
  name: "base16",
  alphabet: "0123456789abcdef",
  bitsPerChar: 4
});
var base16upper = rfc4648({
  prefix: "F",
  name: "base16upper",
  alphabet: "0123456789ABCDEF",
  bitsPerChar: 4
});

// node_modules/multiformats/esm/src/bases/base32.js
var base32_exports = {};
__export(base32_exports, {
  base32: () => base32,
  base32hex: () => base32hex,
  base32hexpad: () => base32hexpad,
  base32hexpadupper: () => base32hexpadupper,
  base32hexupper: () => base32hexupper,
  base32pad: () => base32pad,
  base32padupper: () => base32padupper,
  base32upper: () => base32upper,
  base32z: () => base32z
});
init_define_process_env();
var base32 = rfc4648({
  prefix: "b",
  name: "base32",
  alphabet: "abcdefghijklmnopqrstuvwxyz234567",
  bitsPerChar: 5
});
var base32upper = rfc4648({
  prefix: "B",
  name: "base32upper",
  alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZ234567",
  bitsPerChar: 5
});
var base32pad = rfc4648({
  prefix: "c",
  name: "base32pad",
  alphabet: "abcdefghijklmnopqrstuvwxyz234567=",
  bitsPerChar: 5
});
var base32padupper = rfc4648({
  prefix: "C",
  name: "base32padupper",
  alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=",
  bitsPerChar: 5
});
var base32hex = rfc4648({
  prefix: "v",
  name: "base32hex",
  alphabet: "0123456789abcdefghijklmnopqrstuv",
  bitsPerChar: 5
});
var base32hexupper = rfc4648({
  prefix: "V",
  name: "base32hexupper",
  alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUV",
  bitsPerChar: 5
});
var base32hexpad = rfc4648({
  prefix: "t",
  name: "base32hexpad",
  alphabet: "0123456789abcdefghijklmnopqrstuv=",
  bitsPerChar: 5
});
var base32hexpadupper = rfc4648({
  prefix: "T",
  name: "base32hexpadupper",
  alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUV=",
  bitsPerChar: 5
});
var base32z = rfc4648({
  prefix: "h",
  name: "base32z",
  alphabet: "ybndrfg8ejkmcpqxot1uwisza345h769",
  bitsPerChar: 5
});

// node_modules/multiformats/esm/src/bases/base36.js
var base36_exports = {};
__export(base36_exports, {
  base36: () => base36,
  base36upper: () => base36upper
});
init_define_process_env();
var base36 = baseX({
  prefix: "k",
  name: "base36",
  alphabet: "0123456789abcdefghijklmnopqrstuvwxyz"
});
var base36upper = baseX({
  prefix: "K",
  name: "base36upper",
  alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ"
});

// node_modules/multiformats/esm/src/bases/base58.js
var base58_exports = {};
__export(base58_exports, {
  base58btc: () => base58btc,
  base58flickr: () => base58flickr
});
init_define_process_env();
var base58btc = baseX({
  name: "base58btc",
  prefix: "z",
  alphabet: "123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"
});
var base58flickr = baseX({
  name: "base58flickr",
  prefix: "Z",
  alphabet: "123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ"
});

// node_modules/multiformats/esm/src/bases/base64.js
var base64_exports = {};
__export(base64_exports, {
  base64: () => base64,
  base64pad: () => base64pad,
  base64url: () => base64url,
  base64urlpad: () => base64urlpad
});
init_define_process_env();
var base64 = rfc4648({
  prefix: "m",
  name: "base64",
  alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",
  bitsPerChar: 6
});
var base64pad = rfc4648({
  prefix: "M",
  name: "base64pad",
  alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",
  bitsPerChar: 6
});
var base64url = rfc4648({
  prefix: "u",
  name: "base64url",
  alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_",
  bitsPerChar: 6
});
var base64urlpad = rfc4648({
  prefix: "U",
  name: "base64urlpad",
  alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=",
  bitsPerChar: 6
});

// node_modules/multiformats/esm/src/bases/base256emoji.js
var base256emoji_exports = {};
__export(base256emoji_exports, {
  base256emoji: () => base256emoji
});
init_define_process_env();
var alphabet = Array.from("\u{1F680}\u{1FA90}\u2604\u{1F6F0}\u{1F30C}\u{1F311}\u{1F312}\u{1F313}\u{1F314}\u{1F315}\u{1F316}\u{1F317}\u{1F318}\u{1F30D}\u{1F30F}\u{1F30E}\u{1F409}\u2600\u{1F4BB}\u{1F5A5}\u{1F4BE}\u{1F4BF}\u{1F602}\u2764\u{1F60D}\u{1F923}\u{1F60A}\u{1F64F}\u{1F495}\u{1F62D}\u{1F618}\u{1F44D}\u{1F605}\u{1F44F}\u{1F601}\u{1F525}\u{1F970}\u{1F494}\u{1F496}\u{1F499}\u{1F622}\u{1F914}\u{1F606}\u{1F644}\u{1F4AA}\u{1F609}\u263A\u{1F44C}\u{1F917}\u{1F49C}\u{1F614}\u{1F60E}\u{1F607}\u{1F339}\u{1F926}\u{1F389}\u{1F49E}\u270C\u2728\u{1F937}\u{1F631}\u{1F60C}\u{1F338}\u{1F64C}\u{1F60B}\u{1F497}\u{1F49A}\u{1F60F}\u{1F49B}\u{1F642}\u{1F493}\u{1F929}\u{1F604}\u{1F600}\u{1F5A4}\u{1F603}\u{1F4AF}\u{1F648}\u{1F447}\u{1F3B6}\u{1F612}\u{1F92D}\u2763\u{1F61C}\u{1F48B}\u{1F440}\u{1F62A}\u{1F611}\u{1F4A5}\u{1F64B}\u{1F61E}\u{1F629}\u{1F621}\u{1F92A}\u{1F44A}\u{1F973}\u{1F625}\u{1F924}\u{1F449}\u{1F483}\u{1F633}\u270B\u{1F61A}\u{1F61D}\u{1F634}\u{1F31F}\u{1F62C}\u{1F643}\u{1F340}\u{1F337}\u{1F63B}\u{1F613}\u2B50\u2705\u{1F97A}\u{1F308}\u{1F608}\u{1F918}\u{1F4A6}\u2714\u{1F623}\u{1F3C3}\u{1F490}\u2639\u{1F38A}\u{1F498}\u{1F620}\u261D\u{1F615}\u{1F33A}\u{1F382}\u{1F33B}\u{1F610}\u{1F595}\u{1F49D}\u{1F64A}\u{1F639}\u{1F5E3}\u{1F4AB}\u{1F480}\u{1F451}\u{1F3B5}\u{1F91E}\u{1F61B}\u{1F534}\u{1F624}\u{1F33C}\u{1F62B}\u26BD\u{1F919}\u2615\u{1F3C6}\u{1F92B}\u{1F448}\u{1F62E}\u{1F646}\u{1F37B}\u{1F343}\u{1F436}\u{1F481}\u{1F632}\u{1F33F}\u{1F9E1}\u{1F381}\u26A1\u{1F31E}\u{1F388}\u274C\u270A\u{1F44B}\u{1F630}\u{1F928}\u{1F636}\u{1F91D}\u{1F6B6}\u{1F4B0}\u{1F353}\u{1F4A2}\u{1F91F}\u{1F641}\u{1F6A8}\u{1F4A8}\u{1F92C}\u2708\u{1F380}\u{1F37A}\u{1F913}\u{1F619}\u{1F49F}\u{1F331}\u{1F616}\u{1F476}\u{1F974}\u25B6\u27A1\u2753\u{1F48E}\u{1F4B8}\u2B07\u{1F628}\u{1F31A}\u{1F98B}\u{1F637}\u{1F57A}\u26A0\u{1F645}\u{1F61F}\u{1F635}\u{1F44E}\u{1F932}\u{1F920}\u{1F927}\u{1F4CC}\u{1F535}\u{1F485}\u{1F9D0}\u{1F43E}\u{1F352}\u{1F617}\u{1F911}\u{1F30A}\u{1F92F}\u{1F437}\u260E\u{1F4A7}\u{1F62F}\u{1F486}\u{1F446}\u{1F3A4}\u{1F647}\u{1F351}\u2744\u{1F334}\u{1F4A3}\u{1F438}\u{1F48C}\u{1F4CD}\u{1F940}\u{1F922}\u{1F445}\u{1F4A1}\u{1F4A9}\u{1F450}\u{1F4F8}\u{1F47B}\u{1F910}\u{1F92E}\u{1F3BC}\u{1F975}\u{1F6A9}\u{1F34E}\u{1F34A}\u{1F47C}\u{1F48D}\u{1F4E3}\u{1F942}");
var alphabetBytesToChars = alphabet.reduce((p4, c3, i3) => {
  p4[i3] = c3;
  return p4;
}, []);
var alphabetCharsToBytes = alphabet.reduce((p4, c3, i3) => {
  p4[c3.codePointAt(0)] = i3;
  return p4;
}, []);
function encode2(data) {
  return data.reduce((p4, c3) => {
    p4 += alphabetBytesToChars[c3];
    return p4;
  }, "");
}
function decode2(str) {
  const byts = [];
  for (const char of str) {
    const byt = alphabetCharsToBytes[char.codePointAt(0)];
    if (byt === void 0) {
      throw new Error(`Non-base256emoji character: ${char}`);
    }
    byts.push(byt);
  }
  return new Uint8Array(byts);
}
var base256emoji = from({
  prefix: "\u{1F680}",
  name: "base256emoji",
  encode: encode2,
  decode: decode2
});

// node_modules/multiformats/esm/src/hashes/sha2-browser.js
var sha2_browser_exports = {};
__export(sha2_browser_exports, {
  sha256: () => sha256,
  sha512: () => sha512
});
init_define_process_env();

// node_modules/multiformats/esm/src/hashes/hasher.js
init_define_process_env();

// node_modules/multiformats/esm/src/hashes/digest.js
init_define_process_env();

// node_modules/multiformats/esm/src/varint.js
init_define_process_env();

// node_modules/multiformats/esm/vendor/varint.js
init_define_process_env();
var encode_1 = encode3;
var MSB = 128;
var REST = 127;
var MSBALL = ~REST;
var INT = Math.pow(2, 31);
function encode3(num, out, offset) {
  out = out || [];
  offset = offset || 0;
  var oldOffset = offset;
  while (num >= INT) {
    out[offset++] = num & 255 | MSB;
    num /= 128;
  }
  while (num & MSBALL) {
    out[offset++] = num & 255 | MSB;
    num >>>= 7;
  }
  out[offset] = num | 0;
  encode3.bytes = offset - oldOffset + 1;
  return out;
}
var decode3 = read;
var MSB$1 = 128;
var REST$1 = 127;
function read(buf, offset) {
  var res = 0, offset = offset || 0, shift = 0, counter = offset, b5, l = buf.length;
  do {
    if (counter >= l) {
      read.bytes = 0;
      throw new RangeError("Could not decode varint");
    }
    b5 = buf[counter++];
    res += shift < 28 ? (b5 & REST$1) << shift : (b5 & REST$1) * Math.pow(2, shift);
    shift += 7;
  } while (b5 >= MSB$1);
  read.bytes = counter - offset;
  return res;
}
var N1 = Math.pow(2, 7);
var N2 = Math.pow(2, 14);
var N3 = Math.pow(2, 21);
var N4 = Math.pow(2, 28);
var N5 = Math.pow(2, 35);
var N6 = Math.pow(2, 42);
var N7 = Math.pow(2, 49);
var N8 = Math.pow(2, 56);
var N9 = Math.pow(2, 63);
var length = function(value) {
  return value < N1 ? 1 : value < N2 ? 2 : value < N3 ? 3 : value < N4 ? 4 : value < N5 ? 5 : value < N6 ? 6 : value < N7 ? 7 : value < N8 ? 8 : value < N9 ? 9 : 10;
};
var varint = {
  encode: encode_1,
  decode: decode3,
  encodingLength: length
};
var _brrp_varint = varint;
var varint_default = _brrp_varint;

// node_modules/multiformats/esm/src/varint.js
var decode4 = (data, offset = 0) => {
  const code2 = varint_default.decode(data, offset);
  return [
    code2,
    varint_default.decode.bytes
  ];
};
var encodeTo = (int, target, offset = 0) => {
  varint_default.encode(int, target, offset);
  return target;
};
var encodingLength = (int) => {
  return varint_default.encodingLength(int);
};

// node_modules/multiformats/esm/src/hashes/digest.js
var create = (code2, digest2) => {
  const size = digest2.byteLength;
  const sizeOffset = encodingLength(code2);
  const digestOffset = sizeOffset + encodingLength(size);
  const bytes = new Uint8Array(digestOffset + size);
  encodeTo(code2, bytes, 0);
  encodeTo(size, bytes, sizeOffset);
  bytes.set(digest2, digestOffset);
  return new Digest(code2, size, digest2, bytes);
};
var decode5 = (multihash) => {
  const bytes = coerce(multihash);
  const [code2, sizeOffset] = decode4(bytes);
  const [size, digestOffset] = decode4(bytes.subarray(sizeOffset));
  const digest2 = bytes.subarray(sizeOffset + digestOffset);
  if (digest2.byteLength !== size) {
    throw new Error("Incorrect length");
  }
  return new Digest(code2, size, digest2, bytes);
};
var equals2 = (a2, b5) => {
  if (a2 === b5) {
    return true;
  } else {
    return a2.code === b5.code && a2.size === b5.size && equals(a2.bytes, b5.bytes);
  }
};
var Digest = class {
  constructor(code2, size, digest2, bytes) {
    this.code = code2;
    this.size = size;
    this.digest = digest2;
    this.bytes = bytes;
  }
};

// node_modules/multiformats/esm/src/hashes/hasher.js
var from2 = ({ name: name2, code: code2, encode: encode5 }) => new Hasher(name2, code2, encode5);
var Hasher = class {
  constructor(name2, code2, encode5) {
    this.name = name2;
    this.code = code2;
    this.encode = encode5;
  }
  digest(input) {
    if (input instanceof Uint8Array) {
      const result = this.encode(input);
      return result instanceof Uint8Array ? create(this.code, result) : result.then((digest2) => create(this.code, digest2));
    } else {
      throw Error("Unknown type, must be binary type");
    }
  }
};

// node_modules/multiformats/esm/src/hashes/sha2-browser.js
var sha = (name2) => async (data) => new Uint8Array(await crypto.subtle.digest(name2, data));
var sha256 = from2({
  name: "sha2-256",
  code: 18,
  encode: sha("SHA-256")
});
var sha512 = from2({
  name: "sha2-512",
  code: 19,
  encode: sha("SHA-512")
});

// node_modules/multiformats/esm/src/hashes/identity.js
var identity_exports2 = {};
__export(identity_exports2, {
  identity: () => identity2
});
init_define_process_env();
var code = 0;
var name = "identity";
var encode4 = coerce;
var digest = (input) => create(code, encode4(input));
var identity2 = {
  code,
  name,
  encode: encode4,
  digest
};

// node_modules/multiformats/esm/src/codecs/raw.js
init_define_process_env();

// node_modules/multiformats/esm/src/codecs/json.js
init_define_process_env();
var textEncoder = new TextEncoder();
var textDecoder = new TextDecoder();

// node_modules/multiformats/esm/src/index.js
init_define_process_env();

// node_modules/multiformats/esm/src/cid.js
init_define_process_env();
var CID = class {
  constructor(version2, code2, multihash, bytes) {
    this.code = code2;
    this.version = version2;
    this.multihash = multihash;
    this.bytes = bytes;
    this.byteOffset = bytes.byteOffset;
    this.byteLength = bytes.byteLength;
    this.asCID = this;
    this._baseCache = /* @__PURE__ */ new Map();
    Object.defineProperties(this, {
      byteOffset: hidden,
      byteLength: hidden,
      code: readonly,
      version: readonly,
      multihash: readonly,
      bytes: readonly,
      _baseCache: hidden,
      asCID: hidden
    });
  }
  toV0() {
    switch (this.version) {
      case 0: {
        return this;
      }
      default: {
        const { code: code2, multihash } = this;
        if (code2 !== DAG_PB_CODE) {
          throw new Error("Cannot convert a non dag-pb CID to CIDv0");
        }
        if (multihash.code !== SHA_256_CODE) {
          throw new Error("Cannot convert non sha2-256 multihash CID to CIDv0");
        }
        return CID.createV0(multihash);
      }
    }
  }
  toV1() {
    switch (this.version) {
      case 0: {
        const { code: code2, digest: digest2 } = this.multihash;
        const multihash = create(code2, digest2);
        return CID.createV1(this.code, multihash);
      }
      case 1: {
        return this;
      }
      default: {
        throw Error(`Can not convert CID version ${this.version} to version 0. This is a bug please report`);
      }
    }
  }
  equals(other) {
    return other && this.code === other.code && this.version === other.version && equals2(this.multihash, other.multihash);
  }
  toString(base3) {
    const { bytes, version: version2, _baseCache } = this;
    switch (version2) {
      case 0:
        return toStringV0(bytes, _baseCache, base3 || base58btc.encoder);
      default:
        return toStringV1(bytes, _baseCache, base3 || base32.encoder);
    }
  }
  toJSON() {
    return {
      code: this.code,
      version: this.version,
      hash: this.multihash.bytes
    };
  }
  get [Symbol.toStringTag]() {
    return "CID";
  }
  [Symbol.for("nodejs.util.inspect.custom")]() {
    return "CID(" + this.toString() + ")";
  }
  static isCID(value) {
    deprecate(/^0\.0/, IS_CID_DEPRECATION);
    return !!(value && (value[cidSymbol] || value.asCID === value));
  }
  get toBaseEncodedString() {
    throw new Error("Deprecated, use .toString()");
  }
  get codec() {
    throw new Error('"codec" property is deprecated, use integer "code" property instead');
  }
  get buffer() {
    throw new Error("Deprecated .buffer property, use .bytes to get Uint8Array instead");
  }
  get multibaseName() {
    throw new Error('"multibaseName" property is deprecated');
  }
  get prefix() {
    throw new Error('"prefix" property is deprecated');
  }
  static asCID(value) {
    if (value instanceof CID) {
      return value;
    } else if (value != null && value.asCID === value) {
      const { version: version2, code: code2, multihash, bytes } = value;
      return new CID(version2, code2, multihash, bytes || encodeCID(version2, code2, multihash.bytes));
    } else if (value != null && value[cidSymbol] === true) {
      const { version: version2, multihash, code: code2 } = value;
      const digest2 = decode5(multihash);
      return CID.create(version2, code2, digest2);
    } else {
      return null;
    }
  }
  static create(version2, code2, digest2) {
    if (typeof code2 !== "number") {
      throw new Error("String codecs are no longer supported");
    }
    switch (version2) {
      case 0: {
        if (code2 !== DAG_PB_CODE) {
          throw new Error(`Version 0 CID must use dag-pb (code: ${DAG_PB_CODE}) block encoding`);
        } else {
          return new CID(version2, code2, digest2, digest2.bytes);
        }
      }
      case 1: {
        const bytes = encodeCID(version2, code2, digest2.bytes);
        return new CID(version2, code2, digest2, bytes);
      }
      default: {
        throw new Error("Invalid version");
      }
    }
  }
  static createV0(digest2) {
    return CID.create(0, DAG_PB_CODE, digest2);
  }
  static createV1(code2, digest2) {
    return CID.create(1, code2, digest2);
  }
  static decode(bytes) {
    const [cid, remainder] = CID.decodeFirst(bytes);
    if (remainder.length) {
      throw new Error("Incorrect length");
    }
    return cid;
  }
  static decodeFirst(bytes) {
    const specs = CID.inspectBytes(bytes);
    const prefixSize = specs.size - specs.multihashSize;
    const multihashBytes = coerce(bytes.subarray(prefixSize, prefixSize + specs.multihashSize));
    if (multihashBytes.byteLength !== specs.multihashSize) {
      throw new Error("Incorrect length");
    }
    const digestBytes = multihashBytes.subarray(specs.multihashSize - specs.digestSize);
    const digest2 = new Digest(specs.multihashCode, specs.digestSize, digestBytes, multihashBytes);
    const cid = specs.version === 0 ? CID.createV0(digest2) : CID.createV1(specs.codec, digest2);
    return [
      cid,
      bytes.subarray(specs.size)
    ];
  }
  static inspectBytes(initialBytes) {
    let offset = 0;
    const next = () => {
      const [i3, length2] = decode4(initialBytes.subarray(offset));
      offset += length2;
      return i3;
    };
    let version2 = next();
    let codec = DAG_PB_CODE;
    if (version2 === 18) {
      version2 = 0;
      offset = 0;
    } else if (version2 === 1) {
      codec = next();
    }
    if (version2 !== 0 && version2 !== 1) {
      throw new RangeError(`Invalid CID version ${version2}`);
    }
    const prefixSize = offset;
    const multihashCode = next();
    const digestSize = next();
    const size = offset + digestSize;
    const multihashSize = size - prefixSize;
    return {
      version: version2,
      codec,
      multihashCode,
      digestSize,
      multihashSize,
      size
    };
  }
  static parse(source, base3) {
    const [prefix, bytes] = parseCIDtoBytes(source, base3);
    const cid = CID.decode(bytes);
    cid._baseCache.set(prefix, source);
    return cid;
  }
};
var parseCIDtoBytes = (source, base3) => {
  switch (source[0]) {
    case "Q": {
      const decoder = base3 || base58btc;
      return [
        base58btc.prefix,
        decoder.decode(`${base58btc.prefix}${source}`)
      ];
    }
    case base58btc.prefix: {
      const decoder = base3 || base58btc;
      return [
        base58btc.prefix,
        decoder.decode(source)
      ];
    }
    case base32.prefix: {
      const decoder = base3 || base32;
      return [
        base32.prefix,
        decoder.decode(source)
      ];
    }
    default: {
      if (base3 == null) {
        throw Error("To parse non base32 or base58btc encoded CID multibase decoder must be provided");
      }
      return [
        source[0],
        base3.decode(source)
      ];
    }
  }
};
var toStringV0 = (bytes, cache, base3) => {
  const { prefix } = base3;
  if (prefix !== base58btc.prefix) {
    throw Error(`Cannot string encode V0 in ${base3.name} encoding`);
  }
  const cid = cache.get(prefix);
  if (cid == null) {
    const cid2 = base3.encode(bytes).slice(1);
    cache.set(prefix, cid2);
    return cid2;
  } else {
    return cid;
  }
};
var toStringV1 = (bytes, cache, base3) => {
  const { prefix } = base3;
  const cid = cache.get(prefix);
  if (cid == null) {
    const cid2 = base3.encode(bytes);
    cache.set(prefix, cid2);
    return cid2;
  } else {
    return cid;
  }
};
var DAG_PB_CODE = 112;
var SHA_256_CODE = 18;
var encodeCID = (version2, code2, multihash) => {
  const codeOffset = encodingLength(version2);
  const hashOffset = codeOffset + encodingLength(code2);
  const bytes = new Uint8Array(hashOffset + multihash.byteLength);
  encodeTo(version2, bytes, 0);
  encodeTo(code2, bytes, codeOffset);
  bytes.set(multihash, hashOffset);
  return bytes;
};
var cidSymbol = Symbol.for("@ipld/js-cid/CID");
var readonly = {
  writable: false,
  configurable: false,
  enumerable: true
};
var hidden = {
  writable: false,
  enumerable: false,
  configurable: false
};
var version = "0.0.0-dev";
var deprecate = (range, message) => {
  if (range.test(version)) {
    console.warn(message);
  } else {
    throw new Error(message);
  }
};
var IS_CID_DEPRECATION = `CID.isCID(v) is deprecated and will be removed in the next major release.
Following code pattern:

if (CID.isCID(value)) {
  doSomethingWithCID(value)
}

Is replaced with:

const cid = CID.asCID(value)
if (cid) {
  // Make sure to use cid instead of value
  doSomethingWithCID(cid)
}
`;

// node_modules/multiformats/esm/src/basics.js
var bases = __spreadValues(__spreadValues(__spreadValues(__spreadValues(__spreadValues(__spreadValues(__spreadValues(__spreadValues(__spreadValues(__spreadValues({}, identity_exports), base2_exports), base8_exports), base10_exports), base16_exports), base32_exports), base36_exports), base58_exports), base64_exports), base256emoji_exports);
var hashes = __spreadValues(__spreadValues({}, sha2_browser_exports), identity_exports2);

// node_modules/uint8arrays/esm/src/util/bases.js
function createCodec(name2, prefix, encode5, decode6) {
  return {
    name: name2,
    prefix,
    encoder: {
      name: name2,
      prefix,
      encode: encode5
    },
    decoder: { decode: decode6 }
  };
}
var string = createCodec("utf8", "u", (buf) => {
  const decoder = new TextDecoder("utf8");
  return "u" + decoder.decode(buf);
}, (str) => {
  const encoder = new TextEncoder();
  return encoder.encode(str.substring(1));
});
var ascii = createCodec("ascii", "a", (buf) => {
  let string2 = "a";
  for (let i3 = 0; i3 < buf.length; i3++) {
    string2 += String.fromCharCode(buf[i3]);
  }
  return string2;
}, (str) => {
  str = str.substring(1);
  const buf = allocUnsafe(str.length);
  for (let i3 = 0; i3 < str.length; i3++) {
    buf[i3] = str.charCodeAt(i3);
  }
  return buf;
});
var BASES = __spreadValues({
  utf8: string,
  "utf-8": string,
  hex: bases.base16,
  latin1: ascii,
  ascii,
  binary: ascii
}, bases);
var bases_default = BASES;

// node_modules/uint8arrays/esm/src/from-string.js
function fromString2(string2, encoding = "utf8") {
  const base3 = bases_default[encoding];
  if (!base3) {
    throw new Error(`Unsupported encoding "${encoding}"`);
  }
  if ((encoding === "utf8" || encoding === "utf-8") && globalThis.Buffer != null && globalThis.Buffer.from != null) {
    return asUint8Array(globalThis.Buffer.from(string2, "utf-8"));
  }
  return base3.decoder.decode(`${base3.prefix}${string2}`);
}

// node_modules/uint8arrays/esm/src/to-string.js
init_define_process_env();
function toString2(array, encoding = "utf8") {
  const base3 = bases_default[encoding];
  if (!base3) {
    throw new Error(`Unsupported encoding "${encoding}"`);
  }
  if ((encoding === "utf8" || encoding === "utf-8") && globalThis.Buffer != null && globalThis.Buffer.from != null) {
    return globalThis.Buffer.from(array.buffer, array.byteOffset, array.byteLength).toString("utf8");
  }
  return base3.encoder.encode(array).substring(1);
}

// node_modules/uint8arrays/esm/src/xor.js
init_define_process_env();

// node_modules/@walletconnect/ethereum-provider/node_modules/detect-browser/es/index.js
init_define_process_env();
var BrowserInfo = function() {
  function BrowserInfo5(name2, version2, os3) {
    this.name = name2;
    this.version = version2;
    this.os = os3;
    this.type = "browser";
  }
  return BrowserInfo5;
}();
var NodeInfo = function() {
  function NodeInfo5(version2) {
    this.version = version2;
    this.type = "node";
    this.name = "node";
    this.os = process.platform;
  }
  return NodeInfo5;
}();
var SearchBotDeviceInfo = function() {
  function SearchBotDeviceInfo5(name2, version2, os3, bot) {
    this.name = name2;
    this.version = version2;
    this.os = os3;
    this.bot = bot;
    this.type = "bot-device";
  }
  return SearchBotDeviceInfo5;
}();
var BotInfo = function() {
  function BotInfo5() {
    this.type = "bot";
    this.bot = true;
    this.name = "bot";
    this.version = null;
    this.os = null;
  }
  return BotInfo5;
}();
var ReactNativeInfo = function() {
  function ReactNativeInfo5() {
    this.type = "react-native";
    this.name = "react-native";
    this.version = null;
    this.os = null;
  }
  return ReactNativeInfo5;
}();

// node_modules/@walletconnect/ethereum-provider/node_modules/@walletconnect/utils/dist/index.es.js
var import_time = __toESM(require_cjs());
var import_window_getters = __toESM(require_cjs2());
var import_window_metadata = __toESM(require_cjs3());
var C = __toESM(require_query_string());

// node_modules/@walletconnect/relay-api/dist/esm/index.js
init_define_process_env();

// node_modules/@walletconnect/relay-api/dist/esm/types.js
init_define_process_env();

// node_modules/@walletconnect/relay-api/dist/esm/parsers.js
init_define_process_env();

// node_modules/@walletconnect/relay-api/dist/esm/misc.js
init_define_process_env();

// node_modules/@walletconnect/relay-api/dist/esm/validators.js
init_define_process_env();

// node_modules/@walletconnect/relay-api/dist/esm/jsonrpc.js
init_define_process_env();
var RELAY_JSONRPC = {
  waku: {
    publish: "waku_publish",
    batchPublish: "waku_batchPublish",
    subscribe: "waku_subscribe",
    batchSubscribe: "waku_batchSubscribe",
    subscription: "waku_subscription",
    unsubscribe: "waku_unsubscribe",
    batchUnsubscribe: "waku_batchUnsubscribe"
  },
  irn: {
    publish: "irn_publish",
    batchPublish: "irn_batchPublish",
    subscribe: "irn_subscribe",
    batchSubscribe: "irn_batchSubscribe",
    subscription: "irn_subscription",
    unsubscribe: "irn_unsubscribe",
    batchUnsubscribe: "irn_batchUnsubscribe"
  },
  iridium: {
    publish: "iridium_publish",
    batchPublish: "iridium_batchPublish",
    subscribe: "iridium_subscribe",
    batchSubscribe: "iridium_batchSubscribe",
    subscription: "iridium_subscription",
    unsubscribe: "iridium_unsubscribe",
    batchUnsubscribe: "iridium_batchUnsubscribe"
  }
};

// node_modules/@walletconnect/ethereum-provider/node_modules/@walletconnect/utils/dist/index.es.js
function On(e, n2 = []) {
  const t = [];
  return Object.keys(e).forEach((r) => {
    if (n2.length && !n2.includes(r))
      return;
    const o = e[r];
    t.push(...o.accounts);
  }), t;
}
var It = { INVALID_METHOD: { message: "Invalid method.", code: 1001 }, INVALID_EVENT: { message: "Invalid event.", code: 1002 }, INVALID_UPDATE_REQUEST: { message: "Invalid update request.", code: 1003 }, INVALID_EXTEND_REQUEST: { message: "Invalid extend request.", code: 1004 }, INVALID_SESSION_SETTLE_REQUEST: { message: "Invalid session settle request.", code: 1005 }, UNAUTHORIZED_METHOD: { message: "Unauthorized method.", code: 3001 }, UNAUTHORIZED_EVENT: { message: "Unauthorized event.", code: 3002 }, UNAUTHORIZED_UPDATE_REQUEST: { message: "Unauthorized update request.", code: 3003 }, UNAUTHORIZED_EXTEND_REQUEST: { message: "Unauthorized extend request.", code: 3004 }, USER_REJECTED: { message: "User rejected.", code: 5e3 }, USER_REJECTED_CHAINS: { message: "User rejected chains.", code: 5001 }, USER_REJECTED_METHODS: { message: "User rejected methods.", code: 5002 }, USER_REJECTED_EVENTS: { message: "User rejected events.", code: 5003 }, UNSUPPORTED_CHAINS: { message: "Unsupported chains.", code: 5100 }, UNSUPPORTED_METHODS: { message: "Unsupported methods.", code: 5101 }, UNSUPPORTED_EVENTS: { message: "Unsupported events.", code: 5102 }, UNSUPPORTED_ACCOUNTS: { message: "Unsupported accounts.", code: 5103 }, UNSUPPORTED_NAMESPACE_KEY: { message: "Unsupported namespace key.", code: 5104 }, USER_DISCONNECTED: { message: "User disconnected.", code: 6e3 }, SESSION_SETTLEMENT_FAILED: { message: "Session settlement failed.", code: 7e3 }, WC_METHOD_UNSUPPORTED: { message: "Unsupported wc_ method.", code: 10001 } };
function w(e, n2) {
  const { message: t, code: r } = It[e];
  return { message: n2 ? `${t} ${n2}` : t, code: r };
}
function j(e, n2) {
  return Array.isArray(e) ? typeof n2 < "u" && e.length ? e.every(n2) : true : false;
}

// node_modules/@walletconnect/universal-provider/dist/index.es.js
init_define_process_env();

// node_modules/@walletconnect/sign-client/dist/index.es.js
init_define_process_env();

// node_modules/@walletconnect/core/dist/index.es.js
init_define_process_env();
var import_events5 = __toESM(require_events());
var import_keyvaluestorage = __toESM(require_browser2());
var import_heartbeat = __toESM(require_cjs5());
var import_logger = __toESM(require_cjs6());

// node_modules/@walletconnect/core/node_modules/@walletconnect/types/dist/index.es.js
init_define_process_env();
init_esm();
var import_events2 = __toESM(require_events());
var n = class extends IEvents {
  constructor(s) {
    super(), this.opts = s, this.protocol = "wc", this.version = 2;
  }
};
var h = class extends IEvents {
  constructor(s, t) {
    super(), this.core = s, this.logger = t, this.records = /* @__PURE__ */ new Map();
  }
};
var a = class {
  constructor(s, t) {
    this.logger = s, this.core = t;
  }
};
var u = class extends IEvents {
  constructor(s, t) {
    super(), this.relayer = s, this.logger = t;
  }
};
var g = class extends IEvents {
  constructor(s) {
    super();
  }
};
var p = class {
  constructor(s, t, o, w8) {
    this.core = s, this.logger = t, this.name = o;
  }
};
var d = class extends IEvents {
  constructor(s, t) {
    super(), this.relayer = s, this.logger = t;
  }
};
var E = class extends IEvents {
  constructor(s, t) {
    super(), this.core = s, this.logger = t;
  }
};
var y = class {
  constructor(s, t) {
    this.projectId = s, this.logger = t;
  }
};

// node_modules/@walletconnect/safe-json/dist/esm/index.js
init_define_process_env();
var JSONStringify = (data) => JSON.stringify(data, (_3, value) => typeof value === "bigint" ? value.toString() + "n" : value);
var JSONParse = (json) => {
  const numbersBiggerThanMaxInt = /([\[:])?(\d{17,}|(?:[9](?:[1-9]07199254740991|0[1-9]7199254740991|00[8-9]199254740991|007[2-9]99254740991|007199[3-9]54740991|0071992[6-9]4740991|00719925[5-9]740991|007199254[8-9]40991|0071992547[5-9]0991|00719925474[1-9]991|00719925474099[2-9])))([,\}\]])/g;
  const serializedData = json.replace(numbersBiggerThanMaxInt, '$1"$2n"$3');
  return JSON.parse(serializedData, (_3, value) => {
    const isCustomFormatBigInt = typeof value === "string" && value.match(/^\d+n$/);
    if (isCustomFormatBigInt)
      return BigInt(value.substring(0, value.length - 1));
    return value;
  });
};
function safeJsonParse(value) {
  if (typeof value !== "string") {
    throw new Error(`Cannot safe json parse value of type ${typeof value}`);
  }
  try {
    return JSONParse(value);
  } catch (_a) {
    return value;
  }
}
function safeJsonStringify(value) {
  return typeof value === "string" ? value : JSONStringify(value) || "";
}

// node_modules/@walletconnect/relay-auth/dist/esm/index.js
init_define_process_env();

// node_modules/@walletconnect/relay-auth/dist/esm/api.js
init_define_process_env();
var ed25519 = __toESM(require_ed25519());
var import_random2 = __toESM(require_random());
var import_time2 = __toESM(require_cjs());

// node_modules/@walletconnect/relay-auth/dist/esm/constants.js
init_define_process_env();
var JWT_IRIDIUM_ALG = "EdDSA";
var JWT_IRIDIUM_TYP = "JWT";
var JWT_DELIMITER = ".";
var JWT_ENCODING = "base64url";
var JSON_ENCODING = "utf8";
var DATA_ENCODING = "utf8";
var DID_DELIMITER = ":";
var DID_PREFIX = "did";
var DID_METHOD = "key";
var MULTICODEC_ED25519_ENCODING = "base58btc";
var MULTICODEC_ED25519_BASE = "z";
var MULTICODEC_ED25519_HEADER = "K36";
var KEY_PAIR_SEED_LENGTH = 32;

// node_modules/@walletconnect/relay-auth/dist/esm/utils.js
init_define_process_env();
function encodeJSON(val) {
  return toString2(fromString2(safeJsonStringify(val), JSON_ENCODING), JWT_ENCODING);
}
function encodeIss(publicKey) {
  const header = fromString2(MULTICODEC_ED25519_HEADER, MULTICODEC_ED25519_ENCODING);
  const multicodec = MULTICODEC_ED25519_BASE + toString2(concat([header, publicKey]), MULTICODEC_ED25519_ENCODING);
  return [DID_PREFIX, DID_METHOD, multicodec].join(DID_DELIMITER);
}
function encodeSig(bytes) {
  return toString2(bytes, JWT_ENCODING);
}
function encodeData(params) {
  return fromString2([encodeJSON(params.header), encodeJSON(params.payload)].join(JWT_DELIMITER), DATA_ENCODING);
}
function encodeJWT(params) {
  return [
    encodeJSON(params.header),
    encodeJSON(params.payload),
    encodeSig(params.signature)
  ].join(JWT_DELIMITER);
}

// node_modules/@walletconnect/relay-auth/dist/esm/api.js
function generateKeyPair2(seed = (0, import_random2.randomBytes)(KEY_PAIR_SEED_LENGTH)) {
  return ed25519.generateKeyPairFromSeed(seed);
}
async function signJWT(sub, aud, ttl, keyPair, iat = (0, import_time2.fromMiliseconds)(Date.now())) {
  const header = { alg: JWT_IRIDIUM_ALG, typ: JWT_IRIDIUM_TYP };
  const iss = encodeIss(keyPair.publicKey);
  const exp = iat + ttl;
  const payload = { iss, sub, aud, iat, exp };
  const data = encodeData({ header, payload });
  const signature = ed25519.sign(keyPair.secretKey, data);
  return encodeJWT({ header, payload, signature });
}

// node_modules/@walletconnect/relay-auth/dist/esm/types.js
init_define_process_env();

// node_modules/@walletconnect/core/node_modules/@walletconnect/utils/dist/index.es.js
init_define_process_env();
var import_chacha20poly13052 = __toESM(require_chacha20poly1305());
var import_hkdf2 = __toESM(require_hkdf());
var import_random3 = __toESM(require_random());
var import_sha2562 = __toESM(require_sha256());
var ue2 = __toESM(require_x25519());

// node_modules/@walletconnect/core/node_modules/detect-browser/es/index.js
init_define_process_env();
var __spreadArray = function(to, from3, pack) {
  if (pack || arguments.length === 2)
    for (var i3 = 0, l = from3.length, ar; i3 < l; i3++) {
      if (ar || !(i3 in from3)) {
        if (!ar)
          ar = Array.prototype.slice.call(from3, 0, i3);
        ar[i3] = from3[i3];
      }
    }
  return to.concat(ar || Array.prototype.slice.call(from3));
};
var BrowserInfo2 = function() {
  function BrowserInfo5(name2, version2, os3) {
    this.name = name2;
    this.version = version2;
    this.os = os3;
    this.type = "browser";
  }
  return BrowserInfo5;
}();
var NodeInfo2 = function() {
  function NodeInfo5(version2) {
    this.version = version2;
    this.type = "node";
    this.name = "node";
    this.os = process.platform;
  }
  return NodeInfo5;
}();
var SearchBotDeviceInfo2 = function() {
  function SearchBotDeviceInfo5(name2, version2, os3, bot) {
    this.name = name2;
    this.version = version2;
    this.os = os3;
    this.bot = bot;
    this.type = "bot-device";
  }
  return SearchBotDeviceInfo5;
}();
var BotInfo2 = function() {
  function BotInfo5() {
    this.type = "bot";
    this.bot = true;
    this.name = "bot";
    this.version = null;
    this.os = null;
  }
  return BotInfo5;
}();
var ReactNativeInfo2 = function() {
  function ReactNativeInfo5() {
    this.type = "react-native";
    this.name = "react-native";
    this.version = null;
    this.os = null;
  }
  return ReactNativeInfo5;
}();
var SEARCHBOX_UA_REGEX = /alexa|bot|crawl(er|ing)|facebookexternalhit|feedburner|google web preview|nagios|postrank|pingdom|slurp|spider|yahoo!|yandex/;
var SEARCHBOT_OS_REGEX = /(nuhk|curl|Googlebot|Yammybot|Openbot|Slurp|MSNBot|Ask\ Jeeves\/Teoma|ia_archiver)/;
var REQUIRED_VERSION_PARTS = 3;
var userAgentRules = [
  ["aol", /AOLShield\/([0-9\._]+)/],
  ["edge", /Edge\/([0-9\._]+)/],
  ["edge-ios", /EdgiOS\/([0-9\._]+)/],
  ["yandexbrowser", /YaBrowser\/([0-9\._]+)/],
  ["kakaotalk", /KAKAOTALK\s([0-9\.]+)/],
  ["samsung", /SamsungBrowser\/([0-9\.]+)/],
  ["silk", /\bSilk\/([0-9._-]+)\b/],
  ["miui", /MiuiBrowser\/([0-9\.]+)$/],
  ["beaker", /BeakerBrowser\/([0-9\.]+)/],
  ["edge-chromium", /EdgA?\/([0-9\.]+)/],
  [
    "chromium-webview",
    /(?!Chrom.*OPR)wv\).*Chrom(?:e|ium)\/([0-9\.]+)(:?\s|$)/
  ],
  ["chrome", /(?!Chrom.*OPR)Chrom(?:e|ium)\/([0-9\.]+)(:?\s|$)/],
  ["phantomjs", /PhantomJS\/([0-9\.]+)(:?\s|$)/],
  ["crios", /CriOS\/([0-9\.]+)(:?\s|$)/],
  ["firefox", /Firefox\/([0-9\.]+)(?:\s|$)/],
  ["fxios", /FxiOS\/([0-9\.]+)/],
  ["opera-mini", /Opera Mini.*Version\/([0-9\.]+)/],
  ["opera", /Opera\/([0-9\.]+)(?:\s|$)/],
  ["opera", /OPR\/([0-9\.]+)(:?\s|$)/],
  ["pie", /^Microsoft Pocket Internet Explorer\/(\d+\.\d+)$/],
  ["pie", /^Mozilla\/\d\.\d+\s\(compatible;\s(?:MSP?IE|MSInternet Explorer) (\d+\.\d+);.*Windows CE.*\)$/],
  ["netfront", /^Mozilla\/\d\.\d+.*NetFront\/(\d.\d)/],
  ["ie", /Trident\/7\.0.*rv\:([0-9\.]+).*\).*Gecko$/],
  ["ie", /MSIE\s([0-9\.]+);.*Trident\/[4-7].0/],
  ["ie", /MSIE\s(7\.0)/],
  ["bb10", /BB10;\sTouch.*Version\/([0-9\.]+)/],
  ["android", /Android\s([0-9\.]+)/],
  ["ios", /Version\/([0-9\._]+).*Mobile.*Safari.*/],
  ["safari", /Version\/([0-9\._]+).*Safari/],
  ["facebook", /FB[AS]V\/([0-9\.]+)/],
  ["instagram", /Instagram\s([0-9\.]+)/],
  ["ios-webview", /AppleWebKit\/([0-9\.]+).*Mobile/],
  ["ios-webview", /AppleWebKit\/([0-9\.]+).*Gecko\)$/],
  ["curl", /^curl\/([0-9\.]+)$/],
  ["searchbot", SEARCHBOX_UA_REGEX]
];
var operatingSystemRules = [
  ["iOS", /iP(hone|od|ad)/],
  ["Android OS", /Android/],
  ["BlackBerry OS", /BlackBerry|BB10/],
  ["Windows Mobile", /IEMobile/],
  ["Amazon OS", /Kindle/],
  ["Windows 3.11", /Win16/],
  ["Windows 95", /(Windows 95)|(Win95)|(Windows_95)/],
  ["Windows 98", /(Windows 98)|(Win98)/],
  ["Windows 2000", /(Windows NT 5.0)|(Windows 2000)/],
  ["Windows XP", /(Windows NT 5.1)|(Windows XP)/],
  ["Windows Server 2003", /(Windows NT 5.2)/],
  ["Windows Vista", /(Windows NT 6.0)/],
  ["Windows 7", /(Windows NT 6.1)/],
  ["Windows 8", /(Windows NT 6.2)/],
  ["Windows 8.1", /(Windows NT 6.3)/],
  ["Windows 10", /(Windows NT 10.0)/],
  ["Windows ME", /Windows ME/],
  ["Windows CE", /Windows CE|WinCE|Microsoft Pocket Internet Explorer/],
  ["Open BSD", /OpenBSD/],
  ["Sun OS", /SunOS/],
  ["Chrome OS", /CrOS/],
  ["Linux", /(Linux)|(X11)/],
  ["Mac OS", /(Mac_PowerPC)|(Macintosh)/],
  ["QNX", /QNX/],
  ["BeOS", /BeOS/],
  ["OS/2", /OS\/2/]
];
function detect2(userAgent) {
  if (!!userAgent) {
    return parseUserAgent(userAgent);
  }
  if (typeof document === "undefined" && typeof navigator !== "undefined" && navigator.product === "ReactNative") {
    return new ReactNativeInfo2();
  }
  if (typeof navigator !== "undefined") {
    return parseUserAgent(navigator.userAgent);
  }
  return getNodeVersion();
}
function matchUserAgent(ua) {
  return ua !== "" && userAgentRules.reduce(function(matched, _a) {
    var browser = _a[0], regex = _a[1];
    if (matched) {
      return matched;
    }
    var uaMatch = regex.exec(ua);
    return !!uaMatch && [browser, uaMatch];
  }, false);
}
function parseUserAgent(ua) {
  var matchedRule = matchUserAgent(ua);
  if (!matchedRule) {
    return null;
  }
  var name2 = matchedRule[0], match = matchedRule[1];
  if (name2 === "searchbot") {
    return new BotInfo2();
  }
  var versionParts = match[1] && match[1].split(".").join("_").split("_").slice(0, 3);
  if (versionParts) {
    if (versionParts.length < REQUIRED_VERSION_PARTS) {
      versionParts = __spreadArray(__spreadArray([], versionParts, true), createVersionParts(REQUIRED_VERSION_PARTS - versionParts.length), true);
    }
  } else {
    versionParts = [];
  }
  var version2 = versionParts.join(".");
  var os3 = detectOS(ua);
  var searchBotMatch = SEARCHBOT_OS_REGEX.exec(ua);
  if (searchBotMatch && searchBotMatch[1]) {
    return new SearchBotDeviceInfo2(name2, version2, os3, searchBotMatch[1]);
  }
  return new BrowserInfo2(name2, version2, os3);
}
function detectOS(ua) {
  for (var ii = 0, count = operatingSystemRules.length; ii < count; ii++) {
    var _a = operatingSystemRules[ii], os3 = _a[0], regex = _a[1];
    var match = regex.exec(ua);
    if (match) {
      return os3;
    }
  }
  return null;
}
function getNodeVersion() {
  var isNode2 = typeof process !== "undefined" && process.version;
  return isNode2 ? new NodeInfo2(process.version.slice(1)) : null;
}
function createVersionParts(count) {
  var output = [];
  for (var ii = 0; ii < count; ii++) {
    output.push("0");
  }
  return output;
}

// node_modules/@walletconnect/core/node_modules/@walletconnect/utils/dist/index.es.js
var import_time3 = __toESM(require_cjs());
var import_window_getters2 = __toESM(require_cjs7());
var import_window_metadata2 = __toESM(require_cjs8());
var C2 = __toESM(require_query_string2());
var W = "base10";
var f = "base16";
var K = "base64pad";
var k = "utf8";
var Y = 0;
var A = 1;
var Rn = 0;
var Oe = 1;
var J = 12;
var Q = 32;
function wn() {
  const e = ue2.generateKeyPair();
  return { privateKey: toString2(e.secretKey, f), publicKey: toString2(e.publicKey, f) };
}
function Un() {
  const e = (0, import_random3.randomBytes)(Q);
  return toString2(e, f);
}
function An(e, n2) {
  const t = ue2.sharedKey(fromString2(e, f), fromString2(n2, f)), r = new import_hkdf2.HKDF(import_sha2562.SHA256, t).expand(Q);
  return toString2(r, f);
}
function _n(e) {
  const n2 = (0, import_sha2562.hash)(fromString2(e, f));
  return toString2(n2, f);
}
function $n(e) {
  const n2 = (0, import_sha2562.hash)(fromString2(e, k));
  return toString2(n2, f);
}
function Se(e) {
  return fromString2(`${e}`, W);
}
function $(e) {
  return Number(toString2(e, W));
}
function jn(e) {
  const n2 = Se(typeof e.type < "u" ? e.type : Y);
  if ($(n2) === A && typeof e.senderPublicKey > "u")
    throw new Error("Missing sender public key for type 1 envelope");
  const t = typeof e.senderPublicKey < "u" ? fromString2(e.senderPublicKey, f) : void 0, r = typeof e.iv < "u" ? fromString2(e.iv, f) : (0, import_random3.randomBytes)(J), o = new import_chacha20poly13052.ChaCha20Poly1305(fromString2(e.symKey, f)).seal(r, fromString2(e.message, k));
  return Pe({ type: n2, sealed: o, iv: r, senderPublicKey: t });
}
function Cn(e) {
  const n2 = new import_chacha20poly13052.ChaCha20Poly1305(fromString2(e.symKey, f)), { sealed: t, iv: r } = Z(e.encoded), o = n2.open(r, t);
  if (o === null)
    throw new Error("Failed to decrypt");
  return toString2(o, k);
}
function Pe(e) {
  if ($(e.type) === A) {
    if (typeof e.senderPublicKey > "u")
      throw new Error("Missing sender public key for type 1 envelope");
    return toString2(concat([e.type, e.senderPublicKey, e.iv, e.sealed]), K);
  }
  return toString2(concat([e.type, e.iv, e.sealed]), K);
}
function Z(e) {
  const n2 = fromString2(e, K), t = n2.slice(Rn, Oe), r = Oe;
  if ($(t) === A) {
    const l = r + Q, d2 = l + J, c3 = n2.slice(r, l), u4 = n2.slice(l, d2), a2 = n2.slice(d2);
    return { type: t, sealed: a2, iv: u4, senderPublicKey: c3 };
  }
  const o = r + J, s = n2.slice(r, o), i3 = n2.slice(o);
  return { type: t, sealed: i3, iv: s };
}
function Dn(e, n2) {
  const t = Z(e);
  return Ie({ type: $(t.type), senderPublicKey: typeof t.senderPublicKey < "u" ? toString2(t.senderPublicKey, f) : void 0, receiverPublicKey: n2 == null ? void 0 : n2.receiverPublicKey });
}
function Ie(e) {
  const n2 = (e == null ? void 0 : e.type) || Y;
  if (n2 === A) {
    if (typeof (e == null ? void 0 : e.senderPublicKey) > "u")
      throw new Error("missing sender public key");
    if (typeof (e == null ? void 0 : e.receiverPublicKey) > "u")
      throw new Error("missing receiver public key");
  }
  return { type: n2, senderPublicKey: e == null ? void 0 : e.senderPublicKey, receiverPublicKey: e == null ? void 0 : e.receiverPublicKey };
}
function Vn(e) {
  return e.type === A && typeof e.senderPublicKey == "string" && typeof e.receiverPublicKey == "string";
}
var Mn = Object.defineProperty;
var Te = Object.getOwnPropertySymbols;
var Kn = Object.prototype.hasOwnProperty;
var kn = Object.prototype.propertyIsEnumerable;
var Re = (e, n2, t) => n2 in e ? Mn(e, n2, { enumerable: true, configurable: true, writable: true, value: t }) : e[n2] = t;
var we = (e, n2) => {
  for (var t in n2 || (n2 = {}))
    Kn.call(n2, t) && Re(e, t, n2[t]);
  if (Te)
    for (var t of Te(n2))
      kn.call(n2, t) && Re(e, t, n2[t]);
  return e;
};
var Ue = "ReactNative";
var b = { reactNative: "react-native", node: "node", browser: "browser", unknown: "unknown" };
var _e = "js";
function ee() {
  return typeof process < "u" && typeof process.versions < "u" && typeof process.versions.node < "u";
}
function $e() {
  return !(0, import_window_getters2.getDocument)() && !!(0, import_window_getters2.getNavigator)() && navigator.product === Ue;
}
function je() {
  return !ee() && !!(0, import_window_getters2.getNavigator)();
}
function x() {
  return $e() ? b.reactNative : ee() ? b.node : je() ? b.browser : b.unknown;
}
function Ce(e, n2) {
  let t = C2.parse(e);
  return t = we(we({}, t), n2), e = C2.stringify(t), e;
}
function De() {
  if (typeof (global == null ? void 0 : global.Platform) < "u") {
    const { OS: t, Version: r } = global.Platform;
    return [t, r].join("-");
  }
  const e = detect2();
  if (e === null)
    return "unknown";
  const n2 = e.os ? e.os.replace(" ", "").toLowerCase() : "unknown";
  return e.type === "browser" ? [n2, e.name, e.version].join("-") : [n2, e.version].join("-");
}
function Ve() {
  var e;
  const n2 = x();
  return n2 === b.browser ? [n2, ((e = (0, import_window_getters2.getLocation)()) == null ? void 0 : e.host) || "unknown"].join(":") : n2;
}
function Me(e, n2, t) {
  const r = De(), o = Ve();
  return [[e, n2].join("-"), [_e, t].join("-"), r, o].join("/");
}
function qn({ protocol: e, version: n2, relayUrl: t, sdkVersion: r, auth: o, projectId: s, useOnCloseEvent: i3 }) {
  const l = t.split("?"), d2 = Me(e, n2, r), c3 = { auth: o, ua: d2, projectId: s, useOnCloseEvent: i3 || void 0 }, u4 = Ce(l[1] || "", c3);
  return l[0] + "?" + u4;
}
function Wn(e) {
  return Object.fromEntries(e.entries());
}
function Yn(e) {
  return new Map(Object.entries(e));
}
function Xn(e = import_time3.FIVE_MINUTES, n2) {
  const t = (0, import_time3.toMiliseconds)(e || import_time3.FIVE_MINUTES);
  let r, o, s;
  return { resolve: (i3) => {
    s && r && (clearTimeout(s), r(i3));
  }, reject: (i3) => {
    s && o && (clearTimeout(s), o(i3));
  }, done: () => new Promise((i3, l) => {
    s = setTimeout(() => {
      l(new Error(n2));
    }, t), r = i3, o = l;
  }) };
}
function et(e, n2, t) {
  return new Promise(async (r, o) => {
    const s = setTimeout(() => o(new Error(t)), n2);
    try {
      const i3 = await e;
      r(i3);
    } catch (i3) {
      o(i3);
    }
    clearTimeout(s);
  });
}
function ne(e, n2) {
  if (typeof n2 == "string" && n2.startsWith(`${e}:`))
    return n2;
  if (e.toLowerCase() === "topic") {
    if (typeof n2 != "string")
      throw new Error('Value must be "string" for expirer target type: topic');
    return `topic:${n2}`;
  } else if (e.toLowerCase() === "id") {
    if (typeof n2 != "number")
      throw new Error('Value must be "number" for expirer target type: id');
    return `id:${n2}`;
  }
  throw new Error(`Unknown expirer target type: ${e}`);
}
function nt(e) {
  return ne("topic", e);
}
function tt(e) {
  return ne("id", e);
}
function rt(e) {
  const [n2, t] = e.split(":"), r = { id: void 0, topic: void 0 };
  if (n2 === "topic" && typeof t == "string")
    r.topic = t;
  else if (n2 === "id" && Number.isInteger(Number(t)))
    r.id = Number(t);
  else
    throw new Error(`Invalid target, expected id:number or topic:string, got ${n2}:${t}`);
  return r;
}
function ot(e, n2) {
  return (0, import_time3.fromMiliseconds)((n2 || Date.now()) + (0, import_time3.toMiliseconds)(e));
}
function st(e) {
  return Date.now() >= (0, import_time3.toMiliseconds)(e);
}
function it(e, n2) {
  return `${e}${n2 ? `:${n2}` : ""}`;
}
var xe = "irn";
function at(e) {
  return (e == null ? void 0 : e.relay) || { protocol: xe };
}
function ut(e) {
  const n2 = RELAY_JSONRPC[e];
  if (typeof n2 > "u")
    throw new Error(`Relay Protocol not supported: ${e}`);
  return n2;
}
var lt = Object.defineProperty;
var Fe = Object.getOwnPropertySymbols;
var dt = Object.prototype.hasOwnProperty;
var ft = Object.prototype.propertyIsEnumerable;
var He = (e, n2, t) => n2 in e ? lt(e, n2, { enumerable: true, configurable: true, writable: true, value: t }) : e[n2] = t;
var pt = (e, n2) => {
  for (var t in n2 || (n2 = {}))
    dt.call(n2, t) && He(e, t, n2[t]);
  if (Fe)
    for (var t of Fe(n2))
      ft.call(n2, t) && He(e, t, n2[t]);
  return e;
};
function qe(e, n2 = "-") {
  const t = {}, r = "relay" + n2;
  return Object.keys(e).forEach((o) => {
    if (o.startsWith(r)) {
      const s = o.replace(r, ""), i3 = e[o];
      t[s] = i3;
    }
  }), t;
}
function mt(e) {
  const n2 = e.indexOf(":"), t = e.indexOf("?") !== -1 ? e.indexOf("?") : void 0, r = e.substring(0, n2), o = e.substring(n2 + 1, t).split("@"), s = typeof t < "u" ? e.substring(t) : "", i3 = C2.parse(s);
  return { protocol: r, topic: ze(o[0]), version: parseInt(o[1], 10), symKey: i3.symKey, relay: qe(i3) };
}
function ze(e) {
  return e.startsWith("//") ? e.substring(2) : e;
}
function Ge(e, n2 = "-") {
  const t = "relay", r = {};
  return Object.keys(e).forEach((o) => {
    const s = t + n2 + o;
    e[o] && (r[s] = e[o]);
  }), r;
}
function yt(e) {
  return `${e.protocol}:${e.topic}@${e.version}?` + C2.stringify(pt({ symKey: e.symKey }, Ge(e.relay)));
}
var It2 = { INVALID_METHOD: { message: "Invalid method.", code: 1001 }, INVALID_EVENT: { message: "Invalid event.", code: 1002 }, INVALID_UPDATE_REQUEST: { message: "Invalid update request.", code: 1003 }, INVALID_EXTEND_REQUEST: { message: "Invalid extend request.", code: 1004 }, INVALID_SESSION_SETTLE_REQUEST: { message: "Invalid session settle request.", code: 1005 }, UNAUTHORIZED_METHOD: { message: "Unauthorized method.", code: 3001 }, UNAUTHORIZED_EVENT: { message: "Unauthorized event.", code: 3002 }, UNAUTHORIZED_UPDATE_REQUEST: { message: "Unauthorized update request.", code: 3003 }, UNAUTHORIZED_EXTEND_REQUEST: { message: "Unauthorized extend request.", code: 3004 }, USER_REJECTED: { message: "User rejected.", code: 5e3 }, USER_REJECTED_CHAINS: { message: "User rejected chains.", code: 5001 }, USER_REJECTED_METHODS: { message: "User rejected methods.", code: 5002 }, USER_REJECTED_EVENTS: { message: "User rejected events.", code: 5003 }, UNSUPPORTED_CHAINS: { message: "Unsupported chains.", code: 5100 }, UNSUPPORTED_METHODS: { message: "Unsupported methods.", code: 5101 }, UNSUPPORTED_EVENTS: { message: "Unsupported events.", code: 5102 }, UNSUPPORTED_ACCOUNTS: { message: "Unsupported accounts.", code: 5103 }, UNSUPPORTED_NAMESPACE_KEY: { message: "Unsupported namespace key.", code: 5104 }, USER_DISCONNECTED: { message: "User disconnected.", code: 6e3 }, SESSION_SETTLEMENT_FAILED: { message: "Session settlement failed.", code: 7e3 }, WC_METHOD_UNSUPPORTED: { message: "Unsupported wc_ method.", code: 10001 } };
var Tt = { NOT_INITIALIZED: { message: "Not initialized.", code: 1 }, NO_MATCHING_KEY: { message: "No matching key.", code: 2 }, RESTORE_WILL_OVERRIDE: { message: "Restore will override.", code: 3 }, RESUBSCRIBED: { message: "Resubscribed.", code: 4 }, MISSING_OR_INVALID: { message: "Missing or invalid.", code: 5 }, EXPIRED: { message: "Expired.", code: 6 }, UNKNOWN_TYPE: { message: "Unknown type.", code: 7 }, MISMATCHED_TOPIC: { message: "Mismatched topic.", code: 8 }, NON_CONFORMING_NAMESPACES: { message: "Non conforming namespaces.", code: 9 } };
function N(e, n2) {
  const { message: t, code: r } = Tt[e];
  return { message: n2 ? `${t} ${n2}` : t, code: r };
}
function w2(e, n2) {
  const { message: t, code: r } = It2[e];
  return { message: n2 ? `${t} ${n2}` : t, code: r };
}
function j2(e, n2) {
  return Array.isArray(e) ? typeof n2 < "u" && e.length ? e.every(n2) : true : false;
}
function P(e) {
  return typeof e > "u";
}
function m(e, n2) {
  return n2 && P(e) ? true : typeof e == "string" && !!e.trim().length;
}
function wt(e) {
  if (m(e, false))
    try {
      return typeof new URL(e) < "u";
    } catch {
      return false;
    }
  return false;
}
function Ut(e) {
  var n2;
  return (n2 = e == null ? void 0 : e.proposer) == null ? void 0 : n2.publicKey;
}
function At(e) {
  return e == null ? void 0 : e.topic;
}
function Dt(e) {
  return typeof e < "u" && typeof e !== null;
}

// node_modules/@walletconnect/core/dist/index.es.js
var import_time4 = __toESM(require_cjs());

// node_modules/@walletconnect/jsonrpc-provider/dist/esm/index.js
init_define_process_env();

// node_modules/@walletconnect/jsonrpc-provider/dist/esm/provider.js
init_define_process_env();
var import_events3 = __toESM(require_events());

// node_modules/@walletconnect/jsonrpc-utils/dist/esm/index.js
var esm_exports2 = {};
__export(esm_exports2, {
  DEFAULT_ERROR: () => DEFAULT_ERROR,
  IBaseJsonRpcProvider: () => IBaseJsonRpcProvider,
  IEvents: () => IEvents2,
  IJsonRpcConnection: () => IJsonRpcConnection,
  IJsonRpcProvider: () => IJsonRpcProvider,
  INTERNAL_ERROR: () => INTERNAL_ERROR,
  INVALID_PARAMS: () => INVALID_PARAMS,
  INVALID_REQUEST: () => INVALID_REQUEST,
  METHOD_NOT_FOUND: () => METHOD_NOT_FOUND,
  PARSE_ERROR: () => PARSE_ERROR,
  RESERVED_ERROR_CODES: () => RESERVED_ERROR_CODES,
  SERVER_ERROR: () => SERVER_ERROR,
  SERVER_ERROR_CODE_RANGE: () => SERVER_ERROR_CODE_RANGE,
  STANDARD_ERROR_MAP: () => STANDARD_ERROR_MAP,
  formatErrorMessage: () => formatErrorMessage,
  formatJsonRpcError: () => formatJsonRpcError,
  formatJsonRpcRequest: () => formatJsonRpcRequest,
  formatJsonRpcResult: () => formatJsonRpcResult,
  getBigIntRpcId: () => getBigIntRpcId,
  getError: () => getError,
  getErrorByCode: () => getErrorByCode,
  isHttpUrl: () => isHttpUrl,
  isJsonRpcError: () => isJsonRpcError,
  isJsonRpcPayload: () => isJsonRpcPayload,
  isJsonRpcRequest: () => isJsonRpcRequest,
  isJsonRpcResponse: () => isJsonRpcResponse,
  isJsonRpcResult: () => isJsonRpcResult,
  isJsonRpcValidationInvalid: () => isJsonRpcValidationInvalid,
  isLocalhostUrl: () => isLocalhostUrl,
  isNodeJs: () => isNodeJs,
  isReservedErrorCode: () => isReservedErrorCode,
  isServerErrorCode: () => isServerErrorCode,
  isValidDefaultRoute: () => isValidDefaultRoute,
  isValidErrorCode: () => isValidErrorCode,
  isValidLeadingWildcardRoute: () => isValidLeadingWildcardRoute,
  isValidRoute: () => isValidRoute,
  isValidTrailingWildcardRoute: () => isValidTrailingWildcardRoute,
  isValidWildcardRoute: () => isValidWildcardRoute,
  isWsUrl: () => isWsUrl,
  parseConnectionError: () => parseConnectionError,
  payloadId: () => payloadId,
  validateJsonRpcError: () => validateJsonRpcError
});
init_define_process_env();

// node_modules/@walletconnect/jsonrpc-utils/dist/esm/constants.js
init_define_process_env();
var PARSE_ERROR = "PARSE_ERROR";
var INVALID_REQUEST = "INVALID_REQUEST";
var METHOD_NOT_FOUND = "METHOD_NOT_FOUND";
var INVALID_PARAMS = "INVALID_PARAMS";
var INTERNAL_ERROR = "INTERNAL_ERROR";
var SERVER_ERROR = "SERVER_ERROR";
var RESERVED_ERROR_CODES = [-32700, -32600, -32601, -32602, -32603];
var SERVER_ERROR_CODE_RANGE = [-32e3, -32099];
var STANDARD_ERROR_MAP = {
  [PARSE_ERROR]: { code: -32700, message: "Parse error" },
  [INVALID_REQUEST]: { code: -32600, message: "Invalid Request" },
  [METHOD_NOT_FOUND]: { code: -32601, message: "Method not found" },
  [INVALID_PARAMS]: { code: -32602, message: "Invalid params" },
  [INTERNAL_ERROR]: { code: -32603, message: "Internal error" },
  [SERVER_ERROR]: { code: -32e3, message: "Server error" }
};
var DEFAULT_ERROR = SERVER_ERROR;

// node_modules/@walletconnect/jsonrpc-utils/dist/esm/error.js
init_define_process_env();
function isServerErrorCode(code2) {
  return code2 <= SERVER_ERROR_CODE_RANGE[0] && code2 >= SERVER_ERROR_CODE_RANGE[1];
}
function isReservedErrorCode(code2) {
  return RESERVED_ERROR_CODES.includes(code2);
}
function isValidErrorCode(code2) {
  return typeof code2 === "number";
}
function getError(type) {
  if (!Object.keys(STANDARD_ERROR_MAP).includes(type)) {
    return STANDARD_ERROR_MAP[DEFAULT_ERROR];
  }
  return STANDARD_ERROR_MAP[type];
}
function getErrorByCode(code2) {
  const match = Object.values(STANDARD_ERROR_MAP).find((e) => e.code === code2);
  if (!match) {
    return STANDARD_ERROR_MAP[DEFAULT_ERROR];
  }
  return match;
}
function validateJsonRpcError(response) {
  if (typeof response.error.code === "undefined") {
    return { valid: false, error: "Missing code for JSON-RPC error" };
  }
  if (typeof response.error.message === "undefined") {
    return { valid: false, error: "Missing message for JSON-RPC error" };
  }
  if (!isValidErrorCode(response.error.code)) {
    return {
      valid: false,
      error: `Invalid error code type for JSON-RPC: ${response.error.code}`
    };
  }
  if (isReservedErrorCode(response.error.code)) {
    const error = getErrorByCode(response.error.code);
    if (error.message !== STANDARD_ERROR_MAP[DEFAULT_ERROR].message && response.error.message === error.message) {
      return {
        valid: false,
        error: `Invalid error code message for JSON-RPC: ${response.error.code}`
      };
    }
  }
  return { valid: true };
}
function parseConnectionError(e, url, type) {
  return e.message.includes("getaddrinfo ENOTFOUND") || e.message.includes("connect ECONNREFUSED") ? new Error(`Unavailable ${type} RPC url at ${url}`) : e;
}

// node_modules/@walletconnect/jsonrpc-utils/dist/esm/env.js
var env_exports = {};
__export(env_exports, {
  isNodeJs: () => isNodeJs
});
init_define_process_env();
var import_environment = __toESM(require_cjs9());
__reExport(env_exports, __toESM(require_cjs9()));
var isNodeJs = import_environment.isNode;

// node_modules/@walletconnect/jsonrpc-utils/dist/esm/index.js
__reExport(esm_exports2, env_exports);

// node_modules/@walletconnect/jsonrpc-utils/dist/esm/format.js
init_define_process_env();
function payloadId(entropy = 3) {
  const date = Date.now() * Math.pow(10, entropy);
  const extra = Math.floor(Math.random() * Math.pow(10, entropy));
  return date + extra;
}
function getBigIntRpcId(entropy = 6) {
  return BigInt(payloadId(entropy));
}
function formatJsonRpcRequest(method, params, id) {
  return {
    id: id || payloadId(),
    jsonrpc: "2.0",
    method,
    params
  };
}
function formatJsonRpcResult(id, result) {
  return {
    id,
    jsonrpc: "2.0",
    result
  };
}
function formatJsonRpcError(id, error, data) {
  return {
    id,
    jsonrpc: "2.0",
    error: formatErrorMessage(error, data)
  };
}
function formatErrorMessage(error, data) {
  if (typeof error === "undefined") {
    return getError(INTERNAL_ERROR);
  }
  if (typeof error === "string") {
    error = Object.assign(Object.assign({}, getError(SERVER_ERROR)), { message: error });
  }
  if (typeof data !== "undefined") {
    error.data = data;
  }
  if (isReservedErrorCode(error.code)) {
    error = getErrorByCode(error.code);
  }
  return error;
}

// node_modules/@walletconnect/jsonrpc-utils/dist/esm/routing.js
init_define_process_env();
function isValidRoute(route) {
  if (route.includes("*")) {
    return isValidWildcardRoute(route);
  }
  if (/\W/g.test(route)) {
    return false;
  }
  return true;
}
function isValidDefaultRoute(route) {
  return route === "*";
}
function isValidWildcardRoute(route) {
  if (isValidDefaultRoute(route)) {
    return true;
  }
  if (!route.includes("*")) {
    return false;
  }
  if (route.split("*").length !== 2) {
    return false;
  }
  if (route.split("*").filter((x3) => x3.trim() === "").length !== 1) {
    return false;
  }
  return true;
}
function isValidLeadingWildcardRoute(route) {
  return !isValidDefaultRoute(route) && isValidWildcardRoute(route) && !route.split("*")[0].trim();
}
function isValidTrailingWildcardRoute(route) {
  return !isValidDefaultRoute(route) && isValidWildcardRoute(route) && !route.split("*")[1].trim();
}

// node_modules/@walletconnect/jsonrpc-utils/dist/esm/types.js
init_define_process_env();

// node_modules/@walletconnect/jsonrpc-types/dist/esm/index.js
init_define_process_env();

// node_modules/@walletconnect/jsonrpc-types/dist/esm/jsonrpc.js
init_define_process_env();

// node_modules/@walletconnect/jsonrpc-types/dist/esm/misc.js
init_define_process_env();
var IEvents2 = class {
};

// node_modules/@walletconnect/jsonrpc-types/dist/esm/provider.js
init_define_process_env();
var IJsonRpcConnection = class extends IEvents2 {
  constructor(opts) {
    super();
  }
};
var IBaseJsonRpcProvider = class extends IEvents2 {
  constructor() {
    super();
  }
};
var IJsonRpcProvider = class extends IBaseJsonRpcProvider {
  constructor(connection) {
    super();
  }
};

// node_modules/@walletconnect/jsonrpc-types/dist/esm/validator.js
init_define_process_env();

// node_modules/@walletconnect/jsonrpc-utils/dist/esm/url.js
init_define_process_env();
var HTTP_REGEX = "^https?:";
var WS_REGEX = "^wss?:";
function getUrlProtocol(url) {
  const matches = url.match(new RegExp(/^\w+:/, "gi"));
  if (!matches || !matches.length)
    return;
  return matches[0];
}
function matchRegexProtocol(url, regex) {
  const protocol = getUrlProtocol(url);
  if (typeof protocol === "undefined")
    return false;
  return new RegExp(regex).test(protocol);
}
function isHttpUrl(url) {
  return matchRegexProtocol(url, HTTP_REGEX);
}
function isWsUrl(url) {
  return matchRegexProtocol(url, WS_REGEX);
}
function isLocalhostUrl(url) {
  return new RegExp("wss?://localhost(:d{2,5})?").test(url);
}

// node_modules/@walletconnect/jsonrpc-utils/dist/esm/validators.js
init_define_process_env();
function isJsonRpcPayload(payload) {
  return typeof payload === "object" && "id" in payload && "jsonrpc" in payload && payload.jsonrpc === "2.0";
}
function isJsonRpcRequest(payload) {
  return isJsonRpcPayload(payload) && "method" in payload;
}
function isJsonRpcResponse(payload) {
  return isJsonRpcPayload(payload) && (isJsonRpcResult(payload) || isJsonRpcError(payload));
}
function isJsonRpcResult(payload) {
  return "result" in payload;
}
function isJsonRpcError(payload) {
  return "error" in payload;
}
function isJsonRpcValidationInvalid(validation) {
  return "error" in validation && validation.valid === false;
}

// node_modules/@walletconnect/jsonrpc-provider/dist/esm/provider.js
var JsonRpcProvider = class extends IJsonRpcProvider {
  constructor(connection) {
    super(connection);
    this.events = new import_events3.EventEmitter();
    this.hasRegisteredEventListeners = false;
    this.connection = this.setConnection(connection);
    if (this.connection.connected) {
      this.registerEventListeners();
    }
  }
  async connect(connection = this.connection) {
    await this.open(connection);
  }
  async disconnect() {
    await this.close();
  }
  on(event, listener) {
    this.events.on(event, listener);
  }
  once(event, listener) {
    this.events.once(event, listener);
  }
  off(event, listener) {
    this.events.off(event, listener);
  }
  removeListener(event, listener) {
    this.events.removeListener(event, listener);
  }
  async request(request, context) {
    return this.requestStrict(formatJsonRpcRequest(request.method, request.params || [], request.id || getBigIntRpcId().toString()), context);
  }
  async requestStrict(request, context) {
    return new Promise(async (resolve, reject) => {
      if (!this.connection.connected) {
        try {
          await this.open();
        } catch (e) {
          reject(e);
        }
      }
      this.events.on(`${request.id}`, (response) => {
        if (isJsonRpcError(response)) {
          reject(response.error);
        } else {
          resolve(response.result);
        }
      });
      try {
        await this.connection.send(request, context);
      } catch (e) {
        reject(e);
      }
    });
  }
  setConnection(connection = this.connection) {
    return connection;
  }
  onPayload(payload) {
    this.events.emit("payload", payload);
    if (isJsonRpcResponse(payload)) {
      this.events.emit(`${payload.id}`, payload);
    } else {
      this.events.emit("message", {
        type: payload.method,
        data: payload.params
      });
    }
  }
  onClose(event) {
    if (event && event.code === 3e3) {
      this.events.emit("error", new Error(`WebSocket connection closed abnormally with code: ${event.code} ${event.reason ? `(${event.reason})` : ""}`));
    }
    this.events.emit("disconnect");
  }
  async open(connection = this.connection) {
    if (this.connection === connection && this.connection.connected)
      return;
    if (this.connection.connected)
      this.close();
    if (typeof connection === "string") {
      await this.connection.open(connection);
      connection = this.connection;
    }
    this.connection = this.setConnection(connection);
    await this.connection.open();
    this.registerEventListeners();
    this.events.emit("connect");
  }
  async close() {
    await this.connection.close();
  }
  registerEventListeners() {
    if (this.hasRegisteredEventListeners)
      return;
    this.connection.on("payload", (payload) => this.onPayload(payload));
    this.connection.on("close", (event) => this.onClose(event));
    this.connection.on("error", (error) => this.events.emit("error", error));
    this.connection.on("register_error", (error) => this.onClose());
    this.hasRegisteredEventListeners = true;
  }
};

// node_modules/@walletconnect/jsonrpc-ws-connection/dist/esm/index.js
init_define_process_env();

// node_modules/@walletconnect/jsonrpc-ws-connection/dist/esm/ws.js
init_define_process_env();
var import_events4 = __toESM(require_events());
var EVENT_EMITTER_MAX_LISTENERS_DEFAULT = 10;
var resolveWebSocketImplementation = () => {
  if (typeof global !== "undefined" && typeof global.WebSocket !== "undefined") {
    return global.WebSocket;
  }
  if (typeof window !== "undefined" && typeof window.WebSocket !== "undefined") {
    return window.WebSocket;
  }
  return require_browser4();
};
var isBrowser = () => typeof window !== "undefined";
var WS = resolveWebSocketImplementation();
var WsConnection = class {
  constructor(url) {
    this.url = url;
    this.events = new import_events4.EventEmitter();
    this.registering = false;
    if (!isWsUrl(url)) {
      throw new Error(`Provided URL is not compatible with WebSocket connection: ${url}`);
    }
    this.url = url;
  }
  get connected() {
    return typeof this.socket !== "undefined";
  }
  get connecting() {
    return this.registering;
  }
  on(event, listener) {
    this.events.on(event, listener);
  }
  once(event, listener) {
    this.events.once(event, listener);
  }
  off(event, listener) {
    this.events.off(event, listener);
  }
  removeListener(event, listener) {
    this.events.removeListener(event, listener);
  }
  async open(url = this.url) {
    await this.register(url);
  }
  async close() {
    return new Promise((resolve, reject) => {
      if (typeof this.socket === "undefined") {
        reject(new Error("Connection already closed"));
        return;
      }
      this.socket.onclose = (event) => {
        this.onClose(event);
        resolve();
      };
      this.socket.close();
    });
  }
  async send(payload, context) {
    if (typeof this.socket === "undefined") {
      this.socket = await this.register();
    }
    try {
      this.socket.send(safeJsonStringify(payload));
    } catch (e) {
      this.onError(payload.id, e);
    }
  }
  register(url = this.url) {
    if (!isWsUrl(url)) {
      throw new Error(`Provided URL is not compatible with WebSocket connection: ${url}`);
    }
    if (this.registering) {
      const currentMaxListeners = this.events.getMaxListeners();
      if (this.events.listenerCount("register_error") >= currentMaxListeners || this.events.listenerCount("open") >= currentMaxListeners) {
        this.events.setMaxListeners(currentMaxListeners + 1);
      }
      return new Promise((resolve, reject) => {
        this.events.once("register_error", (error) => {
          this.resetMaxListeners();
          reject(error);
        });
        this.events.once("open", () => {
          this.resetMaxListeners();
          if (typeof this.socket === "undefined") {
            return reject(new Error("WebSocket connection is missing or invalid"));
          }
          resolve(this.socket);
        });
      });
    }
    this.url = url;
    this.registering = true;
    return new Promise((resolve, reject) => {
      const opts = !(0, esm_exports2.isReactNative)() ? { rejectUnauthorized: !isLocalhostUrl(url) } : void 0;
      const socket = new WS(url, [], opts);
      if (isBrowser()) {
        socket.onerror = (event) => {
          const errorEvent = event;
          reject(this.emitError(errorEvent.error));
        };
      } else {
        socket.on("error", (errorEvent) => {
          reject(this.emitError(errorEvent));
        });
      }
      socket.onopen = () => {
        this.onOpen(socket);
        resolve(socket);
      };
    });
  }
  onOpen(socket) {
    socket.onmessage = (event) => this.onPayload(event);
    socket.onclose = (event) => this.onClose(event);
    this.socket = socket;
    this.registering = false;
    this.events.emit("open");
  }
  onClose(event) {
    this.socket = void 0;
    this.registering = false;
    this.events.emit("close", event);
  }
  onPayload(e) {
    if (typeof e.data === "undefined")
      return;
    const payload = typeof e.data === "string" ? safeJsonParse(e.data) : e.data;
    this.events.emit("payload", payload);
  }
  onError(id, e) {
    const error = this.parseError(e);
    const message = error.message || error.toString();
    const payload = formatJsonRpcError(id, message);
    this.events.emit("payload", payload);
  }
  parseError(e, url = this.url) {
    return parseConnectionError(e, url, "WS");
  }
  resetMaxListeners() {
    if (this.events.getMaxListeners() > EVENT_EMITTER_MAX_LISTENERS_DEFAULT) {
      this.events.setMaxListeners(EVENT_EMITTER_MAX_LISTENERS_DEFAULT);
    }
  }
  emitError(errorEvent) {
    const error = this.parseError(new Error((errorEvent === null || errorEvent === void 0 ? void 0 : errorEvent.message) || `WebSocket connection failed for URL: ${this.url}`));
    this.events.emit("register_error", error);
    return error;
  }
};
var ws_default = WsConnection;

// node_modules/@walletconnect/jsonrpc-ws-connection/dist/esm/index.js
var esm_default = ws_default;

// node_modules/@walletconnect/core/dist/index.es.js
var import_lodash = __toESM(require_lodash());
function Li(r, e) {
  if (r.length >= 255)
    throw new TypeError("Alphabet too long");
  for (var t = new Uint8Array(256), i3 = 0; i3 < t.length; i3++)
    t[i3] = 255;
  for (var s = 0; s < r.length; s++) {
    var n2 = r.charAt(s), a2 = n2.charCodeAt(0);
    if (t[a2] !== 255)
      throw new TypeError(n2 + " is ambiguous");
    t[a2] = s;
  }
  var o = r.length, h2 = r.charAt(0), d2 = Math.log(o) / Math.log(256), l = Math.log(256) / Math.log(o);
  function D2(u4) {
    if (u4 instanceof Uint8Array || (ArrayBuffer.isView(u4) ? u4 = new Uint8Array(u4.buffer, u4.byteOffset, u4.byteLength) : Array.isArray(u4) && (u4 = Uint8Array.from(u4))), !(u4 instanceof Uint8Array))
      throw new TypeError("Expected Uint8Array");
    if (u4.length === 0)
      return "";
    for (var y3 = 0, A3 = 0, v = 0, R3 = u4.length; v !== R3 && u4[v] === 0; )
      v++, y3++;
    for (var T = (R3 - v) * l + 1 >>> 0, m4 = new Uint8Array(T); v !== R3; ) {
      for (var S3 = u4[v], x3 = 0, I2 = T - 1; (S3 !== 0 || x3 < A3) && I2 !== -1; I2--, x3++)
        S3 += 256 * m4[I2] >>> 0, m4[I2] = S3 % o >>> 0, S3 = S3 / o >>> 0;
      if (S3 !== 0)
        throw new Error("Non-zero carry");
      A3 = x3, v++;
    }
    for (var P3 = T - A3; P3 !== T && m4[P3] === 0; )
      P3++;
    for (var B = h2.repeat(y3); P3 < T; ++P3)
      B += r.charAt(m4[P3]);
    return B;
  }
  function b5(u4) {
    if (typeof u4 != "string")
      throw new TypeError("Expected String");
    if (u4.length === 0)
      return new Uint8Array();
    var y3 = 0;
    if (u4[y3] !== " ") {
      for (var A3 = 0, v = 0; u4[y3] === h2; )
        A3++, y3++;
      for (var R3 = (u4.length - y3) * d2 + 1 >>> 0, T = new Uint8Array(R3); u4[y3]; ) {
        var m4 = t[u4.charCodeAt(y3)];
        if (m4 === 255)
          return;
        for (var S3 = 0, x3 = R3 - 1; (m4 !== 0 || S3 < v) && x3 !== -1; x3--, S3++)
          m4 += o * T[x3] >>> 0, T[x3] = m4 % 256 >>> 0, m4 = m4 / 256 >>> 0;
        if (m4 !== 0)
          throw new Error("Non-zero carry");
        v = S3, y3++;
      }
      if (u4[y3] !== " ") {
        for (var I2 = R3 - v; I2 !== R3 && T[I2] === 0; )
          I2++;
        for (var P3 = new Uint8Array(A3 + (R3 - I2)), B = A3; I2 !== R3; )
          P3[B++] = T[I2++];
        return P3;
      }
    }
  }
  function k3(u4) {
    var y3 = b5(u4);
    if (y3)
      return y3;
    throw new Error(`Non-${e} character`);
  }
  return { encode: D2, decodeUnsafe: b5, decode: k3 };
}
var Fi = Li;
var $i = Fi;
var Pe2 = (r) => {
  if (r instanceof Uint8Array && r.constructor.name === "Uint8Array")
    return r;
  if (r instanceof ArrayBuffer)
    return new Uint8Array(r);
  if (ArrayBuffer.isView(r))
    return new Uint8Array(r.buffer, r.byteOffset, r.byteLength);
  throw new Error("Unknown type, must be binary type");
};
var Mi = (r) => new TextEncoder().encode(r);
var Ki = (r) => new TextDecoder().decode(r);
var ki = class {
  constructor(e, t, i3) {
    this.name = e, this.prefix = t, this.baseEncode = i3;
  }
  encode(e) {
    if (e instanceof Uint8Array)
      return `${this.prefix}${this.baseEncode(e)}`;
    throw Error("Unknown type, must be binary type");
  }
};
var Bi = class {
  constructor(e, t, i3) {
    if (this.name = e, this.prefix = t, t.codePointAt(0) === void 0)
      throw new Error("Invalid prefix character");
    this.prefixCodePoint = t.codePointAt(0), this.baseDecode = i3;
  }
  decode(e) {
    if (typeof e == "string") {
      if (e.codePointAt(0) !== this.prefixCodePoint)
        throw Error(`Unable to decode multibase string ${JSON.stringify(e)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`);
      return this.baseDecode(e.slice(this.prefix.length));
    } else
      throw Error("Can only multibase decode strings");
  }
  or(e) {
    return Oe2(this, e);
  }
};
var ji = class {
  constructor(e) {
    this.decoders = e;
  }
  or(e) {
    return Oe2(this, e);
  }
  decode(e) {
    const t = e[0], i3 = this.decoders[t];
    if (i3)
      return i3.decode(e);
    throw RangeError(`Unable to decode multibase string ${JSON.stringify(e)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`);
  }
};
var Oe2 = (r, e) => new ji(__spreadValues(__spreadValues({}, r.decoders || { [r.prefix]: r }), e.decoders || { [e.prefix]: e }));
var Vi = class {
  constructor(e, t, i3, s) {
    this.name = e, this.prefix = t, this.baseEncode = i3, this.baseDecode = s, this.encoder = new ki(e, t, i3), this.decoder = new Bi(e, t, s);
  }
  encode(e) {
    return this.encoder.encode(e);
  }
  decode(e) {
    return this.decoder.decode(e);
  }
};
var G = ({ name: r, prefix: e, encode: t, decode: i3 }) => new Vi(r, e, t, i3);
var M = ({ prefix: r, name: e, alphabet: t }) => {
  const { encode: i3, decode: s } = $i(t, e);
  return G({ prefix: r, name: e, encode: i3, decode: (n2) => Pe2(s(n2)) });
};
var qi = (r, e, t, i3) => {
  const s = {};
  for (let l = 0; l < e.length; ++l)
    s[e[l]] = l;
  let n2 = r.length;
  for (; r[n2 - 1] === "="; )
    --n2;
  const a2 = new Uint8Array(n2 * t / 8 | 0);
  let o = 0, h2 = 0, d2 = 0;
  for (let l = 0; l < n2; ++l) {
    const D2 = s[r[l]];
    if (D2 === void 0)
      throw new SyntaxError(`Non-${i3} character`);
    h2 = h2 << t | D2, o += t, o >= 8 && (o -= 8, a2[d2++] = 255 & h2 >> o);
  }
  if (o >= t || 255 & h2 << 8 - o)
    throw new SyntaxError("Unexpected end of data");
  return a2;
};
var Gi = (r, e, t) => {
  const i3 = e[e.length - 1] === "=", s = (1 << t) - 1;
  let n2 = "", a2 = 0, o = 0;
  for (let h2 = 0; h2 < r.length; ++h2)
    for (o = o << 8 | r[h2], a2 += 8; a2 > t; )
      a2 -= t, n2 += e[s & o >> a2];
  if (a2 && (n2 += e[s & o << t - a2]), i3)
    for (; n2.length * t & 7; )
      n2 += "=";
  return n2;
};
var p2 = ({ name: r, prefix: e, bitsPerChar: t, alphabet: i3 }) => G({ prefix: e, name: r, encode(s) {
  return Gi(s, i3, t);
}, decode(s) {
  return qi(s, i3, t, r);
} });
var Yi = G({ prefix: "\0", name: "identity", encode: (r) => Ki(r), decode: (r) => Mi(r) });
var Ji = Object.freeze({ __proto__: null, identity: Yi });
var Hi = p2({ prefix: "0", name: "base2", alphabet: "01", bitsPerChar: 1 });
var Wi = Object.freeze({ __proto__: null, base2: Hi });
var Xi = p2({ prefix: "7", name: "base8", alphabet: "01234567", bitsPerChar: 3 });
var Zi = Object.freeze({ __proto__: null, base8: Xi });
var Qi = M({ prefix: "9", name: "base10", alphabet: "0123456789" });
var es = Object.freeze({ __proto__: null, base10: Qi });
var ts = p2({ prefix: "f", name: "base16", alphabet: "0123456789abcdef", bitsPerChar: 4 });
var is = p2({ prefix: "F", name: "base16upper", alphabet: "0123456789ABCDEF", bitsPerChar: 4 });
var ss = Object.freeze({ __proto__: null, base16: ts, base16upper: is });
var rs = p2({ prefix: "b", name: "base32", alphabet: "abcdefghijklmnopqrstuvwxyz234567", bitsPerChar: 5 });
var ns = p2({ prefix: "B", name: "base32upper", alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZ234567", bitsPerChar: 5 });
var as = p2({ prefix: "c", name: "base32pad", alphabet: "abcdefghijklmnopqrstuvwxyz234567=", bitsPerChar: 5 });
var os = p2({ prefix: "C", name: "base32padupper", alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=", bitsPerChar: 5 });
var hs = p2({ prefix: "v", name: "base32hex", alphabet: "0123456789abcdefghijklmnopqrstuv", bitsPerChar: 5 });
var cs = p2({ prefix: "V", name: "base32hexupper", alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUV", bitsPerChar: 5 });
var us = p2({ prefix: "t", name: "base32hexpad", alphabet: "0123456789abcdefghijklmnopqrstuv=", bitsPerChar: 5 });
var ls = p2({ prefix: "T", name: "base32hexpadupper", alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUV=", bitsPerChar: 5 });
var ds = p2({ prefix: "h", name: "base32z", alphabet: "ybndrfg8ejkmcpqxot1uwisza345h769", bitsPerChar: 5 });
var gs = Object.freeze({ __proto__: null, base32: rs, base32upper: ns, base32pad: as, base32padupper: os, base32hex: hs, base32hexupper: cs, base32hexpad: us, base32hexpadupper: ls, base32z: ds });
var ps = M({ prefix: "k", name: "base36", alphabet: "0123456789abcdefghijklmnopqrstuvwxyz" });
var Ds = M({ prefix: "K", name: "base36upper", alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ" });
var ys = Object.freeze({ __proto__: null, base36: ps, base36upper: Ds });
var bs = M({ name: "base58btc", prefix: "z", alphabet: "123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz" });
var ms = M({ name: "base58flickr", prefix: "Z", alphabet: "123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ" });
var Es = Object.freeze({ __proto__: null, base58btc: bs, base58flickr: ms });
var fs = p2({ prefix: "m", name: "base64", alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", bitsPerChar: 6 });
var ws = p2({ prefix: "M", name: "base64pad", alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=", bitsPerChar: 6 });
var vs = p2({ prefix: "u", name: "base64url", alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_", bitsPerChar: 6 });
var Is = p2({ prefix: "U", name: "base64urlpad", alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=", bitsPerChar: 6 });
var Cs = Object.freeze({ __proto__: null, base64: fs, base64pad: ws, base64url: vs, base64urlpad: Is });
var xe2 = Array.from("\u{1F680}\u{1FA90}\u2604\u{1F6F0}\u{1F30C}\u{1F311}\u{1F312}\u{1F313}\u{1F314}\u{1F315}\u{1F316}\u{1F317}\u{1F318}\u{1F30D}\u{1F30F}\u{1F30E}\u{1F409}\u2600\u{1F4BB}\u{1F5A5}\u{1F4BE}\u{1F4BF}\u{1F602}\u2764\u{1F60D}\u{1F923}\u{1F60A}\u{1F64F}\u{1F495}\u{1F62D}\u{1F618}\u{1F44D}\u{1F605}\u{1F44F}\u{1F601}\u{1F525}\u{1F970}\u{1F494}\u{1F496}\u{1F499}\u{1F622}\u{1F914}\u{1F606}\u{1F644}\u{1F4AA}\u{1F609}\u263A\u{1F44C}\u{1F917}\u{1F49C}\u{1F614}\u{1F60E}\u{1F607}\u{1F339}\u{1F926}\u{1F389}\u{1F49E}\u270C\u2728\u{1F937}\u{1F631}\u{1F60C}\u{1F338}\u{1F64C}\u{1F60B}\u{1F497}\u{1F49A}\u{1F60F}\u{1F49B}\u{1F642}\u{1F493}\u{1F929}\u{1F604}\u{1F600}\u{1F5A4}\u{1F603}\u{1F4AF}\u{1F648}\u{1F447}\u{1F3B6}\u{1F612}\u{1F92D}\u2763\u{1F61C}\u{1F48B}\u{1F440}\u{1F62A}\u{1F611}\u{1F4A5}\u{1F64B}\u{1F61E}\u{1F629}\u{1F621}\u{1F92A}\u{1F44A}\u{1F973}\u{1F625}\u{1F924}\u{1F449}\u{1F483}\u{1F633}\u270B\u{1F61A}\u{1F61D}\u{1F634}\u{1F31F}\u{1F62C}\u{1F643}\u{1F340}\u{1F337}\u{1F63B}\u{1F613}\u2B50\u2705\u{1F97A}\u{1F308}\u{1F608}\u{1F918}\u{1F4A6}\u2714\u{1F623}\u{1F3C3}\u{1F490}\u2639\u{1F38A}\u{1F498}\u{1F620}\u261D\u{1F615}\u{1F33A}\u{1F382}\u{1F33B}\u{1F610}\u{1F595}\u{1F49D}\u{1F64A}\u{1F639}\u{1F5E3}\u{1F4AB}\u{1F480}\u{1F451}\u{1F3B5}\u{1F91E}\u{1F61B}\u{1F534}\u{1F624}\u{1F33C}\u{1F62B}\u26BD\u{1F919}\u2615\u{1F3C6}\u{1F92B}\u{1F448}\u{1F62E}\u{1F646}\u{1F37B}\u{1F343}\u{1F436}\u{1F481}\u{1F632}\u{1F33F}\u{1F9E1}\u{1F381}\u26A1\u{1F31E}\u{1F388}\u274C\u270A\u{1F44B}\u{1F630}\u{1F928}\u{1F636}\u{1F91D}\u{1F6B6}\u{1F4B0}\u{1F353}\u{1F4A2}\u{1F91F}\u{1F641}\u{1F6A8}\u{1F4A8}\u{1F92C}\u2708\u{1F380}\u{1F37A}\u{1F913}\u{1F619}\u{1F49F}\u{1F331}\u{1F616}\u{1F476}\u{1F974}\u25B6\u27A1\u2753\u{1F48E}\u{1F4B8}\u2B07\u{1F628}\u{1F31A}\u{1F98B}\u{1F637}\u{1F57A}\u26A0\u{1F645}\u{1F61F}\u{1F635}\u{1F44E}\u{1F932}\u{1F920}\u{1F927}\u{1F4CC}\u{1F535}\u{1F485}\u{1F9D0}\u{1F43E}\u{1F352}\u{1F617}\u{1F911}\u{1F30A}\u{1F92F}\u{1F437}\u260E\u{1F4A7}\u{1F62F}\u{1F486}\u{1F446}\u{1F3A4}\u{1F647}\u{1F351}\u2744\u{1F334}\u{1F4A3}\u{1F438}\u{1F48C}\u{1F4CD}\u{1F940}\u{1F922}\u{1F445}\u{1F4A1}\u{1F4A9}\u{1F450}\u{1F4F8}\u{1F47B}\u{1F910}\u{1F92E}\u{1F3BC}\u{1F975}\u{1F6A9}\u{1F34E}\u{1F34A}\u{1F47C}\u{1F48D}\u{1F4E3}\u{1F942}");
var _s = xe2.reduce((r, e, t) => (r[t] = e, r), []);
var Rs = xe2.reduce((r, e, t) => (r[e.codePointAt(0)] = t, r), []);
function Ts(r) {
  return r.reduce((e, t) => (e += _s[t], e), "");
}
function Ss(r) {
  const e = [];
  for (const t of r) {
    const i3 = Rs[t.codePointAt(0)];
    if (i3 === void 0)
      throw new Error(`Non-base256emoji character: ${t}`);
    e.push(i3);
  }
  return new Uint8Array(e);
}
var Ps = G({ prefix: "\u{1F680}", name: "base256emoji", encode: Ts, decode: Ss });
var Os = Object.freeze({ __proto__: null, base256emoji: Ps });
var xs = ze2;
var Ae = 128;
var As = 127;
var zs = ~As;
var Ns = Math.pow(2, 31);
function ze2(r, e, t) {
  e = e || [], t = t || 0;
  for (var i3 = t; r >= Ns; )
    e[t++] = r & 255 | Ae, r /= 128;
  for (; r & zs; )
    e[t++] = r & 255 | Ae, r >>>= 7;
  return e[t] = r | 0, ze2.bytes = t - i3 + 1, e;
}
var Us = ae3;
var Ls = 128;
var Ne = 127;
function ae3(r, i3) {
  var t = 0, i3 = i3 || 0, s = 0, n2 = i3, a2, o = r.length;
  do {
    if (n2 >= o)
      throw ae3.bytes = 0, new RangeError("Could not decode varint");
    a2 = r[n2++], t += s < 28 ? (a2 & Ne) << s : (a2 & Ne) * Math.pow(2, s), s += 7;
  } while (a2 >= Ls);
  return ae3.bytes = n2 - i3, t;
}
var Fs = Math.pow(2, 7);
var $s = Math.pow(2, 14);
var Ms = Math.pow(2, 21);
var Ks = Math.pow(2, 28);
var ks = Math.pow(2, 35);
var Bs = Math.pow(2, 42);
var js = Math.pow(2, 49);
var Vs = Math.pow(2, 56);
var qs = Math.pow(2, 63);
var Gs = function(r) {
  return r < Fs ? 1 : r < $s ? 2 : r < Ms ? 3 : r < Ks ? 4 : r < ks ? 5 : r < Bs ? 6 : r < js ? 7 : r < Vs ? 8 : r < qs ? 9 : 10;
};
var Ys = { encode: xs, decode: Us, encodingLength: Gs };
var Ue2 = Ys;
var Le = (r, e, t = 0) => (Ue2.encode(r, e, t), e);
var Fe2 = (r) => Ue2.encodingLength(r);
var oe = (r, e) => {
  const t = e.byteLength, i3 = Fe2(r), s = i3 + Fe2(t), n2 = new Uint8Array(s + t);
  return Le(r, n2, 0), Le(t, n2, i3), n2.set(e, s), new Js(r, t, e, n2);
};
var Js = class {
  constructor(e, t, i3, s) {
    this.code = e, this.size = t, this.digest = i3, this.bytes = s;
  }
};
var $e2 = ({ name: r, code: e, encode: t }) => new Hs(r, e, t);
var Hs = class {
  constructor(e, t, i3) {
    this.name = e, this.code = t, this.encode = i3;
  }
  digest(e) {
    if (e instanceof Uint8Array) {
      const t = this.encode(e);
      return t instanceof Uint8Array ? oe(this.code, t) : t.then((i3) => oe(this.code, i3));
    } else
      throw Error("Unknown type, must be binary type");
  }
};
var Me2 = (r) => async (e) => new Uint8Array(await crypto.subtle.digest(r, e));
var Ws = $e2({ name: "sha2-256", code: 18, encode: Me2("SHA-256") });
var Xs = $e2({ name: "sha2-512", code: 19, encode: Me2("SHA-512") });
var Zs = Object.freeze({ __proto__: null, sha256: Ws, sha512: Xs });
var Ke = 0;
var Qs = "identity";
var ke = Pe2;
var er = (r) => oe(Ke, ke(r));
var tr = { code: Ke, name: Qs, encode: ke, digest: er };
var ir = Object.freeze({ __proto__: null, identity: tr });
new TextEncoder(), new TextDecoder();
var Be = __spreadValues(__spreadValues(__spreadValues(__spreadValues(__spreadValues(__spreadValues(__spreadValues(__spreadValues(__spreadValues(__spreadValues({}, Ji), Wi), Zi), es), ss), gs), ys), Es), Cs), Os);
__spreadValues(__spreadValues({}, Zs), ir);
function je2(r) {
  return globalThis.Buffer != null ? new Uint8Array(r.buffer, r.byteOffset, r.byteLength) : r;
}
function sr(r = 0) {
  return globalThis.Buffer != null && globalThis.Buffer.allocUnsafe != null ? je2(globalThis.Buffer.allocUnsafe(r)) : new Uint8Array(r);
}
function Ve2(r, e, t, i3) {
  return { name: r, prefix: e, encoder: { name: r, prefix: e, encode: t }, decoder: { decode: i3 } };
}
var qe2 = Ve2("utf8", "u", (r) => "u" + new TextDecoder("utf8").decode(r), (r) => new TextEncoder().encode(r.substring(1)));
var he = Ve2("ascii", "a", (r) => {
  let e = "a";
  for (let t = 0; t < r.length; t++)
    e += String.fromCharCode(r[t]);
  return e;
}, (r) => {
  r = r.substring(1);
  const e = sr(r.length);
  for (let t = 0; t < r.length; t++)
    e[t] = r.charCodeAt(t);
  return e;
});
var rr = __spreadValues({ utf8: qe2, "utf-8": qe2, hex: Be.base16, latin1: he, ascii: he, binary: he }, Be);
function nr(r, e = "utf8") {
  const t = rr[e];
  if (!t)
    throw new Error(`Unsupported encoding "${e}"`);
  return (e === "utf8" || e === "utf-8") && globalThis.Buffer != null && globalThis.Buffer.from != null ? je2(globalThis.Buffer.from(r, "utf-8")) : t.decoder.decode(`${t.prefix}${r}`);
}
var ce3 = "wc";
var Ge2 = 2;
var Y2 = "core";
var O = `${ce3}@2:${Y2}:`;
var Ye = { name: Y2, logger: "error" };
var Je = { database: ":memory:" };
var He2 = "crypto";
var ue3 = "client_ed25519_seed";
var We = import_time4.ONE_DAY;
var Xe = "keychain";
var Ze = "0.3";
var Qe = "messages";
var et2 = "0.3";
var tt2 = import_time4.SIX_HOURS;
var it2 = "publisher";
var st2 = "irn";
var rt2 = "error";
var le = "wss://relay.walletconnect.com";
var nt2 = "relayer";
var g2 = { message: "relayer_message", message_ack: "relayer_message_ack", connect: "relayer_connect", disconnect: "relayer_disconnect", error: "relayer_error", connection_stalled: "relayer_connection_stalled", transport_closed: "relayer_transport_closed", publish: "relayer_publish" };
var at2 = "_subscription";
var L = { payload: "payload", connect: "connect", disconnect: "disconnect", error: "error" };
var ot2 = import_time4.ONE_SECOND / 2;
var ht = "2.8.4";
var ct = 1e4;
var ut2 = "0.3";
var lt2 = "WALLETCONNECT_CLIENT_ID";
var C3 = { created: "subscription_created", deleted: "subscription_deleted", expired: "subscription_expired", disabled: "subscription_disabled", sync: "subscription_sync", resubscribed: "subscription_resubscribed" };
var dt2 = "subscription";
var gt = "0.3";
var pt2 = import_time4.FIVE_SECONDS * 1e3;
var Dt2 = "pairing";
var yt2 = "0.3";
var F = { wc_pairingDelete: { req: { ttl: import_time4.ONE_DAY, prompt: false, tag: 1e3 }, res: { ttl: import_time4.ONE_DAY, prompt: false, tag: 1001 } }, wc_pairingPing: { req: { ttl: import_time4.THIRTY_SECONDS, prompt: false, tag: 1002 }, res: { ttl: import_time4.THIRTY_SECONDS, prompt: false, tag: 1003 } }, unregistered_method: { req: { ttl: import_time4.ONE_DAY, prompt: false, tag: 0 }, res: { ttl: import_time4.ONE_DAY, prompt: false, tag: 0 } } };
var _ = { created: "history_created", updated: "history_updated", deleted: "history_deleted", sync: "history_sync" };
var bt = "history";
var mt2 = "0.3";
var Et = "expirer";
var w3 = { created: "expirer_created", deleted: "expirer_deleted", expired: "expirer_expired", sync: "expirer_sync" };
var ft2 = "0.3";
var J2 = "verify-api";
var de3 = "https://verify.walletconnect.com";
var wt2 = class {
  constructor(e, t) {
    this.core = e, this.logger = t, this.keychain = /* @__PURE__ */ new Map(), this.name = Xe, this.version = Ze, this.initialized = false, this.storagePrefix = O, this.init = async () => {
      if (!this.initialized) {
        const i3 = await this.getKeyChain();
        typeof i3 < "u" && (this.keychain = i3), this.initialized = true;
      }
    }, this.has = (i3) => (this.isInitialized(), this.keychain.has(i3)), this.set = async (i3, s) => {
      this.isInitialized(), this.keychain.set(i3, s), await this.persist();
    }, this.get = (i3) => {
      this.isInitialized();
      const s = this.keychain.get(i3);
      if (typeof s > "u") {
        const { message: n2 } = N("NO_MATCHING_KEY", `${this.name}: ${i3}`);
        throw new Error(n2);
      }
      return s;
    }, this.del = async (i3) => {
      this.isInitialized(), this.keychain.delete(i3), await this.persist();
    }, this.core = e, this.logger = (0, import_logger.generateChildLogger)(t, this.name);
  }
  get context() {
    return (0, import_logger.getLoggerContext)(this.logger);
  }
  get storageKey() {
    return this.storagePrefix + this.version + "//" + this.name;
  }
  async setKeyChain(e) {
    await this.core.storage.setItem(this.storageKey, Wn(e));
  }
  async getKeyChain() {
    const e = await this.core.storage.getItem(this.storageKey);
    return typeof e < "u" ? Yn(e) : void 0;
  }
  async persist() {
    await this.setKeyChain(this.keychain);
  }
  isInitialized() {
    if (!this.initialized) {
      const { message: e } = N("NOT_INITIALIZED", this.name);
      throw new Error(e);
    }
  }
};
var vt = class {
  constructor(e, t, i3) {
    this.core = e, this.logger = t, this.name = He2, this.initialized = false, this.init = async () => {
      this.initialized || (await this.keychain.init(), this.initialized = true);
    }, this.hasKeys = (s) => (this.isInitialized(), this.keychain.has(s)), this.getClientId = async () => {
      this.isInitialized();
      const s = await this.getClientSeed(), n2 = generateKeyPair2(s);
      return encodeIss(n2.publicKey);
    }, this.generateKeyPair = () => {
      this.isInitialized();
      const s = wn();
      return this.setPrivateKey(s.publicKey, s.privateKey);
    }, this.signJWT = async (s) => {
      this.isInitialized();
      const n2 = await this.getClientSeed(), a2 = generateKeyPair2(n2), o = Un(), h2 = We;
      return await signJWT(o, s, h2, a2);
    }, this.generateSharedKey = (s, n2, a2) => {
      this.isInitialized();
      const o = this.getPrivateKey(s), h2 = An(o, n2);
      return this.setSymKey(h2, a2);
    }, this.setSymKey = async (s, n2) => {
      this.isInitialized();
      const a2 = n2 || _n(s);
      return await this.keychain.set(a2, s), a2;
    }, this.deleteKeyPair = async (s) => {
      this.isInitialized(), await this.keychain.del(s);
    }, this.deleteSymKey = async (s) => {
      this.isInitialized(), await this.keychain.del(s);
    }, this.encode = async (s, n2, a2) => {
      this.isInitialized();
      const o = Ie(a2), h2 = safeJsonStringify(n2);
      if (Vn(o)) {
        const b5 = o.senderPublicKey, k3 = o.receiverPublicKey;
        s = await this.generateSharedKey(b5, k3);
      }
      const d2 = this.getSymKey(s), { type: l, senderPublicKey: D2 } = o;
      return jn({ type: l, symKey: d2, message: h2, senderPublicKey: D2 });
    }, this.decode = async (s, n2, a2) => {
      this.isInitialized();
      const o = Dn(n2, a2);
      if (Vn(o)) {
        const l = o.receiverPublicKey, D2 = o.senderPublicKey;
        s = await this.generateSharedKey(l, D2);
      }
      const h2 = this.getSymKey(s), d2 = Cn({ symKey: h2, encoded: n2 });
      return safeJsonParse(d2);
    }, this.getPayloadType = (s) => {
      const n2 = Z(s);
      return $(n2.type);
    }, this.getPayloadSenderPublicKey = (s) => {
      const n2 = Z(s);
      return n2.senderPublicKey ? toString2(n2.senderPublicKey, f) : void 0;
    }, this.core = e, this.logger = (0, import_logger.generateChildLogger)(t, this.name), this.keychain = i3 || new wt2(this.core, this.logger);
  }
  get context() {
    return (0, import_logger.getLoggerContext)(this.logger);
  }
  async setPrivateKey(e, t) {
    return await this.keychain.set(e, t), e;
  }
  getPrivateKey(e) {
    return this.keychain.get(e);
  }
  async getClientSeed() {
    let e = "";
    try {
      e = this.keychain.get(ue3);
    } catch {
      e = Un(), await this.keychain.set(ue3, e);
    }
    return nr(e, "base16");
  }
  getSymKey(e) {
    return this.keychain.get(e);
  }
  isInitialized() {
    if (!this.initialized) {
      const { message: e } = N("NOT_INITIALIZED", this.name);
      throw new Error(e);
    }
  }
};
var It3 = class extends a {
  constructor(e, t) {
    super(e, t), this.logger = e, this.core = t, this.messages = /* @__PURE__ */ new Map(), this.name = Qe, this.version = et2, this.initialized = false, this.storagePrefix = O, this.init = async () => {
      if (!this.initialized) {
        this.logger.trace("Initialized");
        try {
          const i3 = await this.getRelayerMessages();
          typeof i3 < "u" && (this.messages = i3), this.logger.debug(`Successfully Restored records for ${this.name}`), this.logger.trace({ type: "method", method: "restore", size: this.messages.size });
        } catch (i3) {
          this.logger.debug(`Failed to Restore records for ${this.name}`), this.logger.error(i3);
        } finally {
          this.initialized = true;
        }
      }
    }, this.set = async (i3, s) => {
      this.isInitialized();
      const n2 = $n(s);
      let a2 = this.messages.get(i3);
      return typeof a2 > "u" && (a2 = {}), typeof a2[n2] < "u" || (a2[n2] = s, this.messages.set(i3, a2), await this.persist()), n2;
    }, this.get = (i3) => {
      this.isInitialized();
      let s = this.messages.get(i3);
      return typeof s > "u" && (s = {}), s;
    }, this.has = (i3, s) => {
      this.isInitialized();
      const n2 = this.get(i3), a2 = $n(s);
      return typeof n2[a2] < "u";
    }, this.del = async (i3) => {
      this.isInitialized(), this.messages.delete(i3), await this.persist();
    }, this.logger = (0, import_logger.generateChildLogger)(e, this.name), this.core = t;
  }
  get context() {
    return (0, import_logger.getLoggerContext)(this.logger);
  }
  get storageKey() {
    return this.storagePrefix + this.version + "//" + this.name;
  }
  async setRelayerMessages(e) {
    await this.core.storage.setItem(this.storageKey, Wn(e));
  }
  async getRelayerMessages() {
    const e = await this.core.storage.getItem(this.storageKey);
    return typeof e < "u" ? Yn(e) : void 0;
  }
  async persist() {
    await this.setRelayerMessages(this.messages);
  }
  isInitialized() {
    if (!this.initialized) {
      const { message: e } = N("NOT_INITIALIZED", this.name);
      throw new Error(e);
    }
  }
};
var ur = class extends u {
  constructor(e, t) {
    super(e, t), this.relayer = e, this.logger = t, this.events = new import_events5.EventEmitter(), this.name = it2, this.queue = /* @__PURE__ */ new Map(), this.publishTimeout = (0, import_time4.toMiliseconds)(import_time4.TEN_SECONDS), this.queueTimeout = (0, import_time4.toMiliseconds)(import_time4.FIVE_SECONDS), this.needsTransportRestart = false, this.publish = async (i3, s, n2) => {
      this.logger.debug("Publishing Payload"), this.logger.trace({ type: "method", method: "publish", params: { topic: i3, message: s, opts: n2 } });
      try {
        const a2 = (n2 == null ? void 0 : n2.ttl) || tt2, o = at(n2), h2 = (n2 == null ? void 0 : n2.prompt) || false, d2 = (n2 == null ? void 0 : n2.tag) || 0, l = (n2 == null ? void 0 : n2.id) || getBigIntRpcId().toString(), D2 = { topic: i3, message: s, opts: { ttl: a2, relay: o, prompt: h2, tag: d2, id: l } }, b5 = setTimeout(() => this.queue.set(l, D2), this.queueTimeout);
        try {
          await await et(this.rpcPublish(i3, s, a2, o, h2, d2, l), this.publishTimeout), clearTimeout(b5), this.relayer.events.emit(g2.publish, D2);
        } catch {
          this.logger.debug("Publishing Payload stalled"), this.needsTransportRestart = true;
          return;
        }
        this.logger.debug("Successfully Published Payload"), this.logger.trace({ type: "method", method: "publish", params: { topic: i3, message: s, opts: n2 } });
      } catch (a2) {
        throw this.logger.debug("Failed to Publish Payload"), this.logger.error(a2), a2;
      }
    }, this.on = (i3, s) => {
      this.events.on(i3, s);
    }, this.once = (i3, s) => {
      this.events.once(i3, s);
    }, this.off = (i3, s) => {
      this.events.off(i3, s);
    }, this.removeListener = (i3, s) => {
      this.events.removeListener(i3, s);
    }, this.relayer = e, this.logger = (0, import_logger.generateChildLogger)(t, this.name), this.registerEventListeners();
  }
  get context() {
    return (0, import_logger.getLoggerContext)(this.logger);
  }
  rpcPublish(e, t, i3, s, n2, a2, o) {
    var h2, d2, l, D2;
    const b5 = { method: ut(s.protocol).publish, params: { topic: e, message: t, ttl: i3, prompt: n2, tag: a2 }, id: o };
    return P((h2 = b5.params) == null ? void 0 : h2.prompt) && ((d2 = b5.params) == null || delete d2.prompt), P((l = b5.params) == null ? void 0 : l.tag) && ((D2 = b5.params) == null || delete D2.tag), this.logger.debug("Outgoing Relay Payload"), this.logger.trace({ type: "message", direction: "outgoing", request: b5 }), this.relayer.request(b5);
  }
  onPublish(e) {
    this.queue.delete(e);
  }
  checkQueue() {
    this.queue.forEach(async (e) => {
      const { topic: t, message: i3, opts: s } = e;
      await this.publish(t, i3, s);
    });
  }
  registerEventListeners() {
    this.relayer.core.heartbeat.on(import_heartbeat.HEARTBEAT_EVENTS.pulse, () => {
      if (this.needsTransportRestart) {
        this.needsTransportRestart = false, this.relayer.events.emit(g2.connection_stalled);
        return;
      }
      this.checkQueue();
    }), this.relayer.on(g2.message_ack, (e) => {
      this.onPublish(e.id.toString());
    });
  }
};
var lr = class {
  constructor() {
    this.map = /* @__PURE__ */ new Map(), this.set = (e, t) => {
      const i3 = this.get(e);
      this.exists(e, t) || this.map.set(e, [...i3, t]);
    }, this.get = (e) => this.map.get(e) || [], this.exists = (e, t) => this.get(e).includes(t), this.delete = (e, t) => {
      if (typeof t > "u") {
        this.map.delete(e);
        return;
      }
      if (!this.map.has(e))
        return;
      const i3 = this.get(e);
      if (!this.exists(e, t))
        return;
      const s = i3.filter((n2) => n2 !== t);
      if (!s.length) {
        this.map.delete(e);
        return;
      }
      this.map.set(e, s);
    }, this.clear = () => {
      this.map.clear();
    };
  }
  get topics() {
    return Array.from(this.map.keys());
  }
};
var dr = Object.defineProperty;
var gr = Object.defineProperties;
var pr = Object.getOwnPropertyDescriptors;
var Ct = Object.getOwnPropertySymbols;
var Dr = Object.prototype.hasOwnProperty;
var yr = Object.prototype.propertyIsEnumerable;
var _t = (r, e, t) => e in r ? dr(r, e, { enumerable: true, configurable: true, writable: true, value: t }) : r[e] = t;
var K2 = (r, e) => {
  for (var t in e || (e = {}))
    Dr.call(e, t) && _t(r, t, e[t]);
  if (Ct)
    for (var t of Ct(e))
      yr.call(e, t) && _t(r, t, e[t]);
  return r;
};
var ge = (r, e) => gr(r, pr(e));
var Rt = class extends d {
  constructor(e, t) {
    super(e, t), this.relayer = e, this.logger = t, this.subscriptions = /* @__PURE__ */ new Map(), this.topicMap = new lr(), this.events = new import_events5.EventEmitter(), this.name = dt2, this.version = gt, this.pending = /* @__PURE__ */ new Map(), this.cached = [], this.initialized = false, this.pendingSubscriptionWatchLabel = "pending_sub_watch_label", this.pollingInterval = 20, this.storagePrefix = O, this.subscribeTimeout = 1e4, this.restartInProgress = false, this.batchSubscribeTopicsLimit = 500, this.init = async () => {
      this.initialized || (this.logger.trace("Initialized"), await this.restart(), this.registerEventListeners(), this.onEnable(), this.clientId = await this.relayer.core.crypto.getClientId());
    }, this.subscribe = async (i3, s) => {
      await this.restartToComplete(), this.isInitialized(), this.logger.debug("Subscribing Topic"), this.logger.trace({ type: "method", method: "subscribe", params: { topic: i3, opts: s } });
      try {
        const n2 = at(s), a2 = { topic: i3, relay: n2 };
        this.pending.set(i3, a2);
        const o = await this.rpcSubscribe(i3, n2);
        return this.onSubscribe(o, a2), this.logger.debug("Successfully Subscribed Topic"), this.logger.trace({ type: "method", method: "subscribe", params: { topic: i3, opts: s } }), o;
      } catch (n2) {
        throw this.logger.debug("Failed to Subscribe Topic"), this.logger.error(n2), n2;
      }
    }, this.unsubscribe = async (i3, s) => {
      await this.restartToComplete(), this.isInitialized(), typeof (s == null ? void 0 : s.id) < "u" ? await this.unsubscribeById(i3, s.id, s) : await this.unsubscribeByTopic(i3, s);
    }, this.isSubscribed = async (i3) => this.topics.includes(i3) ? true : await new Promise((s, n2) => {
      const a2 = new import_time4.Watch();
      a2.start(this.pendingSubscriptionWatchLabel);
      const o = setInterval(() => {
        !this.pending.has(i3) && this.topics.includes(i3) && (clearInterval(o), a2.stop(this.pendingSubscriptionWatchLabel), s(true)), a2.elapsed(this.pendingSubscriptionWatchLabel) >= pt2 && (clearInterval(o), a2.stop(this.pendingSubscriptionWatchLabel), n2(new Error("Subscription resolution timeout")));
      }, this.pollingInterval);
    }).catch(() => false), this.on = (i3, s) => {
      this.events.on(i3, s);
    }, this.once = (i3, s) => {
      this.events.once(i3, s);
    }, this.off = (i3, s) => {
      this.events.off(i3, s);
    }, this.removeListener = (i3, s) => {
      this.events.removeListener(i3, s);
    }, this.restart = async () => {
      this.restartInProgress = true, await this.restore(), await this.reset(), this.restartInProgress = false;
    }, this.relayer = e, this.logger = (0, import_logger.generateChildLogger)(t, this.name), this.clientId = "";
  }
  get context() {
    return (0, import_logger.getLoggerContext)(this.logger);
  }
  get storageKey() {
    return this.storagePrefix + this.version + "//" + this.name;
  }
  get length() {
    return this.subscriptions.size;
  }
  get ids() {
    return Array.from(this.subscriptions.keys());
  }
  get values() {
    return Array.from(this.subscriptions.values());
  }
  get topics() {
    return this.topicMap.topics;
  }
  hasSubscription(e, t) {
    let i3 = false;
    try {
      i3 = this.getSubscription(e).topic === t;
    } catch {
    }
    return i3;
  }
  onEnable() {
    this.cached = [], this.initialized = true;
  }
  onDisable() {
    this.cached = this.values, this.subscriptions.clear(), this.topicMap.clear();
  }
  async unsubscribeByTopic(e, t) {
    const i3 = this.topicMap.get(e);
    await Promise.all(i3.map(async (s) => await this.unsubscribeById(e, s, t)));
  }
  async unsubscribeById(e, t, i3) {
    this.logger.debug("Unsubscribing Topic"), this.logger.trace({ type: "method", method: "unsubscribe", params: { topic: e, id: t, opts: i3 } });
    try {
      const s = at(i3);
      await this.rpcUnsubscribe(e, t, s);
      const n2 = w2("USER_DISCONNECTED", `${this.name}, ${e}`);
      await this.onUnsubscribe(e, t, n2), this.logger.debug("Successfully Unsubscribed Topic"), this.logger.trace({ type: "method", method: "unsubscribe", params: { topic: e, id: t, opts: i3 } });
    } catch (s) {
      throw this.logger.debug("Failed to Unsubscribe Topic"), this.logger.error(s), s;
    }
  }
  async rpcSubscribe(e, t) {
    const i3 = { method: ut(t.protocol).subscribe, params: { topic: e } };
    this.logger.debug("Outgoing Relay Payload"), this.logger.trace({ type: "payload", direction: "outgoing", request: i3 });
    try {
      await await et(this.relayer.request(i3), this.subscribeTimeout);
    } catch {
      this.logger.debug("Outgoing Relay Subscribe Payload stalled"), this.relayer.events.emit(g2.connection_stalled);
    }
    return $n(e + this.clientId);
  }
  async rpcBatchSubscribe(e) {
    if (!e.length)
      return;
    const t = e[0].relay, i3 = { method: ut(t.protocol).batchSubscribe, params: { topics: e.map((s) => s.topic) } };
    this.logger.debug("Outgoing Relay Payload"), this.logger.trace({ type: "payload", direction: "outgoing", request: i3 });
    try {
      return await await et(this.relayer.request(i3), this.subscribeTimeout);
    } catch {
      this.logger.debug("Outgoing Relay Payload stalled"), this.relayer.events.emit(g2.connection_stalled);
    }
  }
  rpcUnsubscribe(e, t, i3) {
    const s = { method: ut(i3.protocol).unsubscribe, params: { topic: e, id: t } };
    return this.logger.debug("Outgoing Relay Payload"), this.logger.trace({ type: "payload", direction: "outgoing", request: s }), this.relayer.request(s);
  }
  onSubscribe(e, t) {
    this.setSubscription(e, ge(K2({}, t), { id: e })), this.pending.delete(t.topic);
  }
  onBatchSubscribe(e) {
    e.length && e.forEach((t) => {
      this.setSubscription(t.id, K2({}, t)), this.pending.delete(t.topic);
    });
  }
  async onUnsubscribe(e, t, i3) {
    this.events.removeAllListeners(t), this.hasSubscription(t, e) && this.deleteSubscription(t, i3), await this.relayer.messages.del(e);
  }
  async setRelayerSubscriptions(e) {
    await this.relayer.core.storage.setItem(this.storageKey, e);
  }
  async getRelayerSubscriptions() {
    return await this.relayer.core.storage.getItem(this.storageKey);
  }
  setSubscription(e, t) {
    this.subscriptions.has(e) || (this.logger.debug("Setting subscription"), this.logger.trace({ type: "method", method: "setSubscription", id: e, subscription: t }), this.addSubscription(e, t));
  }
  addSubscription(e, t) {
    this.subscriptions.set(e, K2({}, t)), this.topicMap.set(t.topic, e), this.events.emit(C3.created, t);
  }
  getSubscription(e) {
    this.logger.debug("Getting subscription"), this.logger.trace({ type: "method", method: "getSubscription", id: e });
    const t = this.subscriptions.get(e);
    if (!t) {
      const { message: i3 } = N("NO_MATCHING_KEY", `${this.name}: ${e}`);
      throw new Error(i3);
    }
    return t;
  }
  deleteSubscription(e, t) {
    this.logger.debug("Deleting subscription"), this.logger.trace({ type: "method", method: "deleteSubscription", id: e, reason: t });
    const i3 = this.getSubscription(e);
    this.subscriptions.delete(e), this.topicMap.delete(i3.topic, e), this.events.emit(C3.deleted, ge(K2({}, i3), { reason: t }));
  }
  async persist() {
    await this.setRelayerSubscriptions(this.values), this.events.emit(C3.sync);
  }
  async reset() {
    if (this.cached.length) {
      const e = Math.ceil(this.cached.length / this.batchSubscribeTopicsLimit);
      for (let t = 0; t < e; t++) {
        const i3 = this.cached.splice(0, this.batchSubscribeTopicsLimit);
        await this.batchSubscribe(i3);
      }
    }
    this.events.emit(C3.resubscribed);
  }
  async restore() {
    try {
      const e = await this.getRelayerSubscriptions();
      if (typeof e > "u" || !e.length)
        return;
      if (this.subscriptions.size) {
        const { message: t } = N("RESTORE_WILL_OVERRIDE", this.name);
        throw this.logger.error(t), this.logger.error(`${this.name}: ${JSON.stringify(this.values)}`), new Error(t);
      }
      this.cached = e, this.logger.debug(`Successfully Restored subscriptions for ${this.name}`), this.logger.trace({ type: "method", method: "restore", subscriptions: this.values });
    } catch (e) {
      this.logger.debug(`Failed to Restore subscriptions for ${this.name}`), this.logger.error(e);
    }
  }
  async batchSubscribe(e) {
    if (!e.length)
      return;
    const t = await this.rpcBatchSubscribe(e);
    j2(t) && this.onBatchSubscribe(t.map((i3, s) => ge(K2({}, e[s]), { id: i3 })));
  }
  async onConnect() {
    this.restartInProgress || (await this.restart(), this.onEnable());
  }
  onDisconnect() {
    this.onDisable();
  }
  async checkPending() {
    if (this.relayer.transportExplicitlyClosed)
      return;
    const e = [];
    this.pending.forEach((t) => {
      e.push(t);
    }), await this.batchSubscribe(e);
  }
  registerEventListeners() {
    this.relayer.core.heartbeat.on(import_heartbeat.HEARTBEAT_EVENTS.pulse, async () => {
      await this.checkPending();
    }), this.relayer.on(g2.connect, async () => {
      await this.onConnect();
    }), this.relayer.on(g2.disconnect, () => {
      this.onDisconnect();
    }), this.events.on(C3.created, async (e) => {
      const t = C3.created;
      this.logger.info(`Emitting ${t}`), this.logger.debug({ type: "event", event: t, data: e }), await this.persist();
    }), this.events.on(C3.deleted, async (e) => {
      const t = C3.deleted;
      this.logger.info(`Emitting ${t}`), this.logger.debug({ type: "event", event: t, data: e }), await this.persist();
    });
  }
  isInitialized() {
    if (!this.initialized) {
      const { message: e } = N("NOT_INITIALIZED", this.name);
      throw new Error(e);
    }
  }
  async restartToComplete() {
    this.restartInProgress && await new Promise((e) => {
      const t = setInterval(() => {
        this.restartInProgress || (clearInterval(t), e());
      }, this.pollingInterval);
    });
  }
};
var br = Object.defineProperty;
var Tt2 = Object.getOwnPropertySymbols;
var mr = Object.prototype.hasOwnProperty;
var Er = Object.prototype.propertyIsEnumerable;
var St = (r, e, t) => e in r ? br(r, e, { enumerable: true, configurable: true, writable: true, value: t }) : r[e] = t;
var fr = (r, e) => {
  for (var t in e || (e = {}))
    mr.call(e, t) && St(r, t, e[t]);
  if (Tt2)
    for (var t of Tt2(e))
      Er.call(e, t) && St(r, t, e[t]);
  return r;
};
var Pt = class extends g {
  constructor(e) {
    super(e), this.protocol = "wc", this.version = 2, this.events = new import_events5.EventEmitter(), this.name = nt2, this.transportExplicitlyClosed = false, this.initialized = false, this.reconnecting = false, this.connectionStatusPollingInterval = 20, this.staleConnectionErrors = ["socket hang up", "socket stalled"], this.request = async (t) => {
      this.logger.debug("Publishing Request Payload");
      try {
        return await this.toEstablishConnection(), await this.provider.request(t);
      } catch (i3) {
        throw this.logger.debug("Failed to Publish Request"), this.logger.error(i3), i3;
      }
    }, this.core = e.core, this.logger = typeof e.logger < "u" && typeof e.logger != "string" ? (0, import_logger.generateChildLogger)(e.logger, this.name) : (0, import_logger.pino)((0, import_logger.getDefaultLoggerOptions)({ level: e.logger || rt2 })), this.messages = new It3(this.logger, e.core), this.subscriber = new Rt(this, this.logger), this.publisher = new ur(this, this.logger), this.relayUrl = (e == null ? void 0 : e.relayUrl) || le, this.projectId = e.projectId, this.provider = {};
  }
  async init() {
    this.logger.trace("Initialized"), await this.createProvider(), await Promise.all([this.messages.init(), this.transportOpen(), this.subscriber.init()]), this.registerEventListeners(), this.initialized = true, setTimeout(async () => {
      this.subscriber.topics.length === 0 && (this.logger.info("No topics subscribted to after init, closing transport"), await this.transportClose(), this.transportExplicitlyClosed = false);
    }, ct);
  }
  get context() {
    return (0, import_logger.getLoggerContext)(this.logger);
  }
  get connected() {
    return this.provider.connection.connected;
  }
  get connecting() {
    return this.provider.connection.connecting;
  }
  async publish(e, t, i3) {
    this.isInitialized(), await this.publisher.publish(e, t, i3), await this.recordMessageEvent({ topic: e, message: t, publishedAt: Date.now() });
  }
  async subscribe(e, t) {
    var i3;
    this.isInitialized();
    let s = ((i3 = this.subscriber.topicMap.get(e)) == null ? void 0 : i3[0]) || "";
    return s || (await Promise.all([new Promise((n2) => {
      this.subscriber.once(C3.created, (a2) => {
        a2.topic === e && n2();
      });
    }), new Promise(async (n2) => {
      s = await this.subscriber.subscribe(e, t), n2();
    })]), s);
  }
  async unsubscribe(e, t) {
    this.isInitialized(), await this.subscriber.unsubscribe(e, t);
  }
  on(e, t) {
    this.events.on(e, t);
  }
  once(e, t) {
    this.events.once(e, t);
  }
  off(e, t) {
    this.events.off(e, t);
  }
  removeListener(e, t) {
    this.events.removeListener(e, t);
  }
  async transportClose() {
    this.transportExplicitlyClosed = true, this.connected && (await this.provider.disconnect(), this.events.emit(g2.transport_closed));
  }
  async transportOpen(e) {
    if (this.transportExplicitlyClosed = false, !this.reconnecting) {
      this.relayUrl = e || this.relayUrl, this.reconnecting = true;
      try {
        await Promise.all([new Promise((t) => {
          this.initialized || t(), this.subscriber.once(C3.resubscribed, () => {
            t();
          });
        }), await Promise.race([new Promise(async (t, i3) => {
          await et(this.provider.connect(), 5e3, "socket stalled").catch((s) => i3(s)).then(() => t()).finally(() => this.removeListener(g2.transport_closed, this.rejectTransportOpen));
        }), new Promise((t) => this.once(g2.transport_closed, this.rejectTransportOpen))])]);
      } catch (t) {
        this.logger.error(t);
        const i3 = t;
        if (!this.isConnectionStalled(i3.message))
          throw t;
        this.events.emit(g2.transport_closed);
      } finally {
        this.reconnecting = false;
      }
    }
  }
  async restartTransport(e) {
    this.transportExplicitlyClosed || this.reconnecting || (this.relayUrl = e || this.relayUrl, this.connected && await Promise.all([new Promise((t) => {
      this.provider.once(L.disconnect, () => {
        t();
      });
    }), this.transportClose()]), await this.createProvider(), await this.transportOpen());
  }
  isConnectionStalled(e) {
    return this.staleConnectionErrors.some((t) => e.includes(t));
  }
  rejectTransportOpen() {
    throw new Error("Attempt to connect to relay via `transportOpen` has stalled. Retrying...");
  }
  async createProvider() {
    const e = await this.core.crypto.signJWT(this.relayUrl);
    this.provider = new JsonRpcProvider(new esm_default(qn({ sdkVersion: ht, protocol: this.protocol, version: this.version, relayUrl: this.relayUrl, projectId: this.projectId, auth: e, useOnCloseEvent: true }))), this.registerProviderListeners();
  }
  async recordMessageEvent(e) {
    const { topic: t, message: i3 } = e;
    await this.messages.set(t, i3);
  }
  async shouldIgnoreMessageEvent(e) {
    const { topic: t, message: i3 } = e;
    return await this.subscriber.isSubscribed(t) ? this.messages.has(t, i3) : true;
  }
  async onProviderPayload(e) {
    if (this.logger.debug("Incoming Relay Payload"), this.logger.trace({ type: "payload", direction: "incoming", payload: e }), isJsonRpcRequest(e)) {
      if (!e.method.endsWith(at2))
        return;
      const t = e.params, { topic: i3, message: s, publishedAt: n2 } = t.data, a2 = { topic: i3, message: s, publishedAt: n2 };
      this.logger.debug("Emitting Relayer Payload"), this.logger.trace(fr({ type: "event", event: t.id }, a2)), this.events.emit(t.id, a2), await this.acknowledgePayload(e), await this.onMessageEvent(a2);
    } else
      isJsonRpcResponse(e) && this.events.emit(g2.message_ack, e);
  }
  async onMessageEvent(e) {
    await this.shouldIgnoreMessageEvent(e) || (this.events.emit(g2.message, e), await this.recordMessageEvent(e));
  }
  async acknowledgePayload(e) {
    const t = formatJsonRpcResult(e.id, true);
    await this.provider.connection.send(t);
  }
  registerProviderListeners() {
    this.provider.on(L.payload, (e) => this.onProviderPayload(e)), this.provider.on(L.connect, () => {
      this.events.emit(g2.connect);
    }), this.provider.on(L.disconnect, () => {
      this.onProviderDisconnect();
    }), this.provider.on(L.error, (e) => {
      this.logger.error(e), this.events.emit(g2.error, e);
    });
  }
  registerEventListeners() {
    this.events.on(g2.connection_stalled, async () => {
      await this.restartTransport();
    });
  }
  onProviderDisconnect() {
    this.events.emit(g2.disconnect), this.attemptToReconnect();
  }
  attemptToReconnect() {
    this.transportExplicitlyClosed || setTimeout(async () => {
      await this.restartTransport();
    }, (0, import_time4.toMiliseconds)(ot2));
  }
  isInitialized() {
    if (!this.initialized) {
      const { message: e } = N("NOT_INITIALIZED", this.name);
      throw new Error(e);
    }
  }
  async toEstablishConnection() {
    if (!this.connected) {
      if (this.connecting)
        return await new Promise((e) => {
          const t = setInterval(() => {
            this.connected && (clearInterval(t), e());
          }, this.connectionStatusPollingInterval);
        });
      await this.restartTransport();
    }
  }
};
var wr = Object.defineProperty;
var Ot = Object.getOwnPropertySymbols;
var vr = Object.prototype.hasOwnProperty;
var Ir = Object.prototype.propertyIsEnumerable;
var xt = (r, e, t) => e in r ? wr(r, e, { enumerable: true, configurable: true, writable: true, value: t }) : r[e] = t;
var At2 = (r, e) => {
  for (var t in e || (e = {}))
    vr.call(e, t) && xt(r, t, e[t]);
  if (Ot)
    for (var t of Ot(e))
      Ir.call(e, t) && xt(r, t, e[t]);
  return r;
};
var zt = class extends p {
  constructor(e, t, i3, s = O, n2 = void 0) {
    super(e, t, i3, s), this.core = e, this.logger = t, this.name = i3, this.map = /* @__PURE__ */ new Map(), this.version = ut2, this.cached = [], this.initialized = false, this.storagePrefix = O, this.init = async () => {
      this.initialized || (this.logger.trace("Initialized"), await this.restore(), this.cached.forEach((a2) => {
        this.getKey && a2 !== null && !P(a2) ? this.map.set(this.getKey(a2), a2) : Ut(a2) ? this.map.set(a2.id, a2) : At(a2) && this.map.set(a2.topic, a2);
      }), this.cached = [], this.initialized = true);
    }, this.set = async (a2, o) => {
      this.isInitialized(), this.map.has(a2) ? await this.update(a2, o) : (this.logger.debug("Setting value"), this.logger.trace({ type: "method", method: "set", key: a2, value: o }), this.map.set(a2, o), await this.persist());
    }, this.get = (a2) => (this.isInitialized(), this.logger.debug("Getting value"), this.logger.trace({ type: "method", method: "get", key: a2 }), this.getData(a2)), this.getAll = (a2) => (this.isInitialized(), a2 ? this.values.filter((o) => Object.keys(a2).every((h2) => (0, import_lodash.default)(o[h2], a2[h2]))) : this.values), this.update = async (a2, o) => {
      this.isInitialized(), this.logger.debug("Updating value"), this.logger.trace({ type: "method", method: "update", key: a2, update: o });
      const h2 = At2(At2({}, this.getData(a2)), o);
      this.map.set(a2, h2), await this.persist();
    }, this.delete = async (a2, o) => {
      this.isInitialized(), this.map.has(a2) && (this.logger.debug("Deleting value"), this.logger.trace({ type: "method", method: "delete", key: a2, reason: o }), this.map.delete(a2), await this.persist());
    }, this.logger = (0, import_logger.generateChildLogger)(t, this.name), this.storagePrefix = s, this.getKey = n2;
  }
  get context() {
    return (0, import_logger.getLoggerContext)(this.logger);
  }
  get storageKey() {
    return this.storagePrefix + this.version + "//" + this.name;
  }
  get length() {
    return this.map.size;
  }
  get keys() {
    return Array.from(this.map.keys());
  }
  get values() {
    return Array.from(this.map.values());
  }
  async setDataStore(e) {
    await this.core.storage.setItem(this.storageKey, e);
  }
  async getDataStore() {
    return await this.core.storage.getItem(this.storageKey);
  }
  getData(e) {
    const t = this.map.get(e);
    if (!t) {
      const { message: i3 } = N("NO_MATCHING_KEY", `${this.name}: ${e}`);
      throw this.logger.error(i3), new Error(i3);
    }
    return t;
  }
  async persist() {
    await this.setDataStore(this.values);
  }
  async restore() {
    try {
      const e = await this.getDataStore();
      if (typeof e > "u" || !e.length)
        return;
      if (this.map.size) {
        const { message: t } = N("RESTORE_WILL_OVERRIDE", this.name);
        throw this.logger.error(t), new Error(t);
      }
      this.cached = e, this.logger.debug(`Successfully Restored value for ${this.name}`), this.logger.trace({ type: "method", method: "restore", value: this.values });
    } catch (e) {
      this.logger.debug(`Failed to Restore value for ${this.name}`), this.logger.error(e);
    }
  }
  isInitialized() {
    if (!this.initialized) {
      const { message: e } = N("NOT_INITIALIZED", this.name);
      throw new Error(e);
    }
  }
};
var Nt = class {
  constructor(e, t) {
    this.core = e, this.logger = t, this.name = Dt2, this.version = yt2, this.events = new import_events5.default(), this.initialized = false, this.storagePrefix = O, this.ignoredPayloadTypes = [A], this.registeredMethods = [], this.init = async () => {
      this.initialized || (await this.pairings.init(), await this.cleanup(), this.registerRelayerEvents(), this.registerExpirerEvents(), this.initialized = true, this.logger.trace("Initialized"));
    }, this.register = ({ methods: i3 }) => {
      this.isInitialized(), this.registeredMethods = [.../* @__PURE__ */ new Set([...this.registeredMethods, ...i3])];
    }, this.create = async () => {
      this.isInitialized();
      const i3 = Un(), s = await this.core.crypto.setSymKey(i3), n2 = ot(import_time4.FIVE_MINUTES), a2 = { protocol: st2 }, o = { topic: s, expiry: n2, relay: a2, active: false }, h2 = yt({ protocol: this.core.protocol, version: this.core.version, topic: s, symKey: i3, relay: a2 });
      return await this.pairings.set(s, o), await this.core.relayer.subscribe(s), this.core.expirer.set(s, n2), { topic: s, uri: h2 };
    }, this.pair = async (i3) => {
      this.isInitialized(), this.isValidPair(i3);
      const { topic: s, symKey: n2, relay: a2 } = mt(i3.uri);
      if (this.pairings.keys.includes(s))
        throw new Error(`Pairing already exists: ${s}`);
      if (this.core.crypto.hasKeys(s))
        throw new Error(`Keychain already exists: ${s}`);
      const o = ot(import_time4.FIVE_MINUTES), h2 = { topic: s, relay: a2, expiry: o, active: false };
      return await this.pairings.set(s, h2), await this.core.crypto.setSymKey(n2, s), await this.core.relayer.subscribe(s, { relay: a2 }), this.core.expirer.set(s, o), i3.activatePairing && await this.activate({ topic: s }), h2;
    }, this.activate = async ({ topic: i3 }) => {
      this.isInitialized();
      const s = ot(import_time4.THIRTY_DAYS);
      await this.pairings.update(i3, { active: true, expiry: s }), this.core.expirer.set(i3, s);
    }, this.ping = async (i3) => {
      this.isInitialized(), await this.isValidPing(i3);
      const { topic: s } = i3;
      if (this.pairings.keys.includes(s)) {
        const n2 = await this.sendRequest(s, "wc_pairingPing", {}), { done: a2, resolve: o, reject: h2 } = Xn();
        this.events.once(it("pairing_ping", n2), ({ error: d2 }) => {
          d2 ? h2(d2) : o();
        }), await a2();
      }
    }, this.updateExpiry = async ({ topic: i3, expiry: s }) => {
      this.isInitialized(), await this.pairings.update(i3, { expiry: s });
    }, this.updateMetadata = async ({ topic: i3, metadata: s }) => {
      this.isInitialized(), await this.pairings.update(i3, { peerMetadata: s });
    }, this.getPairings = () => (this.isInitialized(), this.pairings.values), this.disconnect = async (i3) => {
      this.isInitialized(), await this.isValidDisconnect(i3);
      const { topic: s } = i3;
      this.pairings.keys.includes(s) && (await this.sendRequest(s, "wc_pairingDelete", w2("USER_DISCONNECTED")), await this.deletePairing(s));
    }, this.sendRequest = async (i3, s, n2) => {
      const a2 = formatJsonRpcRequest(s, n2), o = await this.core.crypto.encode(i3, a2), h2 = F[s].req;
      return this.core.history.set(i3, a2), this.core.relayer.publish(i3, o, h2), a2.id;
    }, this.sendResult = async (i3, s, n2) => {
      const a2 = formatJsonRpcResult(i3, n2), o = await this.core.crypto.encode(s, a2), h2 = await this.core.history.get(s, i3), d2 = F[h2.request.method].res;
      await this.core.relayer.publish(s, o, d2), await this.core.history.resolve(a2);
    }, this.sendError = async (i3, s, n2) => {
      const a2 = formatJsonRpcError(i3, n2), o = await this.core.crypto.encode(s, a2), h2 = await this.core.history.get(s, i3), d2 = F[h2.request.method] ? F[h2.request.method].res : F.unregistered_method.res;
      await this.core.relayer.publish(s, o, d2), await this.core.history.resolve(a2);
    }, this.deletePairing = async (i3, s) => {
      await this.core.relayer.unsubscribe(i3), await Promise.all([this.pairings.delete(i3, w2("USER_DISCONNECTED")), this.core.crypto.deleteSymKey(i3), s ? Promise.resolve() : this.core.expirer.del(i3)]);
    }, this.cleanup = async () => {
      const i3 = this.pairings.getAll().filter((s) => st(s.expiry));
      await Promise.all(i3.map((s) => this.deletePairing(s.topic)));
    }, this.onRelayEventRequest = (i3) => {
      const { topic: s, payload: n2 } = i3, a2 = n2.method;
      if (this.pairings.keys.includes(s))
        switch (a2) {
          case "wc_pairingPing":
            return this.onPairingPingRequest(s, n2);
          case "wc_pairingDelete":
            return this.onPairingDeleteRequest(s, n2);
          default:
            return this.onUnknownRpcMethodRequest(s, n2);
        }
    }, this.onRelayEventResponse = async (i3) => {
      const { topic: s, payload: n2 } = i3, a2 = (await this.core.history.get(s, n2.id)).request.method;
      if (this.pairings.keys.includes(s))
        switch (a2) {
          case "wc_pairingPing":
            return this.onPairingPingResponse(s, n2);
          default:
            return this.onUnknownRpcMethodResponse(a2);
        }
    }, this.onPairingPingRequest = async (i3, s) => {
      const { id: n2 } = s;
      try {
        this.isValidPing({ topic: i3 }), await this.sendResult(n2, i3, true), this.events.emit("pairing_ping", { id: n2, topic: i3 });
      } catch (a2) {
        await this.sendError(n2, i3, a2), this.logger.error(a2);
      }
    }, this.onPairingPingResponse = (i3, s) => {
      const { id: n2 } = s;
      setTimeout(() => {
        isJsonRpcResult(s) ? this.events.emit(it("pairing_ping", n2), {}) : isJsonRpcError(s) && this.events.emit(it("pairing_ping", n2), { error: s.error });
      }, 500);
    }, this.onPairingDeleteRequest = async (i3, s) => {
      const { id: n2 } = s;
      try {
        this.isValidDisconnect({ topic: i3 }), await this.deletePairing(i3), this.events.emit("pairing_delete", { id: n2, topic: i3 });
      } catch (a2) {
        await this.sendError(n2, i3, a2), this.logger.error(a2);
      }
    }, this.onUnknownRpcMethodRequest = async (i3, s) => {
      const { id: n2, method: a2 } = s;
      try {
        if (this.registeredMethods.includes(a2))
          return;
        const o = w2("WC_METHOD_UNSUPPORTED", a2);
        await this.sendError(n2, i3, o), this.logger.error(o);
      } catch (o) {
        await this.sendError(n2, i3, o), this.logger.error(o);
      }
    }, this.onUnknownRpcMethodResponse = (i3) => {
      this.registeredMethods.includes(i3) || this.logger.error(w2("WC_METHOD_UNSUPPORTED", i3));
    }, this.isValidPair = (i3) => {
      if (!Dt(i3)) {
        const { message: s } = N("MISSING_OR_INVALID", `pair() params: ${i3}`);
        throw new Error(s);
      }
      if (!wt(i3.uri)) {
        const { message: s } = N("MISSING_OR_INVALID", `pair() uri: ${i3.uri}`);
        throw new Error(s);
      }
    }, this.isValidPing = async (i3) => {
      if (!Dt(i3)) {
        const { message: n2 } = N("MISSING_OR_INVALID", `ping() params: ${i3}`);
        throw new Error(n2);
      }
      const { topic: s } = i3;
      await this.isValidPairingTopic(s);
    }, this.isValidDisconnect = async (i3) => {
      if (!Dt(i3)) {
        const { message: n2 } = N("MISSING_OR_INVALID", `disconnect() params: ${i3}`);
        throw new Error(n2);
      }
      const { topic: s } = i3;
      await this.isValidPairingTopic(s);
    }, this.isValidPairingTopic = async (i3) => {
      if (!m(i3, false)) {
        const { message: s } = N("MISSING_OR_INVALID", `pairing topic should be a string: ${i3}`);
        throw new Error(s);
      }
      if (!this.pairings.keys.includes(i3)) {
        const { message: s } = N("NO_MATCHING_KEY", `pairing topic doesn't exist: ${i3}`);
        throw new Error(s);
      }
      if (st(this.pairings.get(i3).expiry)) {
        await this.deletePairing(i3);
        const { message: s } = N("EXPIRED", `pairing topic: ${i3}`);
        throw new Error(s);
      }
    }, this.core = e, this.logger = (0, import_logger.generateChildLogger)(t, this.name), this.pairings = new zt(this.core, this.logger, this.name, this.storagePrefix);
  }
  get context() {
    return (0, import_logger.getLoggerContext)(this.logger);
  }
  isInitialized() {
    if (!this.initialized) {
      const { message: e } = N("NOT_INITIALIZED", this.name);
      throw new Error(e);
    }
  }
  registerRelayerEvents() {
    this.core.relayer.on(g2.message, async (e) => {
      const { topic: t, message: i3 } = e;
      if (this.ignoredPayloadTypes.includes(this.core.crypto.getPayloadType(i3)))
        return;
      const s = await this.core.crypto.decode(t, i3);
      isJsonRpcRequest(s) ? (this.core.history.set(t, s), this.onRelayEventRequest({ topic: t, payload: s })) : isJsonRpcResponse(s) && (await this.core.history.resolve(s), this.onRelayEventResponse({ topic: t, payload: s }));
    });
  }
  registerExpirerEvents() {
    this.core.expirer.on(w3.expired, async (e) => {
      const { topic: t } = rt(e.target);
      t && this.pairings.keys.includes(t) && (await this.deletePairing(t, true), this.events.emit("pairing_expire", { topic: t }));
    });
  }
};
var Ut2 = class extends h {
  constructor(e, t) {
    super(e, t), this.core = e, this.logger = t, this.records = /* @__PURE__ */ new Map(), this.events = new import_events5.EventEmitter(), this.name = bt, this.version = mt2, this.cached = [], this.initialized = false, this.storagePrefix = O, this.init = async () => {
      this.initialized || (this.logger.trace("Initialized"), await this.restore(), this.cached.forEach((i3) => this.records.set(i3.id, i3)), this.cached = [], this.registerEventListeners(), this.initialized = true);
    }, this.set = (i3, s, n2) => {
      if (this.isInitialized(), this.logger.debug("Setting JSON-RPC request history record"), this.logger.trace({ type: "method", method: "set", topic: i3, request: s, chainId: n2 }), this.records.has(s.id))
        return;
      const a2 = { id: s.id, topic: i3, request: { method: s.method, params: s.params || null }, chainId: n2 };
      this.records.set(a2.id, a2), this.events.emit(_.created, a2);
    }, this.resolve = async (i3) => {
      if (this.isInitialized(), this.logger.debug("Updating JSON-RPC response history record"), this.logger.trace({ type: "method", method: "update", response: i3 }), !this.records.has(i3.id))
        return;
      const s = await this.getRecord(i3.id);
      typeof s.response > "u" && (s.response = isJsonRpcError(i3) ? { error: i3.error } : { result: i3.result }, this.records.set(s.id, s), this.events.emit(_.updated, s));
    }, this.get = async (i3, s) => (this.isInitialized(), this.logger.debug("Getting record"), this.logger.trace({ type: "method", method: "get", topic: i3, id: s }), await this.getRecord(s)), this.delete = (i3, s) => {
      this.isInitialized(), this.logger.debug("Deleting record"), this.logger.trace({ type: "method", method: "delete", id: s }), this.values.forEach((n2) => {
        if (n2.topic === i3) {
          if (typeof s < "u" && n2.id !== s)
            return;
          this.records.delete(n2.id), this.events.emit(_.deleted, n2);
        }
      });
    }, this.exists = async (i3, s) => (this.isInitialized(), this.records.has(s) ? (await this.getRecord(s)).topic === i3 : false), this.on = (i3, s) => {
      this.events.on(i3, s);
    }, this.once = (i3, s) => {
      this.events.once(i3, s);
    }, this.off = (i3, s) => {
      this.events.off(i3, s);
    }, this.removeListener = (i3, s) => {
      this.events.removeListener(i3, s);
    }, this.logger = (0, import_logger.generateChildLogger)(t, this.name);
  }
  get context() {
    return (0, import_logger.getLoggerContext)(this.logger);
  }
  get storageKey() {
    return this.storagePrefix + this.version + "//" + this.name;
  }
  get size() {
    return this.records.size;
  }
  get keys() {
    return Array.from(this.records.keys());
  }
  get values() {
    return Array.from(this.records.values());
  }
  get pending() {
    const e = [];
    return this.values.forEach((t) => {
      if (typeof t.response < "u")
        return;
      const i3 = { topic: t.topic, request: formatJsonRpcRequest(t.request.method, t.request.params, t.id), chainId: t.chainId };
      return e.push(i3);
    }), e;
  }
  async setJsonRpcRecords(e) {
    await this.core.storage.setItem(this.storageKey, e);
  }
  async getJsonRpcRecords() {
    return await this.core.storage.getItem(this.storageKey);
  }
  getRecord(e) {
    this.isInitialized();
    const t = this.records.get(e);
    if (!t) {
      const { message: i3 } = N("NO_MATCHING_KEY", `${this.name}: ${e}`);
      throw new Error(i3);
    }
    return t;
  }
  async persist() {
    await this.setJsonRpcRecords(this.values), this.events.emit(_.sync);
  }
  async restore() {
    try {
      const e = await this.getJsonRpcRecords();
      if (typeof e > "u" || !e.length)
        return;
      if (this.records.size) {
        const { message: t } = N("RESTORE_WILL_OVERRIDE", this.name);
        throw this.logger.error(t), new Error(t);
      }
      this.cached = e, this.logger.debug(`Successfully Restored records for ${this.name}`), this.logger.trace({ type: "method", method: "restore", records: this.values });
    } catch (e) {
      this.logger.debug(`Failed to Restore records for ${this.name}`), this.logger.error(e);
    }
  }
  registerEventListeners() {
    this.events.on(_.created, (e) => {
      const t = _.created;
      this.logger.info(`Emitting ${t}`), this.logger.debug({ type: "event", event: t, record: e }), this.persist();
    }), this.events.on(_.updated, (e) => {
      const t = _.updated;
      this.logger.info(`Emitting ${t}`), this.logger.debug({ type: "event", event: t, record: e }), this.persist();
    }), this.events.on(_.deleted, (e) => {
      const t = _.deleted;
      this.logger.info(`Emitting ${t}`), this.logger.debug({ type: "event", event: t, record: e }), this.persist();
    });
  }
  isInitialized() {
    if (!this.initialized) {
      const { message: e } = N("NOT_INITIALIZED", this.name);
      throw new Error(e);
    }
  }
};
var Lt = class extends E {
  constructor(e, t) {
    super(e, t), this.core = e, this.logger = t, this.expirations = /* @__PURE__ */ new Map(), this.events = new import_events5.EventEmitter(), this.name = Et, this.version = ft2, this.cached = [], this.initialized = false, this.storagePrefix = O, this.init = async () => {
      this.initialized || (this.logger.trace("Initialized"), await this.restore(), this.cached.forEach((i3) => this.expirations.set(i3.target, i3)), this.cached = [], this.registerEventListeners(), this.initialized = true);
    }, this.has = (i3) => {
      try {
        const s = this.formatTarget(i3);
        return typeof this.getExpiration(s) < "u";
      } catch {
        return false;
      }
    }, this.set = (i3, s) => {
      this.isInitialized();
      const n2 = this.formatTarget(i3), a2 = { target: n2, expiry: s };
      this.expirations.set(n2, a2), this.checkExpiry(n2, a2), this.events.emit(w3.created, { target: n2, expiration: a2 });
    }, this.get = (i3) => {
      this.isInitialized();
      const s = this.formatTarget(i3);
      return this.getExpiration(s);
    }, this.del = (i3) => {
      if (this.isInitialized(), this.has(i3)) {
        const s = this.formatTarget(i3), n2 = this.getExpiration(s);
        this.expirations.delete(s), this.events.emit(w3.deleted, { target: s, expiration: n2 });
      }
    }, this.on = (i3, s) => {
      this.events.on(i3, s);
    }, this.once = (i3, s) => {
      this.events.once(i3, s);
    }, this.off = (i3, s) => {
      this.events.off(i3, s);
    }, this.removeListener = (i3, s) => {
      this.events.removeListener(i3, s);
    }, this.logger = (0, import_logger.generateChildLogger)(t, this.name);
  }
  get context() {
    return (0, import_logger.getLoggerContext)(this.logger);
  }
  get storageKey() {
    return this.storagePrefix + this.version + "//" + this.name;
  }
  get length() {
    return this.expirations.size;
  }
  get keys() {
    return Array.from(this.expirations.keys());
  }
  get values() {
    return Array.from(this.expirations.values());
  }
  formatTarget(e) {
    if (typeof e == "string")
      return nt(e);
    if (typeof e == "number")
      return tt(e);
    const { message: t } = N("UNKNOWN_TYPE", `Target type: ${typeof e}`);
    throw new Error(t);
  }
  async setExpirations(e) {
    await this.core.storage.setItem(this.storageKey, e);
  }
  async getExpirations() {
    return await this.core.storage.getItem(this.storageKey);
  }
  async persist() {
    await this.setExpirations(this.values), this.events.emit(w3.sync);
  }
  async restore() {
    try {
      const e = await this.getExpirations();
      if (typeof e > "u" || !e.length)
        return;
      if (this.expirations.size) {
        const { message: t } = N("RESTORE_WILL_OVERRIDE", this.name);
        throw this.logger.error(t), new Error(t);
      }
      this.cached = e, this.logger.debug(`Successfully Restored expirations for ${this.name}`), this.logger.trace({ type: "method", method: "restore", expirations: this.values });
    } catch (e) {
      this.logger.debug(`Failed to Restore expirations for ${this.name}`), this.logger.error(e);
    }
  }
  getExpiration(e) {
    const t = this.expirations.get(e);
    if (!t) {
      const { message: i3 } = N("NO_MATCHING_KEY", `${this.name}: ${e}`);
      throw this.logger.error(i3), new Error(i3);
    }
    return t;
  }
  checkExpiry(e, t) {
    const { expiry: i3 } = t;
    (0, import_time4.toMiliseconds)(i3) - Date.now() <= 0 && this.expire(e, t);
  }
  expire(e, t) {
    this.expirations.delete(e), this.events.emit(w3.expired, { target: e, expiration: t });
  }
  checkExpirations() {
    this.core.relayer.connected && this.expirations.forEach((e, t) => this.checkExpiry(t, e));
  }
  registerEventListeners() {
    this.core.heartbeat.on(import_heartbeat.HEARTBEAT_EVENTS.pulse, () => this.checkExpirations()), this.events.on(w3.created, (e) => {
      const t = w3.created;
      this.logger.info(`Emitting ${t}`), this.logger.debug({ type: "event", event: t, data: e }), this.persist();
    }), this.events.on(w3.expired, (e) => {
      const t = w3.expired;
      this.logger.info(`Emitting ${t}`), this.logger.debug({ type: "event", event: t, data: e }), this.persist();
    }), this.events.on(w3.deleted, (e) => {
      const t = w3.deleted;
      this.logger.info(`Emitting ${t}`), this.logger.debug({ type: "event", event: t, data: e }), this.persist();
    });
  }
  isInitialized() {
    if (!this.initialized) {
      const { message: e } = N("NOT_INITIALIZED", this.name);
      throw new Error(e);
    }
  }
};
var Ft = class extends y {
  constructor(e, t) {
    super(e, t), this.projectId = e, this.logger = t, this.name = J2, this.initialized = false, this.init = async (i3) => {
      $e() || !je() || (this.verifyUrl = (i3 == null ? void 0 : i3.verifyUrl) || de3, await this.createIframe());
    }, this.register = async (i3) => {
      var s;
      if (this.initialized || await this.init(), !!this.iframe)
        try {
          (s = this.iframe.contentWindow) == null || s.postMessage(i3.attestationId, this.verifyUrl), this.logger.info(`postMessage sent: ${i3.attestationId} ${this.verifyUrl}`);
        } catch {
        }
    }, this.resolve = async (i3) => {
      var s;
      if (this.isDevEnv)
        return "";
      this.logger.info(`resolving attestation: ${i3.attestationId}`);
      const n2 = this.startAbortTimer(import_time4.FIVE_SECONDS), a2 = await fetch(`${this.verifyUrl}/attestation/${i3.attestationId}`, { signal: this.abortController.signal });
      return clearTimeout(n2), a2.status === 200 ? (s = await a2.json()) == null ? void 0 : s.origin : "";
    }, this.createIframe = async () => {
      try {
        await Promise.race([new Promise((i3, s) => {
          if (document.getElementById(J2))
            return i3();
          const n2 = document.createElement("iframe");
          n2.setAttribute("id", J2), n2.setAttribute("src", `${this.verifyUrl}/${this.projectId}`), n2.style.display = "none", n2.addEventListener("load", () => {
            this.initialized = true, i3();
          }), n2.addEventListener("error", (a2) => {
            s(a2);
          }), document.body.append(n2), this.iframe = n2;
        }), new Promise((i3) => {
          setTimeout(() => i3("iframe load timeout"), (0, import_time4.toMiliseconds)(import_time4.ONE_SECOND / 2));
        })]);
      } catch (i3) {
        this.logger.error(`Verify iframe failed to load: ${this.verifyUrl}`), this.logger.error(i3);
      }
    }, this.logger = (0, import_logger.generateChildLogger)(t, this.name), this.verifyUrl = de3, this.abortController = new AbortController(), this.isDevEnv = ee() && define_process_env_default.IS_VITEST;
  }
  get context() {
    return (0, import_logger.getLoggerContext)(this.logger);
  }
  startAbortTimer(e) {
    return setTimeout(() => this.abortController.abort(), (0, import_time4.toMiliseconds)(e));
  }
};
var Cr = Object.defineProperty;
var $t = Object.getOwnPropertySymbols;
var _r = Object.prototype.hasOwnProperty;
var Rr = Object.prototype.propertyIsEnumerable;
var Mt = (r, e, t) => e in r ? Cr(r, e, { enumerable: true, configurable: true, writable: true, value: t }) : r[e] = t;
var Kt = (r, e) => {
  for (var t in e || (e = {}))
    _r.call(e, t) && Mt(r, t, e[t]);
  if ($t)
    for (var t of $t(e))
      Rr.call(e, t) && Mt(r, t, e[t]);
  return r;
};
var H = class extends n {
  constructor(e) {
    super(e), this.protocol = ce3, this.version = Ge2, this.name = Y2, this.events = new import_events5.EventEmitter(), this.initialized = false, this.on = (i3, s) => this.events.on(i3, s), this.once = (i3, s) => this.events.once(i3, s), this.off = (i3, s) => this.events.off(i3, s), this.removeListener = (i3, s) => this.events.removeListener(i3, s), this.projectId = e == null ? void 0 : e.projectId, this.relayUrl = (e == null ? void 0 : e.relayUrl) || le;
    const t = typeof (e == null ? void 0 : e.logger) < "u" && typeof (e == null ? void 0 : e.logger) != "string" ? e.logger : (0, import_logger.pino)((0, import_logger.getDefaultLoggerOptions)({ level: (e == null ? void 0 : e.logger) || Ye.logger }));
    this.logger = (0, import_logger.generateChildLogger)(t, this.name), this.heartbeat = new import_heartbeat.HeartBeat(), this.crypto = new vt(this, this.logger, e == null ? void 0 : e.keychain), this.history = new Ut2(this, this.logger), this.expirer = new Lt(this, this.logger), this.storage = e != null && e.storage ? e.storage : new import_keyvaluestorage.default(Kt(Kt({}, Je), e == null ? void 0 : e.storageOptions)), this.relayer = new Pt({ core: this, logger: this.logger, relayUrl: this.relayUrl, projectId: this.projectId }), this.pairing = new Nt(this, this.logger), this.verify = new Ft(this.projectId || "", this.logger);
  }
  static async init(e) {
    const t = new H(e);
    await t.initialize();
    const i3 = await t.crypto.getClientId();
    return await t.storage.setItem(lt2, i3), t;
  }
  get context() {
    return (0, import_logger.getLoggerContext)(this.logger);
  }
  async start() {
    this.initialized || await this.initialize();
  }
  async initialize() {
    this.logger.trace("Initialized");
    try {
      await this.crypto.init(), await this.history.init(), await this.expirer.init(), await this.relayer.init(), await this.heartbeat.init(), await this.pairing.init(), this.initialized = true, this.logger.info("Core Initialization Success");
    } catch (e) {
      throw this.logger.warn(`Core Initialization Failure at epoch ${Date.now()}`, e), this.logger.error(e.message), e;
    }
  }
};
var Tr = H;

// node_modules/@walletconnect/sign-client/dist/index.es.js
var import_logger2 = __toESM(require_cjs6());

// node_modules/@walletconnect/sign-client/node_modules/@walletconnect/types/dist/index.es.js
init_define_process_env();
init_esm();
var import_events7 = __toESM(require_events());
var b2 = class {
  constructor(s) {
    this.opts = s, this.protocol = "wc", this.version = 2;
  }
};
var S = class {
  constructor(s) {
    this.client = s;
  }
};

// node_modules/@walletconnect/sign-client/node_modules/@walletconnect/utils/dist/index.es.js
init_define_process_env();
var import_chacha20poly13053 = __toESM(require_chacha20poly1305());
var import_hkdf3 = __toESM(require_hkdf());
var import_random4 = __toESM(require_random());
var import_sha2563 = __toESM(require_sha256());
var ue4 = __toESM(require_x25519());

// node_modules/@walletconnect/sign-client/node_modules/detect-browser/es/index.js
init_define_process_env();
var BrowserInfo3 = function() {
  function BrowserInfo5(name2, version2, os3) {
    this.name = name2;
    this.version = version2;
    this.os = os3;
    this.type = "browser";
  }
  return BrowserInfo5;
}();
var NodeInfo3 = function() {
  function NodeInfo5(version2) {
    this.version = version2;
    this.type = "node";
    this.name = "node";
    this.os = process.platform;
  }
  return NodeInfo5;
}();
var SearchBotDeviceInfo3 = function() {
  function SearchBotDeviceInfo5(name2, version2, os3, bot) {
    this.name = name2;
    this.version = version2;
    this.os = os3;
    this.bot = bot;
    this.type = "bot-device";
  }
  return SearchBotDeviceInfo5;
}();
var BotInfo3 = function() {
  function BotInfo5() {
    this.type = "bot";
    this.bot = true;
    this.name = "bot";
    this.version = null;
    this.os = null;
  }
  return BotInfo5;
}();
var ReactNativeInfo3 = function() {
  function ReactNativeInfo5() {
    this.type = "react-native";
    this.name = "react-native";
    this.version = null;
    this.os = null;
  }
  return ReactNativeInfo5;
}();

// node_modules/@walletconnect/sign-client/node_modules/@walletconnect/utils/dist/index.es.js
var import_time5 = __toESM(require_cjs());
var import_window_getters3 = __toESM(require_cjs10());
var import_window_metadata3 = __toESM(require_cjs11());
var C4 = __toESM(require_query_string3());
function V(e, n2) {
  return e.includes(":") ? [e] : n2.chains || [];
}
var f3 = "base16";
var k2 = "utf8";
var A2 = 1;
function $n2(e) {
  const n2 = (0, import_sha2563.hash)(fromString2(e, k2));
  return toString2(n2, f3);
}
var Ue3 = "ReactNative";
var b3 = { reactNative: "react-native", node: "node", browser: "browser", unknown: "unknown" };
function ee2() {
  return typeof process < "u" && typeof process.versions < "u" && typeof process.versions.node < "u";
}
function $e3() {
  return !(0, import_window_getters3.getDocument)() && !!(0, import_window_getters3.getNavigator)() && navigator.product === Ue3;
}
function je3() {
  return !ee2() && !!(0, import_window_getters3.getNavigator)();
}
function x2() {
  return $e3() ? b3.reactNative : ee2() ? b3.node : je3() ? b3.browser : b3.unknown;
}
function Fn() {
  return (0, import_window_metadata3.getWindowMetadata)() || { name: "", description: "", url: "", icons: [""] };
}
function O2(e, n2) {
  return e.filter((t) => n2.includes(t)).length === e.length;
}
function Xn2(e = import_time5.FIVE_MINUTES, n2) {
  const t = (0, import_time5.toMiliseconds)(e || import_time5.FIVE_MINUTES);
  let r, o, s;
  return { resolve: (i3) => {
    s && r && (clearTimeout(s), r(i3));
  }, reject: (i3) => {
    s && o && (clearTimeout(s), o(i3));
  }, done: () => new Promise((i3, l) => {
    s = setTimeout(() => {
      l(new Error(n2));
    }, t), r = i3, o = l;
  }) };
}
function rt3(e) {
  const [n2, t] = e.split(":"), r = { id: void 0, topic: void 0 };
  if (n2 === "topic" && typeof t == "string")
    r.topic = t;
  else if (n2 === "id" && Number.isInteger(Number(t)))
    r.id = Number(t);
  else
    throw new Error(`Invalid target, expected id:number or topic:string, got ${n2}:${t}`);
  return r;
}
function ot3(e, n2) {
  return (0, import_time5.fromMiliseconds)((n2 || Date.now()) + (0, import_time5.toMiliseconds)(e));
}
function st3(e) {
  return Date.now() >= (0, import_time5.toMiliseconds)(e);
}
function it3(e, n2) {
  return `${e}${n2 ? `:${n2}` : ""}`;
}
async function ct2({ id: e, topic: n2, wcDeepLink: t }) {
  try {
    if (!t)
      return;
    const r = typeof t == "string" ? JSON.parse(t) : t;
    let o = r == null ? void 0 : r.href;
    if (typeof o != "string")
      return;
    o.endsWith("/") && (o = o.slice(0, -1));
    const s = `${o}/wc?requestId=${e}&sessionTopic=${n2}`, i3 = x2();
    i3 === b3.browser ? window.open(s, "_self", "noreferrer noopener") : i3 === b3.reactNative && typeof (global == null ? void 0 : global.Linking) < "u" && await global.Linking.openURL(s);
  } catch (r) {
    console.error(r);
  }
}
function R(e) {
  const n2 = [];
  return e.forEach((t) => {
    const [r, o] = t.split(":");
    n2.push(`${r}:${o}`);
  }), n2;
}
function Ye2(e) {
  const n2 = [];
  return Object.values(e).forEach((t) => {
    n2.push(...R(t.accounts));
  }), n2;
}
function Je2(e, n2) {
  const t = [];
  return Object.values(e).forEach((r) => {
    R(r.accounts).includes(n2) && t.push(...r.methods);
  }), t;
}
function Qe2(e, n2) {
  const t = [];
  return Object.values(e).forEach((r) => {
    R(r.accounts).includes(n2) && t.push(...r.events);
  }), t;
}
function St2(e, n2) {
  const t = sn(e, n2);
  if (t)
    throw new Error(t.message);
  const r = {};
  for (const [o, s] of Object.entries(e))
    r[o] = { methods: s.methods, events: s.events, chains: s.accounts.map((i3) => `${i3.split(":")[0]}:${i3.split(":")[1]}`) };
  return r;
}
var It4 = { INVALID_METHOD: { message: "Invalid method.", code: 1001 }, INVALID_EVENT: { message: "Invalid event.", code: 1002 }, INVALID_UPDATE_REQUEST: { message: "Invalid update request.", code: 1003 }, INVALID_EXTEND_REQUEST: { message: "Invalid extend request.", code: 1004 }, INVALID_SESSION_SETTLE_REQUEST: { message: "Invalid session settle request.", code: 1005 }, UNAUTHORIZED_METHOD: { message: "Unauthorized method.", code: 3001 }, UNAUTHORIZED_EVENT: { message: "Unauthorized event.", code: 3002 }, UNAUTHORIZED_UPDATE_REQUEST: { message: "Unauthorized update request.", code: 3003 }, UNAUTHORIZED_EXTEND_REQUEST: { message: "Unauthorized extend request.", code: 3004 }, USER_REJECTED: { message: "User rejected.", code: 5e3 }, USER_REJECTED_CHAINS: { message: "User rejected chains.", code: 5001 }, USER_REJECTED_METHODS: { message: "User rejected methods.", code: 5002 }, USER_REJECTED_EVENTS: { message: "User rejected events.", code: 5003 }, UNSUPPORTED_CHAINS: { message: "Unsupported chains.", code: 5100 }, UNSUPPORTED_METHODS: { message: "Unsupported methods.", code: 5101 }, UNSUPPORTED_EVENTS: { message: "Unsupported events.", code: 5102 }, UNSUPPORTED_ACCOUNTS: { message: "Unsupported accounts.", code: 5103 }, UNSUPPORTED_NAMESPACE_KEY: { message: "Unsupported namespace key.", code: 5104 }, USER_DISCONNECTED: { message: "User disconnected.", code: 6e3 }, SESSION_SETTLEMENT_FAILED: { message: "Session settlement failed.", code: 7e3 }, WC_METHOD_UNSUPPORTED: { message: "Unsupported wc_ method.", code: 10001 } };
var Tt3 = { NOT_INITIALIZED: { message: "Not initialized.", code: 1 }, NO_MATCHING_KEY: { message: "No matching key.", code: 2 }, RESTORE_WILL_OVERRIDE: { message: "Restore will override.", code: 3 }, RESUBSCRIBED: { message: "Resubscribed.", code: 4 }, MISSING_OR_INVALID: { message: "Missing or invalid.", code: 5 }, EXPIRED: { message: "Expired.", code: 6 }, UNKNOWN_TYPE: { message: "Unknown type.", code: 7 }, MISMATCHED_TOPIC: { message: "Mismatched topic.", code: 8 }, NON_CONFORMING_NAMESPACES: { message: "Non conforming namespaces.", code: 9 } };
function N11(e, n2) {
  const { message: t, code: r } = Tt3[e];
  return { message: n2 ? `${t} ${n2}` : t, code: r };
}
function w4(e, n2) {
  const { message: t, code: r } = It4[e];
  return { message: n2 ? `${t} ${n2}` : t, code: r };
}
function j3(e, n2) {
  return Array.isArray(e) ? typeof n2 < "u" && e.length ? e.every(n2) : true : false;
}
function F2(e) {
  return Object.getPrototypeOf(e) === Object.prototype && Object.keys(e).length;
}
function P2(e) {
  return typeof e > "u";
}
function m2(e, n2) {
  return n2 && P2(e) ? true : typeof e == "string" && !!e.trim().length;
}
function H2(e, n2) {
  return n2 && P2(e) ? true : typeof e == "number" && !isNaN(e);
}
function Rt2(e, n2) {
  const { requiredNamespaces: t } = n2, r = Object.keys(e.namespaces), o = Object.keys(t);
  let s = true;
  return O2(o, r) ? (r.forEach((i3) => {
    const { accounts: l, methods: d2, events: c3 } = e.namespaces[i3], u4 = R(l), a2 = t[i3];
    (!O2(V(i3, a2), u4) || !O2(a2.methods, d2) || !O2(a2.events, c3)) && (s = false);
  }), s) : false;
}
function q(e) {
  return m2(e, false) && e.includes(":") ? e.split(":").length === 2 : false;
}
function Xe2(e) {
  if (m2(e, false) && e.includes(":")) {
    const n2 = e.split(":");
    if (n2.length === 3) {
      const t = n2[0] + ":" + n2[1];
      return !!n2[2] && q(t);
    }
  }
  return false;
}
function _t2(e, n2) {
  let t = null;
  return m2(e == null ? void 0 : e.publicKey, false) || (t = N11("MISSING_OR_INVALID", `${n2} controller public key should be a string`)), t;
}
function oe2(e) {
  let n2 = true;
  return j3(e) ? e.length && (n2 = e.every((t) => m2(t, false))) : n2 = false, n2;
}
function en(e, n2, t) {
  let r = null;
  return j3(n2) ? n2.forEach((o) => {
    r || (!q(o) || !o.includes(e)) && (r = w4("UNSUPPORTED_CHAINS", `${t}, chain ${o} should be a string and conform to "namespace:chainId" format`));
  }) : r = w4("UNSUPPORTED_CHAINS", `${t}, chains ${n2} should be an array of strings conforming to "namespace:chainId" format`), r;
}
function nn(e, n2) {
  let t = null;
  return Object.entries(e).forEach(([r, o]) => {
    if (t)
      return;
    const s = en(r, V(r, o), `${n2} requiredNamespace`);
    s && (t = s);
  }), t;
}
function tn(e, n2) {
  let t = null;
  return j3(e) ? e.forEach((r) => {
    t || Xe2(r) || (t = w4("UNSUPPORTED_ACCOUNTS", `${n2}, account ${r} should be a string and conform to "namespace:chainId:address" format`));
  }) : t = w4("UNSUPPORTED_ACCOUNTS", `${n2}, accounts should be an array of strings conforming to "namespace:chainId:address" format`), t;
}
function rn(e, n2) {
  let t = null;
  return Object.values(e).forEach((r) => {
    if (t)
      return;
    const o = tn(r == null ? void 0 : r.accounts, `${n2} namespace`);
    o && (t = o);
  }), t;
}
function on(e, n2) {
  let t = null;
  return oe2(e == null ? void 0 : e.methods) ? oe2(e == null ? void 0 : e.events) || (t = w4("UNSUPPORTED_EVENTS", `${n2}, events should be an array of strings or empty array for no events`)) : t = w4("UNSUPPORTED_METHODS", `${n2}, methods should be an array of strings or empty array for no methods`), t;
}
function se(e, n2) {
  let t = null;
  return Object.values(e).forEach((r) => {
    if (t)
      return;
    const o = on(r, `${n2}, namespace`);
    o && (t = o);
  }), t;
}
function $t2(e, n2, t) {
  let r = null;
  if (e && F2(e)) {
    const o = se(e, n2);
    o && (r = o);
    const s = nn(e, n2);
    s && (r = s);
  } else
    r = N11("MISSING_OR_INVALID", `${n2}, ${t} should be an object with data`);
  return r;
}
function sn(e, n2) {
  let t = null;
  if (e && F2(e)) {
    const r = se(e, n2);
    r && (t = r);
    const o = rn(e, n2);
    o && (t = o);
  } else
    t = N11("MISSING_OR_INVALID", `${n2}, namespaces should be an object with data`);
  return t;
}
function cn(e) {
  return m2(e.protocol, true);
}
function jt2(e, n2) {
  let t = false;
  return n2 && !e ? t = true : e && j3(e) && e.length && e.forEach((r) => {
    t = cn(r);
  }), t;
}
function Ct2(e) {
  return typeof e == "number";
}
function Dt3(e) {
  return typeof e < "u" && typeof e !== null;
}
function Vt(e) {
  return !(!e || typeof e != "object" || !e.code || !H2(e.code, false) || !e.message || !m2(e.message, false));
}
function Mt2(e) {
  return !(P2(e) || !m2(e.method, false));
}
function Kt2(e) {
  return !(P2(e) || P2(e.result) && P2(e.error) || !H2(e.id, false) || !m2(e.jsonrpc, false));
}
function kt2(e) {
  return !(P2(e) || !m2(e.name, false));
}
function Lt2(e, n2) {
  return !(!q(n2) || !Ye2(e).includes(n2));
}
function xt2(e, n2, t) {
  return m2(t, false) ? Je2(e, n2).includes(t) : false;
}
function Ft2(e, n2, t) {
  return m2(t, false) ? Qe2(e, n2).includes(t) : false;
}
function an(e, n2, t) {
  let r = null;
  const o = Ht(e), s = qt(n2), i3 = Object.keys(o), l = Object.keys(s), d2 = un(Object.keys(e)), c3 = un(Object.keys(n2)), u4 = d2.filter((a2) => !c3.includes(a2));
  return u4.length && (r = N11("NON_CONFORMING_NAMESPACES", `${t} namespaces keys don't satisfy requiredNamespaces.
      Required: ${u4.toString()}
      Received: ${Object.keys(n2).toString()}`)), O2(i3, l) || (r = N11("NON_CONFORMING_NAMESPACES", `${t} namespaces chains don't satisfy required namespaces.
      Required: ${i3.toString()}
      Approved: ${l.toString()}`)), Object.keys(n2).forEach((a2) => {
    if (!a2.includes(":") || r)
      return;
    const g3 = R(n2[a2].accounts);
    g3.includes(a2) || (r = N11("NON_CONFORMING_NAMESPACES", `${t} namespaces accounts don't satisfy namespace accounts for ${a2}
        Required: ${a2}
        Approved: ${g3.toString()}`));
  }), i3.forEach((a2) => {
    r || (O2(o[a2].methods, s[a2].methods) ? O2(o[a2].events, s[a2].events) || (r = N11("NON_CONFORMING_NAMESPACES", `${t} namespaces events don't satisfy namespace events for ${a2}`)) : r = N11("NON_CONFORMING_NAMESPACES", `${t} namespaces methods don't satisfy namespace methods for ${a2}`));
  }), r;
}
function Ht(e) {
  const n2 = {};
  return Object.keys(e).forEach((t) => {
    var r;
    t.includes(":") ? n2[t] = e[t] : (r = e[t].chains) == null || r.forEach((o) => {
      n2[o] = { methods: e[t].methods, events: e[t].events };
    });
  }), n2;
}
function un(e) {
  return [...new Set(e.map((n2) => n2.includes(":") ? n2.split(":")[0] : n2))];
}
function qt(e) {
  const n2 = {};
  return Object.keys(e).forEach((t) => {
    if (t.includes(":"))
      n2[t] = e[t];
    else {
      const r = R(e[t].accounts);
      r == null ? void 0 : r.forEach((o) => {
        n2[o] = { accounts: e[t].accounts.filter((s) => s.includes(`${o}:`)), methods: e[t].methods, events: e[t].events };
      });
    }
  }), n2;
}
function zt2(e, n2) {
  return H2(e, false) && e <= n2.max && e >= n2.min;
}

// node_modules/@walletconnect/sign-client/dist/index.es.js
var import_events8 = __toESM(require_events());
var import_time6 = __toESM(require_cjs());
var j4 = "wc";
var J3 = 2;
var X = "client";
var b4 = `${j4}@${J3}:${X}:`;
var G2 = { name: X, logger: "error", controller: false, relayUrl: "wss://relay.walletconnect.com" };
var ee3 = "WALLETCONNECT_DEEPLINK_CHOICE";
var se2 = "proposal";
var te = "Proposal expired";
var ie4 = "session";
var C5 = import_time6.SEVEN_DAYS;
var ne3 = "engine";
var O3 = { wc_sessionPropose: { req: { ttl: import_time6.FIVE_MINUTES, prompt: true, tag: 1100 }, res: { ttl: import_time6.FIVE_MINUTES, prompt: false, tag: 1101 } }, wc_sessionSettle: { req: { ttl: import_time6.FIVE_MINUTES, prompt: false, tag: 1102 }, res: { ttl: import_time6.FIVE_MINUTES, prompt: false, tag: 1103 } }, wc_sessionUpdate: { req: { ttl: import_time6.ONE_DAY, prompt: false, tag: 1104 }, res: { ttl: import_time6.ONE_DAY, prompt: false, tag: 1105 } }, wc_sessionExtend: { req: { ttl: import_time6.ONE_DAY, prompt: false, tag: 1106 }, res: { ttl: import_time6.ONE_DAY, prompt: false, tag: 1107 } }, wc_sessionRequest: { req: { ttl: import_time6.FIVE_MINUTES, prompt: true, tag: 1108 }, res: { ttl: import_time6.FIVE_MINUTES, prompt: false, tag: 1109 } }, wc_sessionEvent: { req: { ttl: import_time6.FIVE_MINUTES, prompt: true, tag: 1110 }, res: { ttl: import_time6.FIVE_MINUTES, prompt: false, tag: 1111 } }, wc_sessionDelete: { req: { ttl: import_time6.ONE_DAY, prompt: false, tag: 1112 }, res: { ttl: import_time6.ONE_DAY, prompt: false, tag: 1113 } }, wc_sessionPing: { req: { ttl: import_time6.THIRTY_SECONDS, prompt: false, tag: 1114 }, res: { ttl: import_time6.THIRTY_SECONDS, prompt: false, tag: 1115 } } };
var $2 = { min: import_time6.FIVE_MINUTES, max: import_time6.SEVEN_DAYS };
var re2 = "request";
var oe3 = ["wc_sessionPropose", "wc_sessionRequest", "wc_authRequest"];
var Ze2 = Object.defineProperty;
var es2 = Object.defineProperties;
var ss2 = Object.getOwnPropertyDescriptors;
var ae5 = Object.getOwnPropertySymbols;
var ts2 = Object.prototype.hasOwnProperty;
var is2 = Object.prototype.propertyIsEnumerable;
var ce5 = (d2, n2, e) => n2 in d2 ? Ze2(d2, n2, { enumerable: true, configurable: true, writable: true, value: e }) : d2[n2] = e;
var w5 = (d2, n2) => {
  for (var e in n2 || (n2 = {}))
    ts2.call(n2, e) && ce5(d2, e, n2[e]);
  if (ae5)
    for (var e of ae5(n2))
      is2.call(n2, e) && ce5(d2, e, n2[e]);
  return d2;
};
var H3 = (d2, n2) => es2(d2, ss2(n2));
var ns2 = class extends S {
  constructor(n2) {
    super(n2), this.name = ne3, this.events = new import_events8.default(), this.initialized = false, this.ignoredPayloadTypes = [A2], this.init = async () => {
      this.initialized || (await this.cleanup(), this.registerRelayerEvents(), this.registerExpirerEvents(), this.client.core.pairing.register({ methods: Object.keys(O3) }), this.initialized = true);
    }, this.connect = async (e) => {
      this.isInitialized();
      const s = H3(w5({}, e), { requiredNamespaces: e.requiredNamespaces || {}, optionalNamespaces: e.optionalNamespaces || {} });
      await this.isValidConnect(s);
      const { pairingTopic: t, requiredNamespaces: i3, optionalNamespaces: r, sessionProperties: o, relays: a2 } = s;
      let l = t, h2, I2 = false;
      if (l && (I2 = this.client.core.pairing.pairings.get(l).active), !l || !I2) {
        const { topic: v, uri: y3 } = await this.client.core.pairing.create();
        l = v, h2 = y3;
      }
      const g3 = await this.client.core.crypto.generateKeyPair(), E3 = w5({ requiredNamespaces: i3, optionalNamespaces: r, relays: a2 != null ? a2 : [{ protocol: st2 }], proposer: { publicKey: g3, metadata: this.client.metadata } }, o && { sessionProperties: o }), { reject: m4, resolve: V3, done: U3 } = Xn2(import_time6.FIVE_MINUTES, te);
      if (this.events.once(it3("session_connect"), async ({ error: v, session: y3 }) => {
        if (v)
          m4(v);
        else if (y3) {
          y3.self.publicKey = g3;
          const F4 = H3(w5({}, y3), { requiredNamespaces: y3.requiredNamespaces, optionalNamespaces: y3.optionalNamespaces });
          await this.client.session.set(y3.topic, F4), await this.setExpiry(y3.topic, y3.expiry), l && await this.client.core.pairing.updateMetadata({ topic: l, metadata: y3.peer.metadata }), V3(F4);
        }
      }), !l) {
        const { message: v } = N11("NO_MATCHING_KEY", `connect() pairing topic: ${l}`);
        throw new Error(v);
      }
      const A3 = await this.sendRequest(l, "wc_sessionPropose", E3), le2 = ot3(import_time6.FIVE_MINUTES);
      return await this.setProposal(A3, w5({ id: A3, expiry: le2 }, E3)), { uri: h2, approval: U3 };
    }, this.pair = async (e) => (this.isInitialized(), await this.client.core.pairing.pair(e)), this.approve = async (e) => {
      this.isInitialized(), await this.isValidApprove(e);
      const { id: s, relayProtocol: t, namespaces: i3, sessionProperties: r } = e, o = this.client.proposal.get(s);
      let { pairingTopic: a2, proposer: l, requiredNamespaces: h2, optionalNamespaces: I2 } = o;
      a2 = a2 || "", F2(h2) || (h2 = St2(i3, "approve()"));
      const g3 = await this.client.core.crypto.generateKeyPair(), E3 = l.publicKey, m4 = await this.client.core.crypto.generateSharedKey(g3, E3);
      a2 && s && (await this.client.core.pairing.updateMetadata({ topic: a2, metadata: l.metadata }), await this.sendResult(s, a2, { relay: { protocol: t != null ? t : "irn" }, responderPublicKey: g3 }), await this.client.proposal.delete(s, w4("USER_DISCONNECTED")), await this.client.core.pairing.activate({ topic: a2 }));
      const V3 = w5({ relay: { protocol: t != null ? t : "irn" }, namespaces: i3, requiredNamespaces: h2, optionalNamespaces: I2, pairingTopic: a2, controller: { publicKey: g3, metadata: this.client.metadata }, expiry: ot3(C5) }, r && { sessionProperties: r });
      await this.client.core.relayer.subscribe(m4), await this.sendRequest(m4, "wc_sessionSettle", V3);
      const U3 = H3(w5({}, V3), { topic: m4, pairingTopic: a2, acknowledged: false, self: V3.controller, peer: { publicKey: l.publicKey, metadata: l.metadata }, controller: g3 });
      return await this.client.session.set(m4, U3), await this.setExpiry(m4, ot3(C5)), { topic: m4, acknowledged: () => new Promise((A3) => setTimeout(() => A3(this.client.session.get(m4)), 500)) };
    }, this.reject = async (e) => {
      this.isInitialized(), await this.isValidReject(e);
      const { id: s, reason: t } = e, { pairingTopic: i3 } = this.client.proposal.get(s);
      i3 && (await this.sendError(s, i3, t), await this.client.proposal.delete(s, w4("USER_DISCONNECTED")));
    }, this.update = async (e) => {
      this.isInitialized(), await this.isValidUpdate(e);
      const { topic: s, namespaces: t } = e, i3 = await this.sendRequest(s, "wc_sessionUpdate", { namespaces: t }), { done: r, resolve: o, reject: a2 } = Xn2();
      return this.events.once(it3("session_update", i3), ({ error: l }) => {
        l ? a2(l) : o();
      }), await this.client.session.update(s, { namespaces: t }), { acknowledged: r };
    }, this.extend = async (e) => {
      this.isInitialized(), await this.isValidExtend(e);
      const { topic: s } = e, t = await this.sendRequest(s, "wc_sessionExtend", {}), { done: i3, resolve: r, reject: o } = Xn2();
      return this.events.once(it3("session_extend", t), ({ error: a2 }) => {
        a2 ? o(a2) : r();
      }), await this.setExpiry(s, ot3(C5)), { acknowledged: i3 };
    }, this.request = async (e) => {
      this.isInitialized(), await this.isValidRequest(e);
      const { chainId: s, request: t, topic: i3, expiry: r } = e, o = await this.sendRequest(i3, "wc_sessionRequest", { request: t, chainId: s }, r), { done: a2, resolve: l, reject: h2 } = Xn2(r);
      this.events.once(it3("session_request", o), ({ error: g3, result: E3 }) => {
        g3 ? h2(g3) : l(E3);
      }), this.client.events.emit("session_request_sent", { topic: i3, request: t, chainId: s, id: o });
      const I2 = await this.client.core.storage.getItem(ee3);
      return ct2({ id: o, topic: i3, wcDeepLink: I2 }), await a2();
    }, this.respond = async (e) => {
      this.isInitialized(), await this.isValidRespond(e);
      const { topic: s, response: t } = e, { id: i3 } = t;
      isJsonRpcResult(t) ? await this.sendResult(i3, s, t.result) : isJsonRpcError(t) && await this.sendError(i3, s, t.error), this.deletePendingSessionRequest(e.response.id, { message: "fulfilled", code: 0 });
    }, this.ping = async (e) => {
      this.isInitialized(), await this.isValidPing(e);
      const { topic: s } = e;
      if (this.client.session.keys.includes(s)) {
        const t = await this.sendRequest(s, "wc_sessionPing", {}), { done: i3, resolve: r, reject: o } = Xn2();
        this.events.once(it3("session_ping", t), ({ error: a2 }) => {
          a2 ? o(a2) : r();
        }), await i3();
      } else
        this.client.core.pairing.pairings.keys.includes(s) && await this.client.core.pairing.ping({ topic: s });
    }, this.emit = async (e) => {
      this.isInitialized(), await this.isValidEmit(e);
      const { topic: s, event: t, chainId: i3 } = e;
      await this.sendRequest(s, "wc_sessionEvent", { event: t, chainId: i3 });
    }, this.disconnect = async (e) => {
      this.isInitialized(), await this.isValidDisconnect(e);
      const { topic: s } = e;
      if (this.client.session.keys.includes(s)) {
        const t = getBigIntRpcId().toString();
        let i3;
        const r = (o) => {
          (o == null ? void 0 : o.id.toString()) === t && (this.client.core.relayer.events.removeListener(g2.message_ack, r), i3());
        };
        await Promise.all([new Promise((o) => {
          i3 = o, this.client.core.relayer.on(g2.message_ack, r);
        }), this.sendRequest(s, "wc_sessionDelete", w4("USER_DISCONNECTED"), void 0, t)]), await this.deleteSession(s);
      } else
        await this.client.core.pairing.disconnect({ topic: s });
    }, this.find = (e) => (this.isInitialized(), this.client.session.getAll().filter((s) => Rt2(s, e))), this.getPendingSessionRequests = () => (this.isInitialized(), this.client.pendingRequest.getAll()), this.cleanupDuplicatePairings = async (e) => {
      if (e.pairingTopic)
        try {
          const s = this.client.core.pairing.pairings.get(e.pairingTopic), t = this.client.core.pairing.pairings.getAll().filter((i3) => {
            var r, o;
            return ((r = i3.peerMetadata) == null ? void 0 : r.url) && ((o = i3.peerMetadata) == null ? void 0 : o.url) === e.peer.metadata.url && i3.topic && i3.topic !== s.topic;
          });
          if (t.length === 0)
            return;
          this.client.logger.info(`Cleaning up ${t.length} duplicate pairing(s)`), await Promise.all(t.map((i3) => this.client.core.pairing.disconnect({ topic: i3.topic }))), this.client.logger.info("Duplicate pairings clean up finished");
        } catch (s) {
          this.client.logger.error(s);
        }
    }, this.deleteSession = async (e, s) => {
      const { self: t } = this.client.session.get(e);
      await this.client.core.relayer.unsubscribe(e), this.client.session.delete(e, w4("USER_DISCONNECTED")), this.client.core.crypto.keychain.has(t.publicKey) && await this.client.core.crypto.deleteKeyPair(t.publicKey), this.client.core.crypto.keychain.has(e) && await this.client.core.crypto.deleteSymKey(e), s || this.client.core.expirer.del(e);
    }, this.deleteProposal = async (e, s) => {
      await Promise.all([this.client.proposal.delete(e, w4("USER_DISCONNECTED")), s ? Promise.resolve() : this.client.core.expirer.del(e)]);
    }, this.deletePendingSessionRequest = async (e, s, t = false) => {
      await Promise.all([this.client.pendingRequest.delete(e, s), t ? Promise.resolve() : this.client.core.expirer.del(e)]);
    }, this.setExpiry = async (e, s) => {
      this.client.session.keys.includes(e) && await this.client.session.update(e, { expiry: s }), this.client.core.expirer.set(e, s);
    }, this.setProposal = async (e, s) => {
      await this.client.proposal.set(e, s), this.client.core.expirer.set(e, s.expiry);
    }, this.setPendingSessionRequest = async (e) => {
      const s = O3.wc_sessionRequest.req.ttl, { id: t, topic: i3, params: r } = e;
      await this.client.pendingRequest.set(t, { id: t, topic: i3, params: r }), s && this.client.core.expirer.set(t, ot3(s));
    }, this.sendRequest = async (e, s, t, i3, r) => {
      const o = formatJsonRpcRequest(s, t);
      if (je3() && oe3.includes(s)) {
        const h2 = $n2(JSON.stringify(o));
        await this.client.core.verify.register({ attestationId: h2 });
      }
      const a2 = await this.client.core.crypto.encode(e, o), l = O3[s].req;
      return i3 && (l.ttl = i3), r && (l.id = r), this.client.core.history.set(e, o), this.client.core.relayer.publish(e, a2, l), o.id;
    }, this.sendResult = async (e, s, t) => {
      const i3 = formatJsonRpcResult(e, t), r = await this.client.core.crypto.encode(s, i3), o = await this.client.core.history.get(s, e), a2 = O3[o.request.method].res;
      this.client.core.relayer.publish(s, r, a2), await this.client.core.history.resolve(i3);
    }, this.sendError = async (e, s, t) => {
      const i3 = formatJsonRpcError(e, t), r = await this.client.core.crypto.encode(s, i3), o = await this.client.core.history.get(s, e), a2 = O3[o.request.method].res;
      this.client.core.relayer.publish(s, r, a2), await this.client.core.history.resolve(i3);
    }, this.cleanup = async () => {
      const e = [], s = [];
      this.client.session.getAll().forEach((t) => {
        st3(t.expiry) && e.push(t.topic);
      }), this.client.proposal.getAll().forEach((t) => {
        st3(t.expiry) && s.push(t.id);
      }), await Promise.all([...e.map((t) => this.deleteSession(t)), ...s.map((t) => this.deleteProposal(t))]);
    }, this.onRelayEventRequest = (e) => {
      const { topic: s, payload: t } = e, i3 = t.method;
      switch (i3) {
        case "wc_sessionPropose":
          return this.onSessionProposeRequest(s, t);
        case "wc_sessionSettle":
          return this.onSessionSettleRequest(s, t);
        case "wc_sessionUpdate":
          return this.onSessionUpdateRequest(s, t);
        case "wc_sessionExtend":
          return this.onSessionExtendRequest(s, t);
        case "wc_sessionPing":
          return this.onSessionPingRequest(s, t);
        case "wc_sessionDelete":
          return this.onSessionDeleteRequest(s, t);
        case "wc_sessionRequest":
          return this.onSessionRequest(s, t);
        case "wc_sessionEvent":
          return this.onSessionEventRequest(s, t);
        default:
          return this.client.logger.info(`Unsupported request method ${i3}`);
      }
    }, this.onRelayEventResponse = async (e) => {
      const { topic: s, payload: t } = e, i3 = (await this.client.core.history.get(s, t.id)).request.method;
      switch (i3) {
        case "wc_sessionPropose":
          return this.onSessionProposeResponse(s, t);
        case "wc_sessionSettle":
          return this.onSessionSettleResponse(s, t);
        case "wc_sessionUpdate":
          return this.onSessionUpdateResponse(s, t);
        case "wc_sessionExtend":
          return this.onSessionExtendResponse(s, t);
        case "wc_sessionPing":
          return this.onSessionPingResponse(s, t);
        case "wc_sessionRequest":
          return this.onSessionRequestResponse(s, t);
        default:
          return this.client.logger.info(`Unsupported response method ${i3}`);
      }
    }, this.onRelayEventUnknownPayload = (e) => {
      const { topic: s } = e, { message: t } = N11("MISSING_OR_INVALID", `Decoded payload on topic ${s} is not identifiable as a JSON-RPC request or a response.`);
      throw new Error(t);
    }, this.onSessionProposeRequest = async (e, s) => {
      const { params: t, id: i3 } = s;
      try {
        this.isValidConnect(w5({}, s.params));
        const r = ot3(import_time6.FIVE_MINUTES), o = w5({ id: i3, pairingTopic: e, expiry: r }, t);
        await this.setProposal(i3, o);
        const a2 = $n2(JSON.stringify(s)), l = await this.getVerifyContext(a2, o.proposer.metadata);
        this.client.events.emit("session_proposal", { id: i3, params: o, verifyContext: l });
      } catch (r) {
        await this.sendError(i3, e, r), this.client.logger.error(r);
      }
    }, this.onSessionProposeResponse = async (e, s) => {
      const { id: t } = s;
      if (isJsonRpcResult(s)) {
        const { result: i3 } = s;
        this.client.logger.trace({ type: "method", method: "onSessionProposeResponse", result: i3 });
        const r = this.client.proposal.get(t);
        this.client.logger.trace({ type: "method", method: "onSessionProposeResponse", proposal: r });
        const o = r.proposer.publicKey;
        this.client.logger.trace({ type: "method", method: "onSessionProposeResponse", selfPublicKey: o });
        const a2 = i3.responderPublicKey;
        this.client.logger.trace({ type: "method", method: "onSessionProposeResponse", peerPublicKey: a2 });
        const l = await this.client.core.crypto.generateSharedKey(o, a2);
        this.client.logger.trace({ type: "method", method: "onSessionProposeResponse", sessionTopic: l });
        const h2 = await this.client.core.relayer.subscribe(l);
        this.client.logger.trace({ type: "method", method: "onSessionProposeResponse", subscriptionId: h2 }), await this.client.core.pairing.activate({ topic: e });
      } else
        isJsonRpcError(s) && (await this.client.proposal.delete(t, w4("USER_DISCONNECTED")), this.events.emit(it3("session_connect"), { error: s.error }));
    }, this.onSessionSettleRequest = async (e, s) => {
      const { id: t, params: i3 } = s;
      try {
        this.isValidSessionSettleRequest(i3);
        const { relay: r, controller: o, expiry: a2, namespaces: l, requiredNamespaces: h2, optionalNamespaces: I2, sessionProperties: g3, pairingTopic: E3 } = s.params, m4 = w5({ topic: e, relay: r, expiry: a2, namespaces: l, acknowledged: true, pairingTopic: E3, requiredNamespaces: h2, optionalNamespaces: I2, controller: o.publicKey, self: { publicKey: "", metadata: this.client.metadata }, peer: { publicKey: o.publicKey, metadata: o.metadata } }, g3 && { sessionProperties: g3 });
        await this.sendResult(s.id, e, true), this.events.emit(it3("session_connect"), { session: m4 }), this.cleanupDuplicatePairings(m4);
      } catch (r) {
        await this.sendError(t, e, r), this.client.logger.error(r);
      }
    }, this.onSessionSettleResponse = async (e, s) => {
      const { id: t } = s;
      isJsonRpcResult(s) ? (await this.client.session.update(e, { acknowledged: true }), this.events.emit(it3("session_approve", t), {})) : isJsonRpcError(s) && (await this.client.session.delete(e, w4("USER_DISCONNECTED")), this.events.emit(it3("session_approve", t), { error: s.error }));
    }, this.onSessionUpdateRequest = async (e, s) => {
      const { params: t, id: i3 } = s;
      try {
        this.isValidUpdate(w5({ topic: e }, t)), await this.client.session.update(e, { namespaces: t.namespaces }), await this.sendResult(i3, e, true), this.client.events.emit("session_update", { id: i3, topic: e, params: t });
      } catch (r) {
        await this.sendError(i3, e, r), this.client.logger.error(r);
      }
    }, this.onSessionUpdateResponse = (e, s) => {
      const { id: t } = s;
      isJsonRpcResult(s) ? this.events.emit(it3("session_update", t), {}) : isJsonRpcError(s) && this.events.emit(it3("session_update", t), { error: s.error });
    }, this.onSessionExtendRequest = async (e, s) => {
      const { id: t } = s;
      try {
        this.isValidExtend({ topic: e }), await this.setExpiry(e, ot3(C5)), await this.sendResult(t, e, true), this.client.events.emit("session_extend", { id: t, topic: e });
      } catch (i3) {
        await this.sendError(t, e, i3), this.client.logger.error(i3);
      }
    }, this.onSessionExtendResponse = (e, s) => {
      const { id: t } = s;
      isJsonRpcResult(s) ? this.events.emit(it3("session_extend", t), {}) : isJsonRpcError(s) && this.events.emit(it3("session_extend", t), { error: s.error });
    }, this.onSessionPingRequest = async (e, s) => {
      const { id: t } = s;
      try {
        this.isValidPing({ topic: e }), await this.sendResult(t, e, true), this.client.events.emit("session_ping", { id: t, topic: e });
      } catch (i3) {
        await this.sendError(t, e, i3), this.client.logger.error(i3);
      }
    }, this.onSessionPingResponse = (e, s) => {
      const { id: t } = s;
      setTimeout(() => {
        isJsonRpcResult(s) ? this.events.emit(it3("session_ping", t), {}) : isJsonRpcError(s) && this.events.emit(it3("session_ping", t), { error: s.error });
      }, 500);
    }, this.onSessionDeleteRequest = async (e, s) => {
      const { id: t } = s;
      try {
        this.isValidDisconnect({ topic: e, reason: s.params }), await Promise.all([new Promise((i3) => {
          this.client.core.relayer.once(g2.publish, async () => {
            i3(await this.deleteSession(e));
          });
        }), this.sendResult(t, e, true)]), this.client.events.emit("session_delete", { id: t, topic: e });
      } catch (i3) {
        this.client.logger.error(i3);
      }
    }, this.onSessionRequest = async (e, s) => {
      const { id: t, params: i3 } = s;
      try {
        this.isValidRequest(w5({ topic: e }, i3)), await this.setPendingSessionRequest({ id: t, topic: e, params: i3 });
        const r = $n2(JSON.stringify(s)), o = this.client.session.get(e), a2 = await this.getVerifyContext(r, o.peer.metadata);
        this.client.events.emit("session_request", { id: t, topic: e, params: i3, verifyContext: a2 });
      } catch (r) {
        await this.sendError(t, e, r), this.client.logger.error(r);
      }
    }, this.onSessionRequestResponse = (e, s) => {
      const { id: t } = s;
      isJsonRpcResult(s) ? this.events.emit(it3("session_request", t), { result: s.result }) : isJsonRpcError(s) && this.events.emit(it3("session_request", t), { error: s.error });
    }, this.onSessionEventRequest = async (e, s) => {
      const { id: t, params: i3 } = s;
      try {
        this.isValidEmit(w5({ topic: e }, i3)), this.client.events.emit("session_event", { id: t, topic: e, params: i3 });
      } catch (r) {
        await this.sendError(t, e, r), this.client.logger.error(r);
      }
    }, this.isValidConnect = async (e) => {
      if (!Dt3(e)) {
        const { message: a2 } = N11("MISSING_OR_INVALID", `connect() params: ${JSON.stringify(e)}`);
        throw new Error(a2);
      }
      const { pairingTopic: s, requiredNamespaces: t, optionalNamespaces: i3, sessionProperties: r, relays: o } = e;
      if (P2(s) || await this.isValidPairingTopic(s), !jt2(o, true)) {
        const { message: a2 } = N11("MISSING_OR_INVALID", `connect() relays: ${o}`);
        throw new Error(a2);
      }
      !P2(t) && F2(t) !== 0 && this.validateNamespaces(t, "requiredNamespaces"), !P2(i3) && F2(i3) !== 0 && this.validateNamespaces(i3, "optionalNamespaces"), P2(r) || this.validateSessionProps(r, "sessionProperties");
    }, this.validateNamespaces = (e, s) => {
      const t = $t2(e, "connect()", s);
      if (t)
        throw new Error(t.message);
    }, this.isValidApprove = async (e) => {
      if (!Dt3(e))
        throw new Error(N11("MISSING_OR_INVALID", `approve() params: ${e}`).message);
      const { id: s, namespaces: t, relayProtocol: i3, sessionProperties: r } = e;
      await this.isValidProposalId(s);
      const o = this.client.proposal.get(s), a2 = sn(t, "approve()");
      if (a2)
        throw new Error(a2.message);
      const l = an(o.requiredNamespaces, t, "approve()");
      if (l)
        throw new Error(l.message);
      if (!m2(i3, true)) {
        const { message: h2 } = N11("MISSING_OR_INVALID", `approve() relayProtocol: ${i3}`);
        throw new Error(h2);
      }
      P2(r) || this.validateSessionProps(r, "sessionProperties");
    }, this.isValidReject = async (e) => {
      if (!Dt3(e)) {
        const { message: i3 } = N11("MISSING_OR_INVALID", `reject() params: ${e}`);
        throw new Error(i3);
      }
      const { id: s, reason: t } = e;
      if (await this.isValidProposalId(s), !Vt(t)) {
        const { message: i3 } = N11("MISSING_OR_INVALID", `reject() reason: ${JSON.stringify(t)}`);
        throw new Error(i3);
      }
    }, this.isValidSessionSettleRequest = (e) => {
      if (!Dt3(e)) {
        const { message: l } = N11("MISSING_OR_INVALID", `onSessionSettleRequest() params: ${e}`);
        throw new Error(l);
      }
      const { relay: s, controller: t, namespaces: i3, expiry: r } = e;
      if (!cn(s)) {
        const { message: l } = N11("MISSING_OR_INVALID", "onSessionSettleRequest() relay protocol should be a string");
        throw new Error(l);
      }
      const o = _t2(t, "onSessionSettleRequest()");
      if (o)
        throw new Error(o.message);
      const a2 = sn(i3, "onSessionSettleRequest()");
      if (a2)
        throw new Error(a2.message);
      if (st3(r)) {
        const { message: l } = N11("EXPIRED", "onSessionSettleRequest()");
        throw new Error(l);
      }
    }, this.isValidUpdate = async (e) => {
      if (!Dt3(e)) {
        const { message: a2 } = N11("MISSING_OR_INVALID", `update() params: ${e}`);
        throw new Error(a2);
      }
      const { topic: s, namespaces: t } = e;
      await this.isValidSessionTopic(s);
      const i3 = this.client.session.get(s), r = sn(t, "update()");
      if (r)
        throw new Error(r.message);
      const o = an(i3.requiredNamespaces, t, "update()");
      if (o)
        throw new Error(o.message);
    }, this.isValidExtend = async (e) => {
      if (!Dt3(e)) {
        const { message: t } = N11("MISSING_OR_INVALID", `extend() params: ${e}`);
        throw new Error(t);
      }
      const { topic: s } = e;
      await this.isValidSessionTopic(s);
    }, this.isValidRequest = async (e) => {
      if (!Dt3(e)) {
        const { message: a2 } = N11("MISSING_OR_INVALID", `request() params: ${e}`);
        throw new Error(a2);
      }
      const { topic: s, request: t, chainId: i3, expiry: r } = e;
      await this.isValidSessionTopic(s);
      const { namespaces: o } = this.client.session.get(s);
      if (!Lt2(o, i3)) {
        const { message: a2 } = N11("MISSING_OR_INVALID", `request() chainId: ${i3}`);
        throw new Error(a2);
      }
      if (!Mt2(t)) {
        const { message: a2 } = N11("MISSING_OR_INVALID", `request() ${JSON.stringify(t)}`);
        throw new Error(a2);
      }
      if (!xt2(o, i3, t.method)) {
        const { message: a2 } = N11("MISSING_OR_INVALID", `request() method: ${t.method}`);
        throw new Error(a2);
      }
      if (r && !zt2(r, $2)) {
        const { message: a2 } = N11("MISSING_OR_INVALID", `request() expiry: ${r}. Expiry must be a number (in seconds) between ${$2.min} and ${$2.max}`);
        throw new Error(a2);
      }
    }, this.isValidRespond = async (e) => {
      if (!Dt3(e)) {
        const { message: i3 } = N11("MISSING_OR_INVALID", `respond() params: ${e}`);
        throw new Error(i3);
      }
      const { topic: s, response: t } = e;
      if (await this.isValidSessionTopic(s), !Kt2(t)) {
        const { message: i3 } = N11("MISSING_OR_INVALID", `respond() response: ${JSON.stringify(t)}`);
        throw new Error(i3);
      }
    }, this.isValidPing = async (e) => {
      if (!Dt3(e)) {
        const { message: t } = N11("MISSING_OR_INVALID", `ping() params: ${e}`);
        throw new Error(t);
      }
      const { topic: s } = e;
      await this.isValidSessionOrPairingTopic(s);
    }, this.isValidEmit = async (e) => {
      if (!Dt3(e)) {
        const { message: o } = N11("MISSING_OR_INVALID", `emit() params: ${e}`);
        throw new Error(o);
      }
      const { topic: s, event: t, chainId: i3 } = e;
      await this.isValidSessionTopic(s);
      const { namespaces: r } = this.client.session.get(s);
      if (!Lt2(r, i3)) {
        const { message: o } = N11("MISSING_OR_INVALID", `emit() chainId: ${i3}`);
        throw new Error(o);
      }
      if (!kt2(t)) {
        const { message: o } = N11("MISSING_OR_INVALID", `emit() event: ${JSON.stringify(t)}`);
        throw new Error(o);
      }
      if (!Ft2(r, i3, t.name)) {
        const { message: o } = N11("MISSING_OR_INVALID", `emit() event: ${JSON.stringify(t)}`);
        throw new Error(o);
      }
    }, this.isValidDisconnect = async (e) => {
      if (!Dt3(e)) {
        const { message: t } = N11("MISSING_OR_INVALID", `disconnect() params: ${e}`);
        throw new Error(t);
      }
      const { topic: s } = e;
      await this.isValidSessionOrPairingTopic(s);
    }, this.getVerifyContext = async (e, s) => {
      const t = { verified: { verifyUrl: s.verifyUrl || "", validation: "UNKNOWN", origin: s.url || "" } };
      try {
        const i3 = await this.client.core.verify.resolve({ attestationId: e, verifyUrl: s.verifyUrl });
        i3 && (t.verified.origin = i3, t.verified.validation = i3 === s.url ? "VALID" : "INVALID");
      } catch (i3) {
        this.client.logger.error(i3);
      }
      return this.client.logger.info(`Verify context: ${JSON.stringify(t)}`), t;
    }, this.validateSessionProps = (e, s) => {
      Object.values(e).forEach((t) => {
        if (!m2(t, false)) {
          const { message: i3 } = N11("MISSING_OR_INVALID", `${s} must be in Record<string, string> format. Received: ${JSON.stringify(t)}`);
          throw new Error(i3);
        }
      });
    };
  }
  isInitialized() {
    if (!this.initialized) {
      const { message: n2 } = N11("NOT_INITIALIZED", this.name);
      throw new Error(n2);
    }
  }
  registerRelayerEvents() {
    this.client.core.relayer.on(g2.message, async (n2) => {
      const { topic: e, message: s } = n2;
      if (this.ignoredPayloadTypes.includes(this.client.core.crypto.getPayloadType(s)))
        return;
      const t = await this.client.core.crypto.decode(e, s);
      isJsonRpcRequest(t) ? (this.client.core.history.set(e, t), this.onRelayEventRequest({ topic: e, payload: t })) : isJsonRpcResponse(t) ? (await this.client.core.history.resolve(t), this.onRelayEventResponse({ topic: e, payload: t })) : this.onRelayEventUnknownPayload({ topic: e, payload: t });
    });
  }
  registerExpirerEvents() {
    this.client.core.expirer.on(w3.expired, async (n2) => {
      const { topic: e, id: s } = rt3(n2.target);
      if (s && this.client.pendingRequest.keys.includes(s))
        return await this.deletePendingSessionRequest(s, N11("EXPIRED"), true);
      e ? this.client.session.keys.includes(e) && (await this.deleteSession(e, true), this.client.events.emit("session_expire", { topic: e })) : s && (await this.deleteProposal(s, true), this.client.events.emit("proposal_expire", { id: s }));
    });
  }
  isValidPairingTopic(n2) {
    if (!m2(n2, false)) {
      const { message: e } = N11("MISSING_OR_INVALID", `pairing topic should be a string: ${n2}`);
      throw new Error(e);
    }
    if (!this.client.core.pairing.pairings.keys.includes(n2)) {
      const { message: e } = N11("NO_MATCHING_KEY", `pairing topic doesn't exist: ${n2}`);
      throw new Error(e);
    }
    if (st3(this.client.core.pairing.pairings.get(n2).expiry)) {
      const { message: e } = N11("EXPIRED", `pairing topic: ${n2}`);
      throw new Error(e);
    }
  }
  async isValidSessionTopic(n2) {
    if (!m2(n2, false)) {
      const { message: e } = N11("MISSING_OR_INVALID", `session topic should be a string: ${n2}`);
      throw new Error(e);
    }
    if (!this.client.session.keys.includes(n2)) {
      const { message: e } = N11("NO_MATCHING_KEY", `session topic doesn't exist: ${n2}`);
      throw new Error(e);
    }
    if (st3(this.client.session.get(n2).expiry)) {
      await this.deleteSession(n2);
      const { message: e } = N11("EXPIRED", `session topic: ${n2}`);
      throw new Error(e);
    }
  }
  async isValidSessionOrPairingTopic(n2) {
    if (this.client.session.keys.includes(n2))
      await this.isValidSessionTopic(n2);
    else if (this.client.core.pairing.pairings.keys.includes(n2))
      this.isValidPairingTopic(n2);
    else if (m2(n2, false)) {
      const { message: e } = N11("NO_MATCHING_KEY", `session or pairing topic doesn't exist: ${n2}`);
      throw new Error(e);
    } else {
      const { message: e } = N11("MISSING_OR_INVALID", `session or pairing topic should be a string: ${n2}`);
      throw new Error(e);
    }
  }
  async isValidProposalId(n2) {
    if (!Ct2(n2)) {
      const { message: e } = N11("MISSING_OR_INVALID", `proposal id should be a number: ${n2}`);
      throw new Error(e);
    }
    if (!this.client.proposal.keys.includes(n2)) {
      const { message: e } = N11("NO_MATCHING_KEY", `proposal id doesn't exist: ${n2}`);
      throw new Error(e);
    }
    if (st3(this.client.proposal.get(n2).expiry)) {
      await this.deleteProposal(n2);
      const { message: e } = N11("EXPIRED", `proposal id: ${n2}`);
      throw new Error(e);
    }
  }
};
var rs2 = class extends zt {
  constructor(n2, e) {
    super(n2, e, se2, b4), this.core = n2, this.logger = e;
  }
};
var os2 = class extends zt {
  constructor(n2, e) {
    super(n2, e, ie4, b4), this.core = n2, this.logger = e;
  }
};
var as2 = class extends zt {
  constructor(n2, e) {
    super(n2, e, re2, b4, (s) => s.id), this.core = n2, this.logger = e;
  }
};
var M2 = class extends b2 {
  constructor(n2) {
    super(n2), this.protocol = j4, this.version = J3, this.name = G2.name, this.events = new import_events8.EventEmitter(), this.on = (s, t) => this.events.on(s, t), this.once = (s, t) => this.events.once(s, t), this.off = (s, t) => this.events.off(s, t), this.removeListener = (s, t) => this.events.removeListener(s, t), this.removeAllListeners = (s) => this.events.removeAllListeners(s), this.connect = async (s) => {
      try {
        return await this.engine.connect(s);
      } catch (t) {
        throw this.logger.error(t.message), t;
      }
    }, this.pair = async (s) => {
      try {
        return await this.engine.pair(s);
      } catch (t) {
        throw this.logger.error(t.message), t;
      }
    }, this.approve = async (s) => {
      try {
        return await this.engine.approve(s);
      } catch (t) {
        throw this.logger.error(t.message), t;
      }
    }, this.reject = async (s) => {
      try {
        return await this.engine.reject(s);
      } catch (t) {
        throw this.logger.error(t.message), t;
      }
    }, this.update = async (s) => {
      try {
        return await this.engine.update(s);
      } catch (t) {
        throw this.logger.error(t.message), t;
      }
    }, this.extend = async (s) => {
      try {
        return await this.engine.extend(s);
      } catch (t) {
        throw this.logger.error(t.message), t;
      }
    }, this.request = async (s) => {
      try {
        return await this.engine.request(s);
      } catch (t) {
        throw this.logger.error(t.message), t;
      }
    }, this.respond = async (s) => {
      try {
        return await this.engine.respond(s);
      } catch (t) {
        throw this.logger.error(t.message), t;
      }
    }, this.ping = async (s) => {
      try {
        return await this.engine.ping(s);
      } catch (t) {
        throw this.logger.error(t.message), t;
      }
    }, this.emit = async (s) => {
      try {
        return await this.engine.emit(s);
      } catch (t) {
        throw this.logger.error(t.message), t;
      }
    }, this.disconnect = async (s) => {
      try {
        return await this.engine.disconnect(s);
      } catch (t) {
        throw this.logger.error(t.message), t;
      }
    }, this.find = (s) => {
      try {
        return this.engine.find(s);
      } catch (t) {
        throw this.logger.error(t.message), t;
      }
    }, this.getPendingSessionRequests = () => {
      try {
        return this.engine.getPendingSessionRequests();
      } catch (s) {
        throw this.logger.error(s.message), s;
      }
    }, this.name = (n2 == null ? void 0 : n2.name) || G2.name, this.metadata = (n2 == null ? void 0 : n2.metadata) || Fn();
    const e = typeof (n2 == null ? void 0 : n2.logger) < "u" && typeof (n2 == null ? void 0 : n2.logger) != "string" ? n2.logger : (0, import_logger2.pino)((0, import_logger2.getDefaultLoggerOptions)({ level: (n2 == null ? void 0 : n2.logger) || G2.logger }));
    this.core = (n2 == null ? void 0 : n2.core) || new Tr(n2), this.logger = (0, import_logger2.generateChildLogger)(e, this.name), this.session = new os2(this.core, this.logger), this.proposal = new rs2(this.core, this.logger), this.pendingRequest = new as2(this.core, this.logger), this.engine = new ns2(this);
  }
  static async init(n2) {
    const e = new M2(n2);
    return await e.initialize(), e;
  }
  get context() {
    return (0, import_logger2.getLoggerContext)(this.logger);
  }
  get pairing() {
    return this.core.pairing.pairings;
  }
  async initialize() {
    this.logger.trace("Initialized");
    try {
      await this.core.start(), await this.session.init(), await this.proposal.init(), await this.pendingRequest.init(), await this.engine.init(), this.core.verify.init({ verifyUrl: this.metadata.verifyUrl }), this.logger.info("SignClient Initialization Success");
    } catch (n2) {
      throw this.logger.info("SignClient Initialization Failure"), this.logger.error(n2.message), n2;
    }
  }
};

// node_modules/@walletconnect/universal-provider/node_modules/@walletconnect/utils/dist/index.es.js
init_define_process_env();
var import_chacha20poly13054 = __toESM(require_chacha20poly1305());
var import_hkdf4 = __toESM(require_hkdf());
var import_random5 = __toESM(require_random());
var import_sha2564 = __toESM(require_sha256());
var ue6 = __toESM(require_x25519());

// node_modules/@walletconnect/universal-provider/node_modules/detect-browser/es/index.js
init_define_process_env();
var BrowserInfo4 = function() {
  function BrowserInfo5(name2, version2, os3) {
    this.name = name2;
    this.version = version2;
    this.os = os3;
    this.type = "browser";
  }
  return BrowserInfo5;
}();
var NodeInfo4 = function() {
  function NodeInfo5(version2) {
    this.version = version2;
    this.type = "node";
    this.name = "node";
    this.os = process.platform;
  }
  return NodeInfo5;
}();
var SearchBotDeviceInfo4 = function() {
  function SearchBotDeviceInfo5(name2, version2, os3, bot) {
    this.name = name2;
    this.version = version2;
    this.os = os3;
    this.bot = bot;
    this.type = "bot-device";
  }
  return SearchBotDeviceInfo5;
}();
var BotInfo4 = function() {
  function BotInfo5() {
    this.type = "bot";
    this.bot = true;
    this.name = "bot";
    this.version = null;
    this.os = null;
  }
  return BotInfo5;
}();
var ReactNativeInfo4 = function() {
  function ReactNativeInfo5() {
    this.type = "react-native";
    this.name = "react-native";
    this.version = null;
    this.os = null;
  }
  return ReactNativeInfo5;
}();

// node_modules/@walletconnect/universal-provider/node_modules/@walletconnect/utils/dist/index.es.js
var import_time7 = __toESM(require_cjs());
var import_window_getters4 = __toESM(require_cjs12());
var import_window_metadata4 = __toESM(require_cjs13());
var C6 = __toESM(require_query_string4());
function S2(e = [], n2 = []) {
  return [.../* @__PURE__ */ new Set([...e, ...n2])];
}
function te2(e) {
  return e.includes(":");
}
function Ze3(e) {
  return te2(e) ? e.split(":")[0] : e;
}
var It5 = { INVALID_METHOD: { message: "Invalid method.", code: 1001 }, INVALID_EVENT: { message: "Invalid event.", code: 1002 }, INVALID_UPDATE_REQUEST: { message: "Invalid update request.", code: 1003 }, INVALID_EXTEND_REQUEST: { message: "Invalid extend request.", code: 1004 }, INVALID_SESSION_SETTLE_REQUEST: { message: "Invalid session settle request.", code: 1005 }, UNAUTHORIZED_METHOD: { message: "Unauthorized method.", code: 3001 }, UNAUTHORIZED_EVENT: { message: "Unauthorized event.", code: 3002 }, UNAUTHORIZED_UPDATE_REQUEST: { message: "Unauthorized update request.", code: 3003 }, UNAUTHORIZED_EXTEND_REQUEST: { message: "Unauthorized extend request.", code: 3004 }, USER_REJECTED: { message: "User rejected.", code: 5e3 }, USER_REJECTED_CHAINS: { message: "User rejected chains.", code: 5001 }, USER_REJECTED_METHODS: { message: "User rejected methods.", code: 5002 }, USER_REJECTED_EVENTS: { message: "User rejected events.", code: 5003 }, UNSUPPORTED_CHAINS: { message: "Unsupported chains.", code: 5100 }, UNSUPPORTED_METHODS: { message: "Unsupported methods.", code: 5101 }, UNSUPPORTED_EVENTS: { message: "Unsupported events.", code: 5102 }, UNSUPPORTED_ACCOUNTS: { message: "Unsupported accounts.", code: 5103 }, UNSUPPORTED_NAMESPACE_KEY: { message: "Unsupported namespace key.", code: 5104 }, USER_DISCONNECTED: { message: "User disconnected.", code: 6e3 }, SESSION_SETTLEMENT_FAILED: { message: "Session settlement failed.", code: 7e3 }, WC_METHOD_UNSUPPORTED: { message: "Unsupported wc_ method.", code: 10001 } };
function w6(e, n2) {
  const { message: t, code: r } = It5[e];
  return { message: n2 ? `${t} ${n2}` : t, code: r };
}
function j5(e, n2) {
  return Array.isArray(e) ? typeof n2 < "u" && e.length ? e.every(n2) : true : false;
}
function F3(e) {
  return Object.getPrototypeOf(e) === Object.prototype && Object.keys(e).length;
}

// node_modules/@walletconnect/universal-provider/dist/index.es.js
var import_logger3 = __toESM(require_cjs6());

// node_modules/@walletconnect/jsonrpc-http-connection/dist/esm/index.js
init_define_process_env();

// node_modules/@walletconnect/jsonrpc-http-connection/dist/esm/http.js
init_define_process_env();
var import_events9 = __toESM(require_events());
var import_cross_fetch = __toESM(require_browser_ponyfill());
var DEFAULT_HTTP_HEADERS = {
  Accept: "application/json",
  "Content-Type": "application/json"
};
var DEFAULT_HTTP_METHOD = "POST";
var DEFAULT_FETCH_OPTS = {
  headers: DEFAULT_HTTP_HEADERS,
  method: DEFAULT_HTTP_METHOD
};
var EVENT_EMITTER_MAX_LISTENERS_DEFAULT2 = 10;
var HttpConnection = class {
  constructor(url, disableProviderPing = false) {
    this.url = url;
    this.disableProviderPing = disableProviderPing;
    this.events = new import_events9.EventEmitter();
    this.isAvailable = false;
    this.registering = false;
    if (!isHttpUrl(url)) {
      throw new Error(`Provided URL is not compatible with HTTP connection: ${url}`);
    }
    this.url = url;
    this.disableProviderPing = disableProviderPing;
  }
  get connected() {
    return this.isAvailable;
  }
  get connecting() {
    return this.registering;
  }
  on(event, listener) {
    this.events.on(event, listener);
  }
  once(event, listener) {
    this.events.once(event, listener);
  }
  off(event, listener) {
    this.events.off(event, listener);
  }
  removeListener(event, listener) {
    this.events.removeListener(event, listener);
  }
  async open(url = this.url) {
    await this.register(url);
  }
  async close() {
    if (!this.isAvailable) {
      throw new Error("Connection already closed");
    }
    this.onClose();
  }
  async send(payload, context) {
    if (!this.isAvailable) {
      await this.register();
    }
    try {
      const body = safeJsonStringify(payload);
      const res = await (0, import_cross_fetch.default)(this.url, Object.assign(Object.assign({}, DEFAULT_FETCH_OPTS), { body }));
      const data = await res.json();
      this.onPayload({ data });
    } catch (e) {
      this.onError(payload.id, e);
    }
  }
  async register(url = this.url) {
    if (!isHttpUrl(url)) {
      throw new Error(`Provided URL is not compatible with HTTP connection: ${url}`);
    }
    if (this.registering) {
      const currentMaxListeners = this.events.getMaxListeners();
      if (this.events.listenerCount("register_error") >= currentMaxListeners || this.events.listenerCount("open") >= currentMaxListeners) {
        this.events.setMaxListeners(currentMaxListeners + 1);
      }
      return new Promise((resolve, reject) => {
        this.events.once("register_error", (error) => {
          this.resetMaxListeners();
          reject(error);
        });
        this.events.once("open", () => {
          this.resetMaxListeners();
          if (typeof this.isAvailable === "undefined") {
            return reject(new Error("HTTP connection is missing or invalid"));
          }
          resolve();
        });
      });
    }
    this.url = url;
    this.registering = true;
    try {
      if (!this.disableProviderPing) {
        const body = safeJsonStringify({ id: 1, jsonrpc: "2.0", method: "test", params: [] });
        await (0, import_cross_fetch.default)(url, Object.assign(Object.assign({}, DEFAULT_FETCH_OPTS), { body }));
      }
      this.onOpen();
    } catch (e) {
      const error = this.parseError(e);
      this.events.emit("register_error", error);
      this.onClose();
      throw error;
    }
  }
  onOpen() {
    this.isAvailable = true;
    this.registering = false;
    this.events.emit("open");
  }
  onClose() {
    this.isAvailable = false;
    this.registering = false;
    this.events.emit("close");
  }
  onPayload(e) {
    if (typeof e.data === "undefined")
      return;
    const payload = typeof e.data === "string" ? safeJsonParse(e.data) : e.data;
    this.events.emit("payload", payload);
  }
  onError(id, e) {
    const error = this.parseError(e);
    const message = error.message || error.toString();
    const payload = formatJsonRpcError(id, message);
    this.events.emit("payload", payload);
  }
  parseError(e, url = this.url) {
    return parseConnectionError(e, url, "HTTP");
  }
  resetMaxListeners() {
    if (this.events.getMaxListeners() > EVENT_EMITTER_MAX_LISTENERS_DEFAULT2) {
      this.events.setMaxListeners(EVENT_EMITTER_MAX_LISTENERS_DEFAULT2);
    }
  }
};
var http_default = HttpConnection;

// node_modules/@walletconnect/jsonrpc-http-connection/dist/esm/index.js
var esm_default2 = http_default;

// node_modules/@walletconnect/universal-provider/dist/index.es.js
var import_events10 = __toESM(require_events());
var Pa = "error";
var Hg = "wss://relay.walletconnect.com";
var Ng = "wc";
var $g = "universal_provider";
var Aa = `${Ng}@2:${$g}:`;
var Ug = "https://rpc.walletconnect.com/v1";
var at3 = { DEFAULT_CHAIN_CHANGED: "default_chain_changed" };
var pe6 = typeof globalThis < "u" ? globalThis : typeof window < "u" ? window : typeof global < "u" ? global : typeof self < "u" ? self : {};
var $i2 = { exports: {} };
(function(E3, u4) {
  (function() {
    var i3, p4 = "4.17.21", y3 = 200, W4 = "Unsupported core-js use. Try https://npms.io/search?q=ponyfill.", M3 = "Expected a function", ft3 = "Invalid `variable` option passed into `_.template`", Gt = "__lodash_hash_undefined__", lr2 = 500, At3 = "__lodash_placeholder__", Ln = 1, Fn2 = 2, Ct3 = 4, It6 = 1, de6 = 2, vn5 = 1, ot4 = 2, Mi2 = 4, Dn2 = 8, xt3 = 16, Hn = 32, Et2 = 64, Mn2 = 128, zt3 = 256, pr2 = 512, Oa = 30, Ra = "...", ba = 800, Ta = 16, qi2 = 1, La = 2, Da = 3, ct3 = 1 / 0, Vn2 = 9007199254740991, Ha = 17976931348623157e292, ge3 = 0 / 0, Nn = 4294967295, Na = Nn - 1, $a = Nn >>> 1, Ua = [["ary", Mn2], ["bind", vn5], ["bindKey", ot4], ["curry", Dn2], ["curryRight", xt3], ["flip", pr2], ["partial", Hn], ["partialRight", Et2], ["rearg", zt3]], yt3 = "[object Arguments]", ve2 = "[object Array]", Wa = "[object AsyncFunction]", Kt3 = "[object Boolean]", Yt = "[object Date]", Fa = "[object DOMException]", _e2 = "[object Error]", me2 = "[object Function]", Bi2 = "[object GeneratorFunction]", yn = "[object Map]", Zt = "[object Number]", Ma = "[object Null]", qn2 = "[object Object]", Gi2 = "[object Promise]", qa = "[object Proxy]", Jt = "[object RegExp]", Sn = "[object Set]", Xt = "[object String]", we4 = "[object Symbol]", Ba = "[object Undefined]", Qt = "[object WeakMap]", Ga = "[object WeakSet]", Vt2 = "[object ArrayBuffer]", St3 = "[object DataView]", dr2 = "[object Float32Array]", gr2 = "[object Float64Array]", vr2 = "[object Int8Array]", _r2 = "[object Int16Array]", mr2 = "[object Int32Array]", wr2 = "[object Uint8Array]", Pr = "[object Uint8ClampedArray]", Ar = "[object Uint16Array]", Cr2 = "[object Uint32Array]", za = /\b__p \+= '';/g, Ka = /\b(__p \+=) '' \+/g, Ya = /(__e\(.*?\)|\b__t\)) \+\n'';/g, zi = /&(?:amp|lt|gt|quot|#39);/g, Ki2 = /[&<>"']/g, Za = RegExp(zi.source), Ja = RegExp(Ki2.source), Xa = /<%-([\s\S]+?)%>/g, Qa = /<%([\s\S]+?)%>/g, Yi2 = /<%=([\s\S]+?)%>/g, Va = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/, ka = /^\w*$/, ja = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g, Ir2 = /[\\^$.*+?()[\]{}|]/g, nf = RegExp(Ir2.source), xr = /^\s+/, tf = /\s/, ef = /\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/, rf = /\{\n\/\* \[wrapped with (.+)\] \*/, sf = /,? & /, uf = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g, af = /[()=,{}\[\]\/\s]/, ff = /\\(\\)?/g, of = /\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g, Zi2 = /\w*$/, cf = /^[-+]0x[0-9a-f]+$/i, hf = /^0b[01]+$/i, lf = /^\[object .+?Constructor\]$/, pf = /^0o[0-7]+$/i, df = /^(?:0|[1-9]\d*)$/, gf = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g, Pe3 = /($^)/, vf = /['\n\r\u2028\u2029\\]/g, Ae2 = "\\ud800-\\udfff", _f = "\\u0300-\\u036f", mf = "\\ufe20-\\ufe2f", wf = "\\u20d0-\\u20ff", Ji2 = _f + mf + wf, Xi2 = "\\u2700-\\u27bf", Qi2 = "a-z\\xdf-\\xf6\\xf8-\\xff", Pf = "\\xac\\xb1\\xd7\\xf7", Af = "\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf", Cf = "\\u2000-\\u206f", If = " \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000", Vi2 = "A-Z\\xc0-\\xd6\\xd8-\\xde", ki2 = "\\ufe0e\\ufe0f", ji2 = Pf + Af + Cf + If, Er2 = "['\u2019]", xf = "[" + Ae2 + "]", ns3 = "[" + ji2 + "]", Ce2 = "[" + Ji2 + "]", ts3 = "\\d+", Ef = "[" + Xi2 + "]", es3 = "[" + Qi2 + "]", rs3 = "[^" + Ae2 + ji2 + ts3 + Xi2 + Qi2 + Vi2 + "]", yr2 = "\\ud83c[\\udffb-\\udfff]", yf = "(?:" + Ce2 + "|" + yr2 + ")", is3 = "[^" + Ae2 + "]", Sr = "(?:\\ud83c[\\udde6-\\uddff]){2}", Or = "[\\ud800-\\udbff][\\udc00-\\udfff]", Ot2 = "[" + Vi2 + "]", ss3 = "\\u200d", us2 = "(?:" + es3 + "|" + rs3 + ")", Sf = "(?:" + Ot2 + "|" + rs3 + ")", as3 = "(?:" + Er2 + "(?:d|ll|m|re|s|t|ve))?", fs2 = "(?:" + Er2 + "(?:D|LL|M|RE|S|T|VE))?", os3 = yf + "?", cs2 = "[" + ki2 + "]?", Of = "(?:" + ss3 + "(?:" + [is3, Sr, Or].join("|") + ")" + cs2 + os3 + ")*", Rf = "\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])", bf = "\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])", hs2 = cs2 + os3 + Of, Tf = "(?:" + [Ef, Sr, Or].join("|") + ")" + hs2, Lf = "(?:" + [is3 + Ce2 + "?", Ce2, Sr, Or, xf].join("|") + ")", Df = RegExp(Er2, "g"), Hf = RegExp(Ce2, "g"), Rr2 = RegExp(yr2 + "(?=" + yr2 + ")|" + Lf + hs2, "g"), Nf = RegExp([Ot2 + "?" + es3 + "+" + as3 + "(?=" + [ns3, Ot2, "$"].join("|") + ")", Sf + "+" + fs2 + "(?=" + [ns3, Ot2 + us2, "$"].join("|") + ")", Ot2 + "?" + us2 + "+" + as3, Ot2 + "+" + fs2, bf, Rf, ts3, Tf].join("|"), "g"), $f = RegExp("[" + ss3 + Ae2 + Ji2 + ki2 + "]"), Uf = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/, Wf = ["Array", "Buffer", "DataView", "Date", "Error", "Float32Array", "Float64Array", "Function", "Int8Array", "Int16Array", "Int32Array", "Map", "Math", "Object", "Promise", "RegExp", "Set", "String", "Symbol", "TypeError", "Uint8Array", "Uint8ClampedArray", "Uint16Array", "Uint32Array", "WeakMap", "_", "clearTimeout", "isFinite", "parseInt", "setTimeout"], Ff = -1, B = {};
    B[dr2] = B[gr2] = B[vr2] = B[_r2] = B[mr2] = B[wr2] = B[Pr] = B[Ar] = B[Cr2] = true, B[yt3] = B[ve2] = B[Vt2] = B[Kt3] = B[St3] = B[Yt] = B[_e2] = B[me2] = B[yn] = B[Zt] = B[qn2] = B[Jt] = B[Sn] = B[Xt] = B[Qt] = false;
    var q4 = {};
    q4[yt3] = q4[ve2] = q4[Vt2] = q4[St3] = q4[Kt3] = q4[Yt] = q4[dr2] = q4[gr2] = q4[vr2] = q4[_r2] = q4[mr2] = q4[yn] = q4[Zt] = q4[qn2] = q4[Jt] = q4[Sn] = q4[Xt] = q4[we4] = q4[wr2] = q4[Pr] = q4[Ar] = q4[Cr2] = true, q4[_e2] = q4[me2] = q4[Qt] = false;
    var Mf = { \u00C0: "A", \u00C1: "A", \u00C2: "A", \u00C3: "A", \u00C4: "A", \u00C5: "A", \u00E0: "a", \u00E1: "a", \u00E2: "a", \u00E3: "a", \u00E4: "a", \u00E5: "a", \u00C7: "C", \u00E7: "c", \u00D0: "D", \u00F0: "d", \u00C8: "E", \u00C9: "E", \u00CA: "E", \u00CB: "E", \u00E8: "e", \u00E9: "e", \u00EA: "e", \u00EB: "e", \u00CC: "I", \u00CD: "I", \u00CE: "I", \u00CF: "I", \u00EC: "i", \u00ED: "i", \u00EE: "i", \u00EF: "i", \u00D1: "N", \u00F1: "n", \u00D2: "O", \u00D3: "O", \u00D4: "O", \u00D5: "O", \u00D6: "O", \u00D8: "O", \u00F2: "o", \u00F3: "o", \u00F4: "o", \u00F5: "o", \u00F6: "o", \u00F8: "o", \u00D9: "U", \u00DA: "U", \u00DB: "U", \u00DC: "U", \u00F9: "u", \u00FA: "u", \u00FB: "u", \u00FC: "u", \u00DD: "Y", \u00FD: "y", \u00FF: "y", \u00C6: "Ae", \u00E6: "ae", \u00DE: "Th", \u00FE: "th", \u00DF: "ss", \u0100: "A", \u0102: "A", \u0104: "A", \u0101: "a", \u0103: "a", \u0105: "a", \u0106: "C", \u0108: "C", \u010A: "C", \u010C: "C", \u0107: "c", \u0109: "c", \u010B: "c", \u010D: "c", \u010E: "D", \u0110: "D", \u010F: "d", \u0111: "d", \u0112: "E", \u0114: "E", \u0116: "E", \u0118: "E", \u011A: "E", \u0113: "e", \u0115: "e", \u0117: "e", \u0119: "e", \u011B: "e", \u011C: "G", \u011E: "G", \u0120: "G", \u0122: "G", \u011D: "g", \u011F: "g", \u0121: "g", \u0123: "g", \u0124: "H", \u0126: "H", \u0125: "h", \u0127: "h", \u0128: "I", \u012A: "I", \u012C: "I", \u012E: "I", \u0130: "I", \u0129: "i", \u012B: "i", \u012D: "i", \u012F: "i", \u0131: "i", \u0134: "J", \u0135: "j", \u0136: "K", \u0137: "k", \u0138: "k", \u0139: "L", \u013B: "L", \u013D: "L", \u013F: "L", \u0141: "L", \u013A: "l", \u013C: "l", \u013E: "l", \u0140: "l", \u0142: "l", \u0143: "N", \u0145: "N", \u0147: "N", \u014A: "N", \u0144: "n", \u0146: "n", \u0148: "n", \u014B: "n", \u014C: "O", \u014E: "O", \u0150: "O", \u014D: "o", \u014F: "o", \u0151: "o", \u0154: "R", \u0156: "R", \u0158: "R", \u0155: "r", \u0157: "r", \u0159: "r", \u015A: "S", \u015C: "S", \u015E: "S", \u0160: "S", \u015B: "s", \u015D: "s", \u015F: "s", \u0161: "s", \u0162: "T", \u0164: "T", \u0166: "T", \u0163: "t", \u0165: "t", \u0167: "t", \u0168: "U", \u016A: "U", \u016C: "U", \u016E: "U", \u0170: "U", \u0172: "U", \u0169: "u", \u016B: "u", \u016D: "u", \u016F: "u", \u0171: "u", \u0173: "u", \u0174: "W", \u0175: "w", \u0176: "Y", \u0177: "y", \u0178: "Y", \u0179: "Z", \u017B: "Z", \u017D: "Z", \u017A: "z", \u017C: "z", \u017E: "z", \u0132: "IJ", \u0133: "ij", \u0152: "Oe", \u0153: "oe", \u0149: "'n", \u017F: "s" }, qf = { "&": "&amp;", "<": "&lt;", ">": "&gt;", '"': "&quot;", "'": "&#39;" }, Bf = { "&amp;": "&", "&lt;": "<", "&gt;": ">", "&quot;": '"', "&#39;": "'" }, Gf = { "\\": "\\", "'": "'", "\n": "n", "\r": "r", "\u2028": "u2028", "\u2029": "u2029" }, zf = parseFloat, Kf = parseInt, ls2 = typeof pe6 == "object" && pe6 && pe6.Object === Object && pe6, Yf = typeof self == "object" && self && self.Object === Object && self, k3 = ls2 || Yf || Function("return this")(), br2 = u4 && !u4.nodeType && u4, ht2 = br2 && true && E3 && !E3.nodeType && E3, ps2 = ht2 && ht2.exports === br2, Tr2 = ps2 && ls2.process, _n2 = function() {
      try {
        var h2 = ht2 && ht2.require && ht2.require("util").types;
        return h2 || Tr2 && Tr2.binding && Tr2.binding("util");
      } catch {
      }
    }(), ds2 = _n2 && _n2.isArrayBuffer, gs2 = _n2 && _n2.isDate, vs2 = _n2 && _n2.isMap, _s2 = _n2 && _n2.isRegExp, ms2 = _n2 && _n2.isSet, ws2 = _n2 && _n2.isTypedArray;
    function cn2(h2, g3, d2) {
      switch (d2.length) {
        case 0:
          return h2.call(g3);
        case 1:
          return h2.call(g3, d2[0]);
        case 2:
          return h2.call(g3, d2[0], d2[1]);
        case 3:
          return h2.call(g3, d2[0], d2[1], d2[2]);
      }
      return h2.apply(g3, d2);
    }
    function Zf(h2, g3, d2, P3) {
      for (var S3 = -1, N13 = h2 == null ? 0 : h2.length; ++S3 < N13; ) {
        var X2 = h2[S3];
        g3(P3, X2, d2(X2), h2);
      }
      return P3;
    }
    function mn5(h2, g3) {
      for (var d2 = -1, P3 = h2 == null ? 0 : h2.length; ++d2 < P3 && g3(h2[d2], d2, h2) !== false; )
        ;
      return h2;
    }
    function Jf(h2, g3) {
      for (var d2 = h2 == null ? 0 : h2.length; d2-- && g3(h2[d2], d2, h2) !== false; )
        ;
      return h2;
    }
    function Ps2(h2, g3) {
      for (var d2 = -1, P3 = h2 == null ? 0 : h2.length; ++d2 < P3; )
        if (!g3(h2[d2], d2, h2))
          return false;
      return true;
    }
    function kn2(h2, g3) {
      for (var d2 = -1, P3 = h2 == null ? 0 : h2.length, S3 = 0, N13 = []; ++d2 < P3; ) {
        var X2 = h2[d2];
        g3(X2, d2, h2) && (N13[S3++] = X2);
      }
      return N13;
    }
    function Ie3(h2, g3) {
      var d2 = h2 == null ? 0 : h2.length;
      return !!d2 && Rt3(h2, g3, 0) > -1;
    }
    function Lr(h2, g3, d2) {
      for (var P3 = -1, S3 = h2 == null ? 0 : h2.length; ++P3 < S3; )
        if (d2(g3, h2[P3]))
          return true;
      return false;
    }
    function G4(h2, g3) {
      for (var d2 = -1, P3 = h2 == null ? 0 : h2.length, S3 = Array(P3); ++d2 < P3; )
        S3[d2] = g3(h2[d2], d2, h2);
      return S3;
    }
    function jn2(h2, g3) {
      for (var d2 = -1, P3 = g3.length, S3 = h2.length; ++d2 < P3; )
        h2[S3 + d2] = g3[d2];
      return h2;
    }
    function Dr2(h2, g3, d2, P3) {
      var S3 = -1, N13 = h2 == null ? 0 : h2.length;
      for (P3 && N13 && (d2 = h2[++S3]); ++S3 < N13; )
        d2 = g3(d2, h2[S3], S3, h2);
      return d2;
    }
    function Xf(h2, g3, d2, P3) {
      var S3 = h2 == null ? 0 : h2.length;
      for (P3 && S3 && (d2 = h2[--S3]); S3--; )
        d2 = g3(d2, h2[S3], S3, h2);
      return d2;
    }
    function Hr(h2, g3) {
      for (var d2 = -1, P3 = h2 == null ? 0 : h2.length; ++d2 < P3; )
        if (g3(h2[d2], d2, h2))
          return true;
      return false;
    }
    var Qf = Nr("length");
    function Vf(h2) {
      return h2.split("");
    }
    function kf(h2) {
      return h2.match(uf) || [];
    }
    function As2(h2, g3, d2) {
      var P3;
      return d2(h2, function(S3, N13, X2) {
        if (g3(S3, N13, X2))
          return P3 = N13, false;
      }), P3;
    }
    function xe3(h2, g3, d2, P3) {
      for (var S3 = h2.length, N13 = d2 + (P3 ? 1 : -1); P3 ? N13-- : ++N13 < S3; )
        if (g3(h2[N13], N13, h2))
          return N13;
      return -1;
    }
    function Rt3(h2, g3, d2) {
      return g3 === g3 ? co(h2, g3, d2) : xe3(h2, Cs2, d2);
    }
    function jf(h2, g3, d2, P3) {
      for (var S3 = d2 - 1, N13 = h2.length; ++S3 < N13; )
        if (P3(h2[S3], g3))
          return S3;
      return -1;
    }
    function Cs2(h2) {
      return h2 !== h2;
    }
    function Is2(h2, g3) {
      var d2 = h2 == null ? 0 : h2.length;
      return d2 ? Ur(h2, g3) / d2 : ge3;
    }
    function Nr(h2) {
      return function(g3) {
        return g3 == null ? i3 : g3[h2];
      };
    }
    function $r(h2) {
      return function(g3) {
        return h2 == null ? i3 : h2[g3];
      };
    }
    function xs2(h2, g3, d2, P3, S3) {
      return S3(h2, function(N13, X2, F4) {
        d2 = P3 ? (P3 = false, N13) : g3(d2, N13, X2, F4);
      }), d2;
    }
    function no(h2, g3) {
      var d2 = h2.length;
      for (h2.sort(g3); d2--; )
        h2[d2] = h2[d2].value;
      return h2;
    }
    function Ur(h2, g3) {
      for (var d2, P3 = -1, S3 = h2.length; ++P3 < S3; ) {
        var N13 = g3(h2[P3]);
        N13 !== i3 && (d2 = d2 === i3 ? N13 : d2 + N13);
      }
      return d2;
    }
    function Wr(h2, g3) {
      for (var d2 = -1, P3 = Array(h2); ++d2 < h2; )
        P3[d2] = g3(d2);
      return P3;
    }
    function to(h2, g3) {
      return G4(g3, function(d2) {
        return [d2, h2[d2]];
      });
    }
    function Es2(h2) {
      return h2 && h2.slice(0, Rs2(h2) + 1).replace(xr, "");
    }
    function hn5(h2) {
      return function(g3) {
        return h2(g3);
      };
    }
    function Fr(h2, g3) {
      return G4(g3, function(d2) {
        return h2[d2];
      });
    }
    function kt3(h2, g3) {
      return h2.has(g3);
    }
    function ys2(h2, g3) {
      for (var d2 = -1, P3 = h2.length; ++d2 < P3 && Rt3(g3, h2[d2], 0) > -1; )
        ;
      return d2;
    }
    function Ss2(h2, g3) {
      for (var d2 = h2.length; d2-- && Rt3(g3, h2[d2], 0) > -1; )
        ;
      return d2;
    }
    function eo(h2, g3) {
      for (var d2 = h2.length, P3 = 0; d2--; )
        h2[d2] === g3 && ++P3;
      return P3;
    }
    var ro = $r(Mf), io = $r(qf);
    function so(h2) {
      return "\\" + Gf[h2];
    }
    function uo(h2, g3) {
      return h2 == null ? i3 : h2[g3];
    }
    function bt2(h2) {
      return $f.test(h2);
    }
    function ao(h2) {
      return Uf.test(h2);
    }
    function fo(h2) {
      for (var g3, d2 = []; !(g3 = h2.next()).done; )
        d2.push(g3.value);
      return d2;
    }
    function Mr(h2) {
      var g3 = -1, d2 = Array(h2.size);
      return h2.forEach(function(P3, S3) {
        d2[++g3] = [S3, P3];
      }), d2;
    }
    function Os2(h2, g3) {
      return function(d2) {
        return h2(g3(d2));
      };
    }
    function nt3(h2, g3) {
      for (var d2 = -1, P3 = h2.length, S3 = 0, N13 = []; ++d2 < P3; ) {
        var X2 = h2[d2];
        (X2 === g3 || X2 === At3) && (h2[d2] = At3, N13[S3++] = d2);
      }
      return N13;
    }
    function Ee(h2) {
      var g3 = -1, d2 = Array(h2.size);
      return h2.forEach(function(P3) {
        d2[++g3] = P3;
      }), d2;
    }
    function oo(h2) {
      var g3 = -1, d2 = Array(h2.size);
      return h2.forEach(function(P3) {
        d2[++g3] = [P3, P3];
      }), d2;
    }
    function co(h2, g3, d2) {
      for (var P3 = d2 - 1, S3 = h2.length; ++P3 < S3; )
        if (h2[P3] === g3)
          return P3;
      return -1;
    }
    function ho(h2, g3, d2) {
      for (var P3 = d2 + 1; P3--; )
        if (h2[P3] === g3)
          return P3;
      return P3;
    }
    function Tt4(h2) {
      return bt2(h2) ? po(h2) : Qf(h2);
    }
    function On2(h2) {
      return bt2(h2) ? go(h2) : Vf(h2);
    }
    function Rs2(h2) {
      for (var g3 = h2.length; g3-- && tf.test(h2.charAt(g3)); )
        ;
      return g3;
    }
    var lo = $r(Bf);
    function po(h2) {
      for (var g3 = Rr2.lastIndex = 0; Rr2.test(h2); )
        ++g3;
      return g3;
    }
    function go(h2) {
      return h2.match(Rr2) || [];
    }
    function vo(h2) {
      return h2.match(Nf) || [];
    }
    var _o = function h2(g3) {
      g3 = g3 == null ? k3 : Lt3.defaults(k3.Object(), g3, Lt3.pick(k3, Wf));
      var d2 = g3.Array, P3 = g3.Date, S3 = g3.Error, N13 = g3.Function, X2 = g3.Math, F4 = g3.Object, qr = g3.RegExp, mo = g3.String, wn2 = g3.TypeError, ye = d2.prototype, wo = N13.prototype, Dt4 = F4.prototype, Se2 = g3["__core-js_shared__"], Oe3 = wo.toString, U3 = Dt4.hasOwnProperty, Po = 0, bs2 = function() {
        var n2 = /[^.]+$/.exec(Se2 && Se2.keys && Se2.keys.IE_PROTO || "");
        return n2 ? "Symbol(src)_1." + n2 : "";
      }(), Re2 = Dt4.toString, Ao = Oe3.call(F4), Co = k3._, Io = qr("^" + Oe3.call(U3).replace(Ir2, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$"), be = ps2 ? g3.Buffer : i3, tt3 = g3.Symbol, Te2 = g3.Uint8Array, Ts2 = be ? be.allocUnsafe : i3, Le2 = Os2(F4.getPrototypeOf, F4), Ls2 = F4.create, Ds2 = Dt4.propertyIsEnumerable, De3 = ye.splice, Hs2 = tt3 ? tt3.isConcatSpreadable : i3, jt3 = tt3 ? tt3.iterator : i3, lt3 = tt3 ? tt3.toStringTag : i3, He3 = function() {
        try {
          var n2 = _t3(F4, "defineProperty");
          return n2({}, "", {}), n2;
        } catch {
        }
      }(), xo = g3.clearTimeout !== k3.clearTimeout && g3.clearTimeout, Eo = P3 && P3.now !== k3.Date.now && P3.now, yo = g3.setTimeout !== k3.setTimeout && g3.setTimeout, Ne2 = X2.ceil, $e5 = X2.floor, Br = F4.getOwnPropertySymbols, So = be ? be.isBuffer : i3, Ns2 = g3.isFinite, Oo = ye.join, Ro = Os2(F4.keys, F4), Q4 = X2.max, nn2 = X2.min, bo = P3.now, To = g3.parseInt, $s2 = X2.random, Lo = ye.reverse, Gr = _t3(g3, "DataView"), ne4 = _t3(g3, "Map"), zr = _t3(g3, "Promise"), Ht2 = _t3(g3, "Set"), te3 = _t3(g3, "WeakMap"), ee4 = _t3(F4, "create"), Ue5 = te3 && new te3(), Nt2 = {}, Do = mt3(Gr), Ho = mt3(ne4), No = mt3(zr), $o = mt3(Ht2), Uo = mt3(te3), We2 = tt3 ? tt3.prototype : i3, re3 = We2 ? We2.valueOf : i3, Us2 = We2 ? We2.toString : i3;
      function a2(n2) {
        if (K4(n2) && !O5(n2) && !(n2 instanceof D2)) {
          if (n2 instanceof Pn)
            return n2;
          if (U3.call(n2, "__wrapped__"))
            return Wu(n2);
        }
        return new Pn(n2);
      }
      var $t3 = function() {
        function n2() {
        }
        return function(t) {
          if (!z6(t))
            return {};
          if (Ls2)
            return Ls2(t);
          n2.prototype = t;
          var e = new n2();
          return n2.prototype = i3, e;
        };
      }();
      function Fe3() {
      }
      function Pn(n2, t) {
        this.__wrapped__ = n2, this.__actions__ = [], this.__chain__ = !!t, this.__index__ = 0, this.__values__ = i3;
      }
      a2.templateSettings = { escape: Xa, evaluate: Qa, interpolate: Yi2, variable: "", imports: { _: a2 } }, a2.prototype = Fe3.prototype, a2.prototype.constructor = a2, Pn.prototype = $t3(Fe3.prototype), Pn.prototype.constructor = Pn;
      function D2(n2) {
        this.__wrapped__ = n2, this.__actions__ = [], this.__dir__ = 1, this.__filtered__ = false, this.__iteratees__ = [], this.__takeCount__ = Nn, this.__views__ = [];
      }
      function Wo() {
        var n2 = new D2(this.__wrapped__);
        return n2.__actions__ = un2(this.__actions__), n2.__dir__ = this.__dir__, n2.__filtered__ = this.__filtered__, n2.__iteratees__ = un2(this.__iteratees__), n2.__takeCount__ = this.__takeCount__, n2.__views__ = un2(this.__views__), n2;
      }
      function Fo() {
        if (this.__filtered__) {
          var n2 = new D2(this);
          n2.__dir__ = -1, n2.__filtered__ = true;
        } else
          n2 = this.clone(), n2.__dir__ *= -1;
        return n2;
      }
      function Mo() {
        var n2 = this.__wrapped__.value(), t = this.__dir__, e = O5(n2), r = t < 0, s = e ? n2.length : 0, f4 = kc(0, s, this.__views__), o = f4.start, c3 = f4.end, l = c3 - o, v = r ? c3 : o - 1, _3 = this.__iteratees__, m4 = _3.length, w8 = 0, A3 = nn2(l, this.__takeCount__);
        if (!e || !r && s == l && A3 == l)
          return au(n2, this.__actions__);
        var I2 = [];
        n:
          for (; l-- && w8 < A3; ) {
            v += t;
            for (var b5 = -1, x3 = n2[v]; ++b5 < m4; ) {
              var L3 = _3[b5], H4 = L3.iteratee, dn = L3.type, sn2 = H4(x3);
              if (dn == La)
                x3 = sn2;
              else if (!sn2) {
                if (dn == qi2)
                  continue n;
                break n;
              }
            }
            I2[w8++] = x3;
          }
        return I2;
      }
      D2.prototype = $t3(Fe3.prototype), D2.prototype.constructor = D2;
      function pt3(n2) {
        var t = -1, e = n2 == null ? 0 : n2.length;
        for (this.clear(); ++t < e; ) {
          var r = n2[t];
          this.set(r[0], r[1]);
        }
      }
      function qo() {
        this.__data__ = ee4 ? ee4(null) : {}, this.size = 0;
      }
      function Bo(n2) {
        var t = this.has(n2) && delete this.__data__[n2];
        return this.size -= t ? 1 : 0, t;
      }
      function Go(n2) {
        var t = this.__data__;
        if (ee4) {
          var e = t[n2];
          return e === Gt ? i3 : e;
        }
        return U3.call(t, n2) ? t[n2] : i3;
      }
      function zo(n2) {
        var t = this.__data__;
        return ee4 ? t[n2] !== i3 : U3.call(t, n2);
      }
      function Ko(n2, t) {
        var e = this.__data__;
        return this.size += this.has(n2) ? 0 : 1, e[n2] = ee4 && t === i3 ? Gt : t, this;
      }
      pt3.prototype.clear = qo, pt3.prototype.delete = Bo, pt3.prototype.get = Go, pt3.prototype.has = zo, pt3.prototype.set = Ko;
      function Bn(n2) {
        var t = -1, e = n2 == null ? 0 : n2.length;
        for (this.clear(); ++t < e; ) {
          var r = n2[t];
          this.set(r[0], r[1]);
        }
      }
      function Yo() {
        this.__data__ = [], this.size = 0;
      }
      function Zo(n2) {
        var t = this.__data__, e = Me4(t, n2);
        if (e < 0)
          return false;
        var r = t.length - 1;
        return e == r ? t.pop() : De3.call(t, e, 1), --this.size, true;
      }
      function Jo(n2) {
        var t = this.__data__, e = Me4(t, n2);
        return e < 0 ? i3 : t[e][1];
      }
      function Xo(n2) {
        return Me4(this.__data__, n2) > -1;
      }
      function Qo(n2, t) {
        var e = this.__data__, r = Me4(e, n2);
        return r < 0 ? (++this.size, e.push([n2, t])) : e[r][1] = t, this;
      }
      Bn.prototype.clear = Yo, Bn.prototype.delete = Zo, Bn.prototype.get = Jo, Bn.prototype.has = Xo, Bn.prototype.set = Qo;
      function Gn(n2) {
        var t = -1, e = n2 == null ? 0 : n2.length;
        for (this.clear(); ++t < e; ) {
          var r = n2[t];
          this.set(r[0], r[1]);
        }
      }
      function Vo() {
        this.size = 0, this.__data__ = { hash: new pt3(), map: new (ne4 || Bn)(), string: new pt3() };
      }
      function ko(n2) {
        var t = ke2(this, n2).delete(n2);
        return this.size -= t ? 1 : 0, t;
      }
      function jo(n2) {
        return ke2(this, n2).get(n2);
      }
      function nc(n2) {
        return ke2(this, n2).has(n2);
      }
      function tc(n2, t) {
        var e = ke2(this, n2), r = e.size;
        return e.set(n2, t), this.size += e.size == r ? 0 : 1, this;
      }
      Gn.prototype.clear = Vo, Gn.prototype.delete = ko, Gn.prototype.get = jo, Gn.prototype.has = nc, Gn.prototype.set = tc;
      function dt3(n2) {
        var t = -1, e = n2 == null ? 0 : n2.length;
        for (this.__data__ = new Gn(); ++t < e; )
          this.add(n2[t]);
      }
      function ec(n2) {
        return this.__data__.set(n2, Gt), this;
      }
      function rc(n2) {
        return this.__data__.has(n2);
      }
      dt3.prototype.add = dt3.prototype.push = ec, dt3.prototype.has = rc;
      function Rn2(n2) {
        var t = this.__data__ = new Bn(n2);
        this.size = t.size;
      }
      function ic() {
        this.__data__ = new Bn(), this.size = 0;
      }
      function sc(n2) {
        var t = this.__data__, e = t.delete(n2);
        return this.size = t.size, e;
      }
      function uc(n2) {
        return this.__data__.get(n2);
      }
      function ac(n2) {
        return this.__data__.has(n2);
      }
      function fc(n2, t) {
        var e = this.__data__;
        if (e instanceof Bn) {
          var r = e.__data__;
          if (!ne4 || r.length < y3 - 1)
            return r.push([n2, t]), this.size = ++e.size, this;
          e = this.__data__ = new Gn(r);
        }
        return e.set(n2, t), this.size = e.size, this;
      }
      Rn2.prototype.clear = ic, Rn2.prototype.delete = sc, Rn2.prototype.get = uc, Rn2.prototype.has = ac, Rn2.prototype.set = fc;
      function Ws2(n2, t) {
        var e = O5(n2), r = !e && wt3(n2), s = !e && !r && ut3(n2), f4 = !e && !r && !s && Mt3(n2), o = e || r || s || f4, c3 = o ? Wr(n2.length, mo) : [], l = c3.length;
        for (var v in n2)
          (t || U3.call(n2, v)) && !(o && (v == "length" || s && (v == "offset" || v == "parent") || f4 && (v == "buffer" || v == "byteLength" || v == "byteOffset") || Zn(v, l))) && c3.push(v);
        return c3;
      }
      function Fs2(n2) {
        var t = n2.length;
        return t ? n2[ti(0, t - 1)] : i3;
      }
      function oc(n2, t) {
        return je4(un2(n2), gt2(t, 0, n2.length));
      }
      function cc(n2) {
        return je4(un2(n2));
      }
      function Kr(n2, t, e) {
        (e !== i3 && !bn(n2[t], e) || e === i3 && !(t in n2)) && zn(n2, t, e);
      }
      function ie6(n2, t, e) {
        var r = n2[t];
        (!(U3.call(n2, t) && bn(r, e)) || e === i3 && !(t in n2)) && zn(n2, t, e);
      }
      function Me4(n2, t) {
        for (var e = n2.length; e--; )
          if (bn(n2[e][0], t))
            return e;
        return -1;
      }
      function hc(n2, t, e, r) {
        return et3(n2, function(s, f4, o) {
          t(r, s, e(s), o);
        }), r;
      }
      function Ms2(n2, t) {
        return n2 && Un2(t, V3(t), n2);
      }
      function lc(n2, t) {
        return n2 && Un2(t, fn(t), n2);
      }
      function zn(n2, t, e) {
        t == "__proto__" && He3 ? He3(n2, t, { configurable: true, enumerable: true, value: e, writable: true }) : n2[t] = e;
      }
      function Yr(n2, t) {
        for (var e = -1, r = t.length, s = d2(r), f4 = n2 == null; ++e < r; )
          s[e] = f4 ? i3 : yi(n2, t[e]);
        return s;
      }
      function gt2(n2, t, e) {
        return n2 === n2 && (e !== i3 && (n2 = n2 <= e ? n2 : e), t !== i3 && (n2 = n2 >= t ? n2 : t)), n2;
      }
      function An2(n2, t, e, r, s, f4) {
        var o, c3 = t & Ln, l = t & Fn2, v = t & Ct3;
        if (e && (o = s ? e(n2, r, s, f4) : e(n2)), o !== i3)
          return o;
        if (!z6(n2))
          return n2;
        var _3 = O5(n2);
        if (_3) {
          if (o = nh(n2), !c3)
            return un2(n2, o);
        } else {
          var m4 = tn2(n2), w8 = m4 == me2 || m4 == Bi2;
          if (ut3(n2))
            return cu(n2, c3);
          if (m4 == qn2 || m4 == yt3 || w8 && !s) {
            if (o = l || w8 ? {} : Ru(n2), !c3)
              return l ? Gc(n2, lc(o, n2)) : Bc(n2, Ms2(o, n2));
          } else {
            if (!q4[m4])
              return s ? n2 : {};
            o = th(n2, m4, c3);
          }
        }
        f4 || (f4 = new Rn2());
        var A3 = f4.get(n2);
        if (A3)
          return A3;
        f4.set(n2, o), ia(n2) ? n2.forEach(function(x3) {
          o.add(An2(x3, t, e, x3, n2, f4));
        }) : ea(n2) && n2.forEach(function(x3, L3) {
          o.set(L3, An2(x3, t, e, L3, n2, f4));
        });
        var I2 = v ? l ? li : hi : l ? fn : V3, b5 = _3 ? i3 : I2(n2);
        return mn5(b5 || n2, function(x3, L3) {
          b5 && (L3 = x3, x3 = n2[L3]), ie6(o, L3, An2(x3, t, e, L3, n2, f4));
        }), o;
      }
      function pc(n2) {
        var t = V3(n2);
        return function(e) {
          return qs2(e, n2, t);
        };
      }
      function qs2(n2, t, e) {
        var r = e.length;
        if (n2 == null)
          return !r;
        for (n2 = F4(n2); r--; ) {
          var s = e[r], f4 = t[s], o = n2[s];
          if (o === i3 && !(s in n2) || !f4(o))
            return false;
        }
        return true;
      }
      function Bs2(n2, t, e) {
        if (typeof n2 != "function")
          throw new wn2(M3);
        return he2(function() {
          n2.apply(i3, e);
        }, t);
      }
      function se3(n2, t, e, r) {
        var s = -1, f4 = Ie3, o = true, c3 = n2.length, l = [], v = t.length;
        if (!c3)
          return l;
        e && (t = G4(t, hn5(e))), r ? (f4 = Lr, o = false) : t.length >= y3 && (f4 = kt3, o = false, t = new dt3(t));
        n:
          for (; ++s < c3; ) {
            var _3 = n2[s], m4 = e == null ? _3 : e(_3);
            if (_3 = r || _3 !== 0 ? _3 : 0, o && m4 === m4) {
              for (var w8 = v; w8--; )
                if (t[w8] === m4)
                  continue n;
              l.push(_3);
            } else
              f4(t, m4, r) || l.push(_3);
          }
        return l;
      }
      var et3 = gu($n3), Gs2 = gu(Jr, true);
      function dc(n2, t) {
        var e = true;
        return et3(n2, function(r, s, f4) {
          return e = !!t(r, s, f4), e;
        }), e;
      }
      function qe3(n2, t, e) {
        for (var r = -1, s = n2.length; ++r < s; ) {
          var f4 = n2[r], o = t(f4);
          if (o != null && (c3 === i3 ? o === o && !pn5(o) : e(o, c3)))
            var c3 = o, l = f4;
        }
        return l;
      }
      function gc(n2, t, e, r) {
        var s = n2.length;
        for (e = R3(e), e < 0 && (e = -e > s ? 0 : s + e), r = r === i3 || r > s ? s : R3(r), r < 0 && (r += s), r = e > r ? 0 : ua(r); e < r; )
          n2[e++] = t;
        return n2;
      }
      function zs2(n2, t) {
        var e = [];
        return et3(n2, function(r, s, f4) {
          t(r, s, f4) && e.push(r);
        }), e;
      }
      function j7(n2, t, e, r, s) {
        var f4 = -1, o = n2.length;
        for (e || (e = rh), s || (s = []); ++f4 < o; ) {
          var c3 = n2[f4];
          t > 0 && e(c3) ? t > 1 ? j7(c3, t - 1, e, r, s) : jn2(s, c3) : r || (s[s.length] = c3);
        }
        return s;
      }
      var Zr = vu(), Ks2 = vu(true);
      function $n3(n2, t) {
        return n2 && Zr(n2, t, V3);
      }
      function Jr(n2, t) {
        return n2 && Ks2(n2, t, V3);
      }
      function Be2(n2, t) {
        return kn2(t, function(e) {
          return Jn(n2[e]);
        });
      }
      function vt2(n2, t) {
        t = it4(t, n2);
        for (var e = 0, r = t.length; n2 != null && e < r; )
          n2 = n2[Wn2(t[e++])];
        return e && e == r ? n2 : i3;
      }
      function Ys2(n2, t, e) {
        var r = t(n2);
        return O5(n2) ? r : jn2(r, e(n2));
      }
      function en2(n2) {
        return n2 == null ? n2 === i3 ? Ba : Ma : lt3 && lt3 in F4(n2) ? Vc(n2) : ch(n2);
      }
      function Xr(n2, t) {
        return n2 > t;
      }
      function vc(n2, t) {
        return n2 != null && U3.call(n2, t);
      }
      function _c(n2, t) {
        return n2 != null && t in F4(n2);
      }
      function mc(n2, t, e) {
        return n2 >= nn2(t, e) && n2 < Q4(t, e);
      }
      function Qr(n2, t, e) {
        for (var r = e ? Lr : Ie3, s = n2[0].length, f4 = n2.length, o = f4, c3 = d2(f4), l = 1 / 0, v = []; o--; ) {
          var _3 = n2[o];
          o && t && (_3 = G4(_3, hn5(t))), l = nn2(_3.length, l), c3[o] = !e && (t || s >= 120 && _3.length >= 120) ? new dt3(o && _3) : i3;
        }
        _3 = n2[0];
        var m4 = -1, w8 = c3[0];
        n:
          for (; ++m4 < s && v.length < l; ) {
            var A3 = _3[m4], I2 = t ? t(A3) : A3;
            if (A3 = e || A3 !== 0 ? A3 : 0, !(w8 ? kt3(w8, I2) : r(v, I2, e))) {
              for (o = f4; --o; ) {
                var b5 = c3[o];
                if (!(b5 ? kt3(b5, I2) : r(n2[o], I2, e)))
                  continue n;
              }
              w8 && w8.push(I2), v.push(A3);
            }
          }
        return v;
      }
      function wc(n2, t, e, r) {
        return $n3(n2, function(s, f4, o) {
          t(r, e(s), f4, o);
        }), r;
      }
      function ue7(n2, t, e) {
        t = it4(t, n2), n2 = Du(n2, t);
        var r = n2 == null ? n2 : n2[Wn2(In(t))];
        return r == null ? i3 : cn2(r, n2, e);
      }
      function Zs2(n2) {
        return K4(n2) && en2(n2) == yt3;
      }
      function Pc(n2) {
        return K4(n2) && en2(n2) == Vt2;
      }
      function Ac(n2) {
        return K4(n2) && en2(n2) == Yt;
      }
      function ae7(n2, t, e, r, s) {
        return n2 === t ? true : n2 == null || t == null || !K4(n2) && !K4(t) ? n2 !== n2 && t !== t : Cc(n2, t, e, r, ae7, s);
      }
      function Cc(n2, t, e, r, s, f4) {
        var o = O5(n2), c3 = O5(t), l = o ? ve2 : tn2(n2), v = c3 ? ve2 : tn2(t);
        l = l == yt3 ? qn2 : l, v = v == yt3 ? qn2 : v;
        var _3 = l == qn2, m4 = v == qn2, w8 = l == v;
        if (w8 && ut3(n2)) {
          if (!ut3(t))
            return false;
          o = true, _3 = false;
        }
        if (w8 && !_3)
          return f4 || (f4 = new Rn2()), o || Mt3(n2) ? yu(n2, t, e, r, s, f4) : Xc(n2, t, l, e, r, s, f4);
        if (!(e & It6)) {
          var A3 = _3 && U3.call(n2, "__wrapped__"), I2 = m4 && U3.call(t, "__wrapped__");
          if (A3 || I2) {
            var b5 = A3 ? n2.value() : n2, x3 = I2 ? t.value() : t;
            return f4 || (f4 = new Rn2()), s(b5, x3, e, r, f4);
          }
        }
        return w8 ? (f4 || (f4 = new Rn2()), Qc(n2, t, e, r, s, f4)) : false;
      }
      function Ic(n2) {
        return K4(n2) && tn2(n2) == yn;
      }
      function Vr(n2, t, e, r) {
        var s = e.length, f4 = s, o = !r;
        if (n2 == null)
          return !f4;
        for (n2 = F4(n2); s--; ) {
          var c3 = e[s];
          if (o && c3[2] ? c3[1] !== n2[c3[0]] : !(c3[0] in n2))
            return false;
        }
        for (; ++s < f4; ) {
          c3 = e[s];
          var l = c3[0], v = n2[l], _3 = c3[1];
          if (o && c3[2]) {
            if (v === i3 && !(l in n2))
              return false;
          } else {
            var m4 = new Rn2();
            if (r)
              var w8 = r(v, _3, l, n2, t, m4);
            if (!(w8 === i3 ? ae7(_3, v, It6 | de6, r, m4) : w8))
              return false;
          }
        }
        return true;
      }
      function Js2(n2) {
        if (!z6(n2) || sh(n2))
          return false;
        var t = Jn(n2) ? Io : lf;
        return t.test(mt3(n2));
      }
      function xc(n2) {
        return K4(n2) && en2(n2) == Jt;
      }
      function Ec(n2) {
        return K4(n2) && tn2(n2) == Sn;
      }
      function yc(n2) {
        return K4(n2) && sr2(n2.length) && !!B[en2(n2)];
      }
      function Xs2(n2) {
        return typeof n2 == "function" ? n2 : n2 == null ? on2 : typeof n2 == "object" ? O5(n2) ? ks2(n2[0], n2[1]) : Vs2(n2) : _a(n2);
      }
      function kr(n2) {
        if (!ce7(n2))
          return Ro(n2);
        var t = [];
        for (var e in F4(n2))
          U3.call(n2, e) && e != "constructor" && t.push(e);
        return t;
      }
      function Sc(n2) {
        if (!z6(n2))
          return oh(n2);
        var t = ce7(n2), e = [];
        for (var r in n2)
          r == "constructor" && (t || !U3.call(n2, r)) || e.push(r);
        return e;
      }
      function jr(n2, t) {
        return n2 < t;
      }
      function Qs2(n2, t) {
        var e = -1, r = an2(n2) ? d2(n2.length) : [];
        return et3(n2, function(s, f4, o) {
          r[++e] = t(s, f4, o);
        }), r;
      }
      function Vs2(n2) {
        var t = di(n2);
        return t.length == 1 && t[0][2] ? Tu(t[0][0], t[0][1]) : function(e) {
          return e === n2 || Vr(e, n2, t);
        };
      }
      function ks2(n2, t) {
        return vi(n2) && bu(t) ? Tu(Wn2(n2), t) : function(e) {
          var r = yi(e, n2);
          return r === i3 && r === t ? Si2(e, n2) : ae7(t, r, It6 | de6);
        };
      }
      function Ge3(n2, t, e, r, s) {
        n2 !== t && Zr(t, function(f4, o) {
          if (s || (s = new Rn2()), z6(f4))
            Oc(n2, t, o, e, Ge3, r, s);
          else {
            var c3 = r ? r(mi(n2, o), f4, o + "", n2, t, s) : i3;
            c3 === i3 && (c3 = f4), Kr(n2, o, c3);
          }
        }, fn);
      }
      function Oc(n2, t, e, r, s, f4, o) {
        var c3 = mi(n2, e), l = mi(t, e), v = o.get(l);
        if (v) {
          Kr(n2, e, v);
          return;
        }
        var _3 = f4 ? f4(c3, l, e + "", n2, t, o) : i3, m4 = _3 === i3;
        if (m4) {
          var w8 = O5(l), A3 = !w8 && ut3(l), I2 = !w8 && !A3 && Mt3(l);
          _3 = l, w8 || A3 || I2 ? O5(c3) ? _3 = c3 : Y4(c3) ? _3 = un2(c3) : A3 ? (m4 = false, _3 = cu(l, true)) : I2 ? (m4 = false, _3 = hu(l, true)) : _3 = [] : le2(l) || wt3(l) ? (_3 = c3, wt3(c3) ? _3 = aa(c3) : (!z6(c3) || Jn(c3)) && (_3 = Ru(l))) : m4 = false;
        }
        m4 && (o.set(l, _3), s(_3, l, r, f4, o), o.delete(l)), Kr(n2, e, _3);
      }
      function js2(n2, t) {
        var e = n2.length;
        if (e)
          return t += t < 0 ? e : 0, Zn(t, e) ? n2[t] : i3;
      }
      function nu(n2, t, e) {
        t.length ? t = G4(t, function(f4) {
          return O5(f4) ? function(o) {
            return vt2(o, f4.length === 1 ? f4[0] : f4);
          } : f4;
        }) : t = [on2];
        var r = -1;
        t = G4(t, hn5(C8()));
        var s = Qs2(n2, function(f4, o, c3) {
          var l = G4(t, function(v) {
            return v(f4);
          });
          return { criteria: l, index: ++r, value: f4 };
        });
        return no(s, function(f4, o) {
          return qc(f4, o, e);
        });
      }
      function Rc(n2, t) {
        return tu(n2, t, function(e, r) {
          return Si2(n2, r);
        });
      }
      function tu(n2, t, e) {
        for (var r = -1, s = t.length, f4 = {}; ++r < s; ) {
          var o = t[r], c3 = vt2(n2, o);
          e(c3, o) && fe5(f4, it4(o, n2), c3);
        }
        return f4;
      }
      function bc(n2) {
        return function(t) {
          return vt2(t, n2);
        };
      }
      function ni(n2, t, e, r) {
        var s = r ? jf : Rt3, f4 = -1, o = t.length, c3 = n2;
        for (n2 === t && (t = un2(t)), e && (c3 = G4(n2, hn5(e))); ++f4 < o; )
          for (var l = 0, v = t[f4], _3 = e ? e(v) : v; (l = s(c3, _3, l, r)) > -1; )
            c3 !== n2 && De3.call(c3, l, 1), De3.call(n2, l, 1);
        return n2;
      }
      function eu(n2, t) {
        for (var e = n2 ? t.length : 0, r = e - 1; e--; ) {
          var s = t[e];
          if (e == r || s !== f4) {
            var f4 = s;
            Zn(s) ? De3.call(n2, s, 1) : ii(n2, s);
          }
        }
        return n2;
      }
      function ti(n2, t) {
        return n2 + $e5($s2() * (t - n2 + 1));
      }
      function Tc(n2, t, e, r) {
        for (var s = -1, f4 = Q4(Ne2((t - n2) / (e || 1)), 0), o = d2(f4); f4--; )
          o[r ? f4 : ++s] = n2, n2 += e;
        return o;
      }
      function ei(n2, t) {
        var e = "";
        if (!n2 || t < 1 || t > Vn2)
          return e;
        do
          t % 2 && (e += n2), t = $e5(t / 2), t && (n2 += n2);
        while (t);
        return e;
      }
      function T(n2, t) {
        return wi(Lu(n2, t, on2), n2 + "");
      }
      function Lc(n2) {
        return Fs2(qt2(n2));
      }
      function Dc(n2, t) {
        var e = qt2(n2);
        return je4(e, gt2(t, 0, e.length));
      }
      function fe5(n2, t, e, r) {
        if (!z6(n2))
          return n2;
        t = it4(t, n2);
        for (var s = -1, f4 = t.length, o = f4 - 1, c3 = n2; c3 != null && ++s < f4; ) {
          var l = Wn2(t[s]), v = e;
          if (l === "__proto__" || l === "constructor" || l === "prototype")
            return n2;
          if (s != o) {
            var _3 = c3[l];
            v = r ? r(_3, l, c3) : i3, v === i3 && (v = z6(_3) ? _3 : Zn(t[s + 1]) ? [] : {});
          }
          ie6(c3, l, v), c3 = c3[l];
        }
        return n2;
      }
      var ru = Ue5 ? function(n2, t) {
        return Ue5.set(n2, t), n2;
      } : on2, Hc = He3 ? function(n2, t) {
        return He3(n2, "toString", { configurable: true, enumerable: false, value: Ri(t), writable: true });
      } : on2;
      function Nc(n2) {
        return je4(qt2(n2));
      }
      function Cn2(n2, t, e) {
        var r = -1, s = n2.length;
        t < 0 && (t = -t > s ? 0 : s + t), e = e > s ? s : e, e < 0 && (e += s), s = t > e ? 0 : e - t >>> 0, t >>>= 0;
        for (var f4 = d2(s); ++r < s; )
          f4[r] = n2[r + t];
        return f4;
      }
      function $c(n2, t) {
        var e;
        return et3(n2, function(r, s, f4) {
          return e = t(r, s, f4), !e;
        }), !!e;
      }
      function ze3(n2, t, e) {
        var r = 0, s = n2 == null ? r : n2.length;
        if (typeof t == "number" && t === t && s <= $a) {
          for (; r < s; ) {
            var f4 = r + s >>> 1, o = n2[f4];
            o !== null && !pn5(o) && (e ? o <= t : o < t) ? r = f4 + 1 : s = f4;
          }
          return s;
        }
        return ri(n2, t, on2, e);
      }
      function ri(n2, t, e, r) {
        var s = 0, f4 = n2 == null ? 0 : n2.length;
        if (f4 === 0)
          return 0;
        t = e(t);
        for (var o = t !== t, c3 = t === null, l = pn5(t), v = t === i3; s < f4; ) {
          var _3 = $e5((s + f4) / 2), m4 = e(n2[_3]), w8 = m4 !== i3, A3 = m4 === null, I2 = m4 === m4, b5 = pn5(m4);
          if (o)
            var x3 = r || I2;
          else
            v ? x3 = I2 && (r || w8) : c3 ? x3 = I2 && w8 && (r || !A3) : l ? x3 = I2 && w8 && !A3 && (r || !b5) : A3 || b5 ? x3 = false : x3 = r ? m4 <= t : m4 < t;
          x3 ? s = _3 + 1 : f4 = _3;
        }
        return nn2(f4, Na);
      }
      function iu(n2, t) {
        for (var e = -1, r = n2.length, s = 0, f4 = []; ++e < r; ) {
          var o = n2[e], c3 = t ? t(o) : o;
          if (!e || !bn(c3, l)) {
            var l = c3;
            f4[s++] = o === 0 ? 0 : o;
          }
        }
        return f4;
      }
      function su(n2) {
        return typeof n2 == "number" ? n2 : pn5(n2) ? ge3 : +n2;
      }
      function ln(n2) {
        if (typeof n2 == "string")
          return n2;
        if (O5(n2))
          return G4(n2, ln) + "";
        if (pn5(n2))
          return Us2 ? Us2.call(n2) : "";
        var t = n2 + "";
        return t == "0" && 1 / n2 == -ct3 ? "-0" : t;
      }
      function rt4(n2, t, e) {
        var r = -1, s = Ie3, f4 = n2.length, o = true, c3 = [], l = c3;
        if (e)
          o = false, s = Lr;
        else if (f4 >= y3) {
          var v = t ? null : Zc(n2);
          if (v)
            return Ee(v);
          o = false, s = kt3, l = new dt3();
        } else
          l = t ? [] : c3;
        n:
          for (; ++r < f4; ) {
            var _3 = n2[r], m4 = t ? t(_3) : _3;
            if (_3 = e || _3 !== 0 ? _3 : 0, o && m4 === m4) {
              for (var w8 = l.length; w8--; )
                if (l[w8] === m4)
                  continue n;
              t && l.push(m4), c3.push(_3);
            } else
              s(l, m4, e) || (l !== c3 && l.push(m4), c3.push(_3));
          }
        return c3;
      }
      function ii(n2, t) {
        return t = it4(t, n2), n2 = Du(n2, t), n2 == null || delete n2[Wn2(In(t))];
      }
      function uu(n2, t, e, r) {
        return fe5(n2, t, e(vt2(n2, t)), r);
      }
      function Ke2(n2, t, e, r) {
        for (var s = n2.length, f4 = r ? s : -1; (r ? f4-- : ++f4 < s) && t(n2[f4], f4, n2); )
          ;
        return e ? Cn2(n2, r ? 0 : f4, r ? f4 + 1 : s) : Cn2(n2, r ? f4 + 1 : 0, r ? s : f4);
      }
      function au(n2, t) {
        var e = n2;
        return e instanceof D2 && (e = e.value()), Dr2(t, function(r, s) {
          return s.func.apply(s.thisArg, jn2([r], s.args));
        }, e);
      }
      function si(n2, t, e) {
        var r = n2.length;
        if (r < 2)
          return r ? rt4(n2[0]) : [];
        for (var s = -1, f4 = d2(r); ++s < r; )
          for (var o = n2[s], c3 = -1; ++c3 < r; )
            c3 != s && (f4[s] = se3(f4[s] || o, n2[c3], t, e));
        return rt4(j7(f4, 1), t, e);
      }
      function fu(n2, t, e) {
        for (var r = -1, s = n2.length, f4 = t.length, o = {}; ++r < s; ) {
          var c3 = r < f4 ? t[r] : i3;
          e(o, n2[r], c3);
        }
        return o;
      }
      function ui(n2) {
        return Y4(n2) ? n2 : [];
      }
      function ai(n2) {
        return typeof n2 == "function" ? n2 : on2;
      }
      function it4(n2, t) {
        return O5(n2) ? n2 : vi(n2, t) ? [n2] : Uu($4(n2));
      }
      var Uc = T;
      function st4(n2, t, e) {
        var r = n2.length;
        return e = e === i3 ? r : e, !t && e >= r ? n2 : Cn2(n2, t, e);
      }
      var ou = xo || function(n2) {
        return k3.clearTimeout(n2);
      };
      function cu(n2, t) {
        if (t)
          return n2.slice();
        var e = n2.length, r = Ts2 ? Ts2(e) : new n2.constructor(e);
        return n2.copy(r), r;
      }
      function fi(n2) {
        var t = new n2.constructor(n2.byteLength);
        return new Te2(t).set(new Te2(n2)), t;
      }
      function Wc(n2, t) {
        var e = t ? fi(n2.buffer) : n2.buffer;
        return new n2.constructor(e, n2.byteOffset, n2.byteLength);
      }
      function Fc(n2) {
        var t = new n2.constructor(n2.source, Zi2.exec(n2));
        return t.lastIndex = n2.lastIndex, t;
      }
      function Mc(n2) {
        return re3 ? F4(re3.call(n2)) : {};
      }
      function hu(n2, t) {
        var e = t ? fi(n2.buffer) : n2.buffer;
        return new n2.constructor(e, n2.byteOffset, n2.length);
      }
      function lu(n2, t) {
        if (n2 !== t) {
          var e = n2 !== i3, r = n2 === null, s = n2 === n2, f4 = pn5(n2), o = t !== i3, c3 = t === null, l = t === t, v = pn5(t);
          if (!c3 && !v && !f4 && n2 > t || f4 && o && l && !c3 && !v || r && o && l || !e && l || !s)
            return 1;
          if (!r && !f4 && !v && n2 < t || v && e && s && !r && !f4 || c3 && e && s || !o && s || !l)
            return -1;
        }
        return 0;
      }
      function qc(n2, t, e) {
        for (var r = -1, s = n2.criteria, f4 = t.criteria, o = s.length, c3 = e.length; ++r < o; ) {
          var l = lu(s[r], f4[r]);
          if (l) {
            if (r >= c3)
              return l;
            var v = e[r];
            return l * (v == "desc" ? -1 : 1);
          }
        }
        return n2.index - t.index;
      }
      function pu(n2, t, e, r) {
        for (var s = -1, f4 = n2.length, o = e.length, c3 = -1, l = t.length, v = Q4(f4 - o, 0), _3 = d2(l + v), m4 = !r; ++c3 < l; )
          _3[c3] = t[c3];
        for (; ++s < o; )
          (m4 || s < f4) && (_3[e[s]] = n2[s]);
        for (; v--; )
          _3[c3++] = n2[s++];
        return _3;
      }
      function du(n2, t, e, r) {
        for (var s = -1, f4 = n2.length, o = -1, c3 = e.length, l = -1, v = t.length, _3 = Q4(f4 - c3, 0), m4 = d2(_3 + v), w8 = !r; ++s < _3; )
          m4[s] = n2[s];
        for (var A3 = s; ++l < v; )
          m4[A3 + l] = t[l];
        for (; ++o < c3; )
          (w8 || s < f4) && (m4[A3 + e[o]] = n2[s++]);
        return m4;
      }
      function un2(n2, t) {
        var e = -1, r = n2.length;
        for (t || (t = d2(r)); ++e < r; )
          t[e] = n2[e];
        return t;
      }
      function Un2(n2, t, e, r) {
        var s = !e;
        e || (e = {});
        for (var f4 = -1, o = t.length; ++f4 < o; ) {
          var c3 = t[f4], l = r ? r(e[c3], n2[c3], c3, e, n2) : i3;
          l === i3 && (l = n2[c3]), s ? zn(e, c3, l) : ie6(e, c3, l);
        }
        return e;
      }
      function Bc(n2, t) {
        return Un2(n2, gi(n2), t);
      }
      function Gc(n2, t) {
        return Un2(n2, Su(n2), t);
      }
      function Ye3(n2, t) {
        return function(e, r) {
          var s = O5(e) ? Zf : hc, f4 = t ? t() : {};
          return s(e, n2, C8(r, 2), f4);
        };
      }
      function Ut3(n2) {
        return T(function(t, e) {
          var r = -1, s = e.length, f4 = s > 1 ? e[s - 1] : i3, o = s > 2 ? e[2] : i3;
          for (f4 = n2.length > 3 && typeof f4 == "function" ? (s--, f4) : i3, o && rn2(e[0], e[1], o) && (f4 = s < 3 ? i3 : f4, s = 1), t = F4(t); ++r < s; ) {
            var c3 = e[r];
            c3 && n2(t, c3, r, f4);
          }
          return t;
        });
      }
      function gu(n2, t) {
        return function(e, r) {
          if (e == null)
            return e;
          if (!an2(e))
            return n2(e, r);
          for (var s = e.length, f4 = t ? s : -1, o = F4(e); (t ? f4-- : ++f4 < s) && r(o[f4], f4, o) !== false; )
            ;
          return e;
        };
      }
      function vu(n2) {
        return function(t, e, r) {
          for (var s = -1, f4 = F4(t), o = r(t), c3 = o.length; c3--; ) {
            var l = o[n2 ? c3 : ++s];
            if (e(f4[l], l, f4) === false)
              break;
          }
          return t;
        };
      }
      function zc(n2, t, e) {
        var r = t & vn5, s = oe4(n2);
        function f4() {
          var o = this && this !== k3 && this instanceof f4 ? s : n2;
          return o.apply(r ? e : this, arguments);
        }
        return f4;
      }
      function _u(n2) {
        return function(t) {
          t = $4(t);
          var e = bt2(t) ? On2(t) : i3, r = e ? e[0] : t.charAt(0), s = e ? st4(e, 1).join("") : t.slice(1);
          return r[n2]() + s;
        };
      }
      function Wt(n2) {
        return function(t) {
          return Dr2(ga(da(t).replace(Df, "")), n2, "");
        };
      }
      function oe4(n2) {
        return function() {
          var t = arguments;
          switch (t.length) {
            case 0:
              return new n2();
            case 1:
              return new n2(t[0]);
            case 2:
              return new n2(t[0], t[1]);
            case 3:
              return new n2(t[0], t[1], t[2]);
            case 4:
              return new n2(t[0], t[1], t[2], t[3]);
            case 5:
              return new n2(t[0], t[1], t[2], t[3], t[4]);
            case 6:
              return new n2(t[0], t[1], t[2], t[3], t[4], t[5]);
            case 7:
              return new n2(t[0], t[1], t[2], t[3], t[4], t[5], t[6]);
          }
          var e = $t3(n2.prototype), r = n2.apply(e, t);
          return z6(r) ? r : e;
        };
      }
      function Kc(n2, t, e) {
        var r = oe4(n2);
        function s() {
          for (var f4 = arguments.length, o = d2(f4), c3 = f4, l = Ft3(s); c3--; )
            o[c3] = arguments[c3];
          var v = f4 < 3 && o[0] !== l && o[f4 - 1] !== l ? [] : nt3(o, l);
          if (f4 -= v.length, f4 < e)
            return Cu(n2, t, Ze4, s.placeholder, i3, o, v, i3, i3, e - f4);
          var _3 = this && this !== k3 && this instanceof s ? r : n2;
          return cn2(_3, this, o);
        }
        return s;
      }
      function mu(n2) {
        return function(t, e, r) {
          var s = F4(t);
          if (!an2(t)) {
            var f4 = C8(e, 3);
            t = V3(t), e = function(c3) {
              return f4(s[c3], c3, s);
            };
          }
          var o = n2(t, e, r);
          return o > -1 ? s[f4 ? t[o] : o] : i3;
        };
      }
      function wu(n2) {
        return Yn2(function(t) {
          var e = t.length, r = e, s = Pn.prototype.thru;
          for (n2 && t.reverse(); r--; ) {
            var f4 = t[r];
            if (typeof f4 != "function")
              throw new wn2(M3);
            if (s && !o && Ve3(f4) == "wrapper")
              var o = new Pn([], true);
          }
          for (r = o ? r : e; ++r < e; ) {
            f4 = t[r];
            var c3 = Ve3(f4), l = c3 == "wrapper" ? pi(f4) : i3;
            l && _i(l[0]) && l[1] == (Mn2 | Dn2 | Hn | zt3) && !l[4].length && l[9] == 1 ? o = o[Ve3(l[0])].apply(o, l[3]) : o = f4.length == 1 && _i(f4) ? o[c3]() : o.thru(f4);
          }
          return function() {
            var v = arguments, _3 = v[0];
            if (o && v.length == 1 && O5(_3))
              return o.plant(_3).value();
            for (var m4 = 0, w8 = e ? t[m4].apply(this, v) : _3; ++m4 < e; )
              w8 = t[m4].call(this, w8);
            return w8;
          };
        });
      }
      function Ze4(n2, t, e, r, s, f4, o, c3, l, v) {
        var _3 = t & Mn2, m4 = t & vn5, w8 = t & ot4, A3 = t & (Dn2 | xt3), I2 = t & pr2, b5 = w8 ? i3 : oe4(n2);
        function x3() {
          for (var L3 = arguments.length, H4 = d2(L3), dn = L3; dn--; )
            H4[dn] = arguments[dn];
          if (A3)
            var sn2 = Ft3(x3), gn = eo(H4, sn2);
          if (r && (H4 = pu(H4, r, s, A3)), f4 && (H4 = du(H4, f4, o, A3)), L3 -= gn, A3 && L3 < v) {
            var Z3 = nt3(H4, sn2);
            return Cu(n2, t, Ze4, x3.placeholder, e, H4, Z3, c3, l, v - L3);
          }
          var Tn = m4 ? e : this, Qn = w8 ? Tn[n2] : n2;
          return L3 = H4.length, c3 ? H4 = hh(H4, c3) : I2 && L3 > 1 && H4.reverse(), _3 && l < L3 && (H4.length = l), this && this !== k3 && this instanceof x3 && (Qn = b5 || oe4(Qn)), Qn.apply(Tn, H4);
        }
        return x3;
      }
      function Pu(n2, t) {
        return function(e, r) {
          return wc(e, n2, t(r), {});
        };
      }
      function Je3(n2, t) {
        return function(e, r) {
          var s;
          if (e === i3 && r === i3)
            return t;
          if (e !== i3 && (s = e), r !== i3) {
            if (s === i3)
              return r;
            typeof e == "string" || typeof r == "string" ? (e = ln(e), r = ln(r)) : (e = su(e), r = su(r)), s = n2(e, r);
          }
          return s;
        };
      }
      function oi(n2) {
        return Yn2(function(t) {
          return t = G4(t, hn5(C8())), T(function(e) {
            var r = this;
            return n2(t, function(s) {
              return cn2(s, r, e);
            });
          });
        });
      }
      function Xe3(n2, t) {
        t = t === i3 ? " " : ln(t);
        var e = t.length;
        if (e < 2)
          return e ? ei(t, n2) : t;
        var r = ei(t, Ne2(n2 / Tt4(t)));
        return bt2(t) ? st4(On2(r), 0, n2).join("") : r.slice(0, n2);
      }
      function Yc(n2, t, e, r) {
        var s = t & vn5, f4 = oe4(n2);
        function o() {
          for (var c3 = -1, l = arguments.length, v = -1, _3 = r.length, m4 = d2(_3 + l), w8 = this && this !== k3 && this instanceof o ? f4 : n2; ++v < _3; )
            m4[v] = r[v];
          for (; l--; )
            m4[v++] = arguments[++c3];
          return cn2(w8, s ? e : this, m4);
        }
        return o;
      }
      function Au(n2) {
        return function(t, e, r) {
          return r && typeof r != "number" && rn2(t, e, r) && (e = r = i3), t = Xn3(t), e === i3 ? (e = t, t = 0) : e = Xn3(e), r = r === i3 ? t < e ? 1 : -1 : Xn3(r), Tc(t, e, r, n2);
        };
      }
      function Qe3(n2) {
        return function(t, e) {
          return typeof t == "string" && typeof e == "string" || (t = xn(t), e = xn(e)), n2(t, e);
        };
      }
      function Cu(n2, t, e, r, s, f4, o, c3, l, v) {
        var _3 = t & Dn2, m4 = _3 ? o : i3, w8 = _3 ? i3 : o, A3 = _3 ? f4 : i3, I2 = _3 ? i3 : f4;
        t |= _3 ? Hn : Et2, t &= ~(_3 ? Et2 : Hn), t & Mi2 || (t &= ~(vn5 | ot4));
        var b5 = [n2, t, s, A3, m4, I2, w8, c3, l, v], x3 = e.apply(i3, b5);
        return _i(n2) && Hu(x3, b5), x3.placeholder = r, Nu(x3, n2, t);
      }
      function ci(n2) {
        var t = X2[n2];
        return function(e, r) {
          if (e = xn(e), r = r == null ? 0 : nn2(R3(r), 292), r && Ns2(e)) {
            var s = ($4(e) + "e").split("e"), f4 = t(s[0] + "e" + (+s[1] + r));
            return s = ($4(f4) + "e").split("e"), +(s[0] + "e" + (+s[1] - r));
          }
          return t(e);
        };
      }
      var Zc = Ht2 && 1 / Ee(new Ht2([, -0]))[1] == ct3 ? function(n2) {
        return new Ht2(n2);
      } : Li2;
      function Iu(n2) {
        return function(t) {
          var e = tn2(t);
          return e == yn ? Mr(t) : e == Sn ? oo(t) : to(t, n2(t));
        };
      }
      function Kn2(n2, t, e, r, s, f4, o, c3) {
        var l = t & ot4;
        if (!l && typeof n2 != "function")
          throw new wn2(M3);
        var v = r ? r.length : 0;
        if (v || (t &= ~(Hn | Et2), r = s = i3), o = o === i3 ? o : Q4(R3(o), 0), c3 = c3 === i3 ? c3 : R3(c3), v -= s ? s.length : 0, t & Et2) {
          var _3 = r, m4 = s;
          r = s = i3;
        }
        var w8 = l ? i3 : pi(n2), A3 = [n2, t, e, r, s, _3, m4, f4, o, c3];
        if (w8 && fh(A3, w8), n2 = A3[0], t = A3[1], e = A3[2], r = A3[3], s = A3[4], c3 = A3[9] = A3[9] === i3 ? l ? 0 : n2.length : Q4(A3[9] - v, 0), !c3 && t & (Dn2 | xt3) && (t &= ~(Dn2 | xt3)), !t || t == vn5)
          var I2 = zc(n2, t, e);
        else
          t == Dn2 || t == xt3 ? I2 = Kc(n2, t, c3) : (t == Hn || t == (vn5 | Hn)) && !s.length ? I2 = Yc(n2, t, e, r) : I2 = Ze4.apply(i3, A3);
        var b5 = w8 ? ru : Hu;
        return Nu(b5(I2, A3), n2, t);
      }
      function xu(n2, t, e, r) {
        return n2 === i3 || bn(n2, Dt4[e]) && !U3.call(r, e) ? t : n2;
      }
      function Eu(n2, t, e, r, s, f4) {
        return z6(n2) && z6(t) && (f4.set(t, n2), Ge3(n2, t, i3, Eu, f4), f4.delete(t)), n2;
      }
      function Jc(n2) {
        return le2(n2) ? i3 : n2;
      }
      function yu(n2, t, e, r, s, f4) {
        var o = e & It6, c3 = n2.length, l = t.length;
        if (c3 != l && !(o && l > c3))
          return false;
        var v = f4.get(n2), _3 = f4.get(t);
        if (v && _3)
          return v == t && _3 == n2;
        var m4 = -1, w8 = true, A3 = e & de6 ? new dt3() : i3;
        for (f4.set(n2, t), f4.set(t, n2); ++m4 < c3; ) {
          var I2 = n2[m4], b5 = t[m4];
          if (r)
            var x3 = o ? r(b5, I2, m4, t, n2, f4) : r(I2, b5, m4, n2, t, f4);
          if (x3 !== i3) {
            if (x3)
              continue;
            w8 = false;
            break;
          }
          if (A3) {
            if (!Hr(t, function(L3, H4) {
              if (!kt3(A3, H4) && (I2 === L3 || s(I2, L3, e, r, f4)))
                return A3.push(H4);
            })) {
              w8 = false;
              break;
            }
          } else if (!(I2 === b5 || s(I2, b5, e, r, f4))) {
            w8 = false;
            break;
          }
        }
        return f4.delete(n2), f4.delete(t), w8;
      }
      function Xc(n2, t, e, r, s, f4, o) {
        switch (e) {
          case St3:
            if (n2.byteLength != t.byteLength || n2.byteOffset != t.byteOffset)
              return false;
            n2 = n2.buffer, t = t.buffer;
          case Vt2:
            return !(n2.byteLength != t.byteLength || !f4(new Te2(n2), new Te2(t)));
          case Kt3:
          case Yt:
          case Zt:
            return bn(+n2, +t);
          case _e2:
            return n2.name == t.name && n2.message == t.message;
          case Jt:
          case Xt:
            return n2 == t + "";
          case yn:
            var c3 = Mr;
          case Sn:
            var l = r & It6;
            if (c3 || (c3 = Ee), n2.size != t.size && !l)
              return false;
            var v = o.get(n2);
            if (v)
              return v == t;
            r |= de6, o.set(n2, t);
            var _3 = yu(c3(n2), c3(t), r, s, f4, o);
            return o.delete(n2), _3;
          case we4:
            if (re3)
              return re3.call(n2) == re3.call(t);
        }
        return false;
      }
      function Qc(n2, t, e, r, s, f4) {
        var o = e & It6, c3 = hi(n2), l = c3.length, v = hi(t), _3 = v.length;
        if (l != _3 && !o)
          return false;
        for (var m4 = l; m4--; ) {
          var w8 = c3[m4];
          if (!(o ? w8 in t : U3.call(t, w8)))
            return false;
        }
        var A3 = f4.get(n2), I2 = f4.get(t);
        if (A3 && I2)
          return A3 == t && I2 == n2;
        var b5 = true;
        f4.set(n2, t), f4.set(t, n2);
        for (var x3 = o; ++m4 < l; ) {
          w8 = c3[m4];
          var L3 = n2[w8], H4 = t[w8];
          if (r)
            var dn = o ? r(H4, L3, w8, t, n2, f4) : r(L3, H4, w8, n2, t, f4);
          if (!(dn === i3 ? L3 === H4 || s(L3, H4, e, r, f4) : dn)) {
            b5 = false;
            break;
          }
          x3 || (x3 = w8 == "constructor");
        }
        if (b5 && !x3) {
          var sn2 = n2.constructor, gn = t.constructor;
          sn2 != gn && "constructor" in n2 && "constructor" in t && !(typeof sn2 == "function" && sn2 instanceof sn2 && typeof gn == "function" && gn instanceof gn) && (b5 = false);
        }
        return f4.delete(n2), f4.delete(t), b5;
      }
      function Yn2(n2) {
        return wi(Lu(n2, i3, qu), n2 + "");
      }
      function hi(n2) {
        return Ys2(n2, V3, gi);
      }
      function li(n2) {
        return Ys2(n2, fn, Su);
      }
      var pi = Ue5 ? function(n2) {
        return Ue5.get(n2);
      } : Li2;
      function Ve3(n2) {
        for (var t = n2.name + "", e = Nt2[t], r = U3.call(Nt2, t) ? e.length : 0; r--; ) {
          var s = e[r], f4 = s.func;
          if (f4 == null || f4 == n2)
            return s.name;
        }
        return t;
      }
      function Ft3(n2) {
        var t = U3.call(a2, "placeholder") ? a2 : n2;
        return t.placeholder;
      }
      function C8() {
        var n2 = a2.iteratee || bi;
        return n2 = n2 === bi ? Xs2 : n2, arguments.length ? n2(arguments[0], arguments[1]) : n2;
      }
      function ke2(n2, t) {
        var e = n2.__data__;
        return ih(t) ? e[typeof t == "string" ? "string" : "hash"] : e.map;
      }
      function di(n2) {
        for (var t = V3(n2), e = t.length; e--; ) {
          var r = t[e], s = n2[r];
          t[e] = [r, s, bu(s)];
        }
        return t;
      }
      function _t3(n2, t) {
        var e = uo(n2, t);
        return Js2(e) ? e : i3;
      }
      function Vc(n2) {
        var t = U3.call(n2, lt3), e = n2[lt3];
        try {
          n2[lt3] = i3;
          var r = true;
        } catch {
        }
        var s = Re2.call(n2);
        return r && (t ? n2[lt3] = e : delete n2[lt3]), s;
      }
      var gi = Br ? function(n2) {
        return n2 == null ? [] : (n2 = F4(n2), kn2(Br(n2), function(t) {
          return Ds2.call(n2, t);
        }));
      } : Di, Su = Br ? function(n2) {
        for (var t = []; n2; )
          jn2(t, gi(n2)), n2 = Le2(n2);
        return t;
      } : Di, tn2 = en2;
      (Gr && tn2(new Gr(new ArrayBuffer(1))) != St3 || ne4 && tn2(new ne4()) != yn || zr && tn2(zr.resolve()) != Gi2 || Ht2 && tn2(new Ht2()) != Sn || te3 && tn2(new te3()) != Qt) && (tn2 = function(n2) {
        var t = en2(n2), e = t == qn2 ? n2.constructor : i3, r = e ? mt3(e) : "";
        if (r)
          switch (r) {
            case Do:
              return St3;
            case Ho:
              return yn;
            case No:
              return Gi2;
            case $o:
              return Sn;
            case Uo:
              return Qt;
          }
        return t;
      });
      function kc(n2, t, e) {
        for (var r = -1, s = e.length; ++r < s; ) {
          var f4 = e[r], o = f4.size;
          switch (f4.type) {
            case "drop":
              n2 += o;
              break;
            case "dropRight":
              t -= o;
              break;
            case "take":
              t = nn2(t, n2 + o);
              break;
            case "takeRight":
              n2 = Q4(n2, t - o);
              break;
          }
        }
        return { start: n2, end: t };
      }
      function jc(n2) {
        var t = n2.match(rf);
        return t ? t[1].split(sf) : [];
      }
      function Ou(n2, t, e) {
        t = it4(t, n2);
        for (var r = -1, s = t.length, f4 = false; ++r < s; ) {
          var o = Wn2(t[r]);
          if (!(f4 = n2 != null && e(n2, o)))
            break;
          n2 = n2[o];
        }
        return f4 || ++r != s ? f4 : (s = n2 == null ? 0 : n2.length, !!s && sr2(s) && Zn(o, s) && (O5(n2) || wt3(n2)));
      }
      function nh(n2) {
        var t = n2.length, e = new n2.constructor(t);
        return t && typeof n2[0] == "string" && U3.call(n2, "index") && (e.index = n2.index, e.input = n2.input), e;
      }
      function Ru(n2) {
        return typeof n2.constructor == "function" && !ce7(n2) ? $t3(Le2(n2)) : {};
      }
      function th(n2, t, e) {
        var r = n2.constructor;
        switch (t) {
          case Vt2:
            return fi(n2);
          case Kt3:
          case Yt:
            return new r(+n2);
          case St3:
            return Wc(n2, e);
          case dr2:
          case gr2:
          case vr2:
          case _r2:
          case mr2:
          case wr2:
          case Pr:
          case Ar:
          case Cr2:
            return hu(n2, e);
          case yn:
            return new r();
          case Zt:
          case Xt:
            return new r(n2);
          case Jt:
            return Fc(n2);
          case Sn:
            return new r();
          case we4:
            return Mc(n2);
        }
      }
      function eh(n2, t) {
        var e = t.length;
        if (!e)
          return n2;
        var r = e - 1;
        return t[r] = (e > 1 ? "& " : "") + t[r], t = t.join(e > 2 ? ", " : " "), n2.replace(ef, `{
/* [wrapped with ` + t + `] */
`);
      }
      function rh(n2) {
        return O5(n2) || wt3(n2) || !!(Hs2 && n2 && n2[Hs2]);
      }
      function Zn(n2, t) {
        var e = typeof n2;
        return t = t != null ? t : Vn2, !!t && (e == "number" || e != "symbol" && df.test(n2)) && n2 > -1 && n2 % 1 == 0 && n2 < t;
      }
      function rn2(n2, t, e) {
        if (!z6(e))
          return false;
        var r = typeof t;
        return (r == "number" ? an2(e) && Zn(t, e.length) : r == "string" && t in e) ? bn(e[t], n2) : false;
      }
      function vi(n2, t) {
        if (O5(n2))
          return false;
        var e = typeof n2;
        return e == "number" || e == "symbol" || e == "boolean" || n2 == null || pn5(n2) ? true : ka.test(n2) || !Va.test(n2) || t != null && n2 in F4(t);
      }
      function ih(n2) {
        var t = typeof n2;
        return t == "string" || t == "number" || t == "symbol" || t == "boolean" ? n2 !== "__proto__" : n2 === null;
      }
      function _i(n2) {
        var t = Ve3(n2), e = a2[t];
        if (typeof e != "function" || !(t in D2.prototype))
          return false;
        if (n2 === e)
          return true;
        var r = pi(e);
        return !!r && n2 === r[0];
      }
      function sh(n2) {
        return !!bs2 && bs2 in n2;
      }
      var uh = Se2 ? Jn : Hi2;
      function ce7(n2) {
        var t = n2 && n2.constructor, e = typeof t == "function" && t.prototype || Dt4;
        return n2 === e;
      }
      function bu(n2) {
        return n2 === n2 && !z6(n2);
      }
      function Tu(n2, t) {
        return function(e) {
          return e == null ? false : e[n2] === t && (t !== i3 || n2 in F4(e));
        };
      }
      function ah(n2) {
        var t = rr2(n2, function(r) {
          return e.size === lr2 && e.clear(), r;
        }), e = t.cache;
        return t;
      }
      function fh(n2, t) {
        var e = n2[1], r = t[1], s = e | r, f4 = s < (vn5 | ot4 | Mn2), o = r == Mn2 && e == Dn2 || r == Mn2 && e == zt3 && n2[7].length <= t[8] || r == (Mn2 | zt3) && t[7].length <= t[8] && e == Dn2;
        if (!(f4 || o))
          return n2;
        r & vn5 && (n2[2] = t[2], s |= e & vn5 ? 0 : Mi2);
        var c3 = t[3];
        if (c3) {
          var l = n2[3];
          n2[3] = l ? pu(l, c3, t[4]) : c3, n2[4] = l ? nt3(n2[3], At3) : t[4];
        }
        return c3 = t[5], c3 && (l = n2[5], n2[5] = l ? du(l, c3, t[6]) : c3, n2[6] = l ? nt3(n2[5], At3) : t[6]), c3 = t[7], c3 && (n2[7] = c3), r & Mn2 && (n2[8] = n2[8] == null ? t[8] : nn2(n2[8], t[8])), n2[9] == null && (n2[9] = t[9]), n2[0] = t[0], n2[1] = s, n2;
      }
      function oh(n2) {
        var t = [];
        if (n2 != null)
          for (var e in F4(n2))
            t.push(e);
        return t;
      }
      function ch(n2) {
        return Re2.call(n2);
      }
      function Lu(n2, t, e) {
        return t = Q4(t === i3 ? n2.length - 1 : t, 0), function() {
          for (var r = arguments, s = -1, f4 = Q4(r.length - t, 0), o = d2(f4); ++s < f4; )
            o[s] = r[t + s];
          s = -1;
          for (var c3 = d2(t + 1); ++s < t; )
            c3[s] = r[s];
          return c3[t] = e(o), cn2(n2, this, c3);
        };
      }
      function Du(n2, t) {
        return t.length < 2 ? n2 : vt2(n2, Cn2(t, 0, -1));
      }
      function hh(n2, t) {
        for (var e = n2.length, r = nn2(t.length, e), s = un2(n2); r--; ) {
          var f4 = t[r];
          n2[r] = Zn(f4, e) ? s[f4] : i3;
        }
        return n2;
      }
      function mi(n2, t) {
        if (!(t === "constructor" && typeof n2[t] == "function") && t != "__proto__")
          return n2[t];
      }
      var Hu = $u(ru), he2 = yo || function(n2, t) {
        return k3.setTimeout(n2, t);
      }, wi = $u(Hc);
      function Nu(n2, t, e) {
        var r = t + "";
        return wi(n2, eh(r, lh(jc(r), e)));
      }
      function $u(n2) {
        var t = 0, e = 0;
        return function() {
          var r = bo(), s = Ta - (r - e);
          if (e = r, s > 0) {
            if (++t >= ba)
              return arguments[0];
          } else
            t = 0;
          return n2.apply(i3, arguments);
        };
      }
      function je4(n2, t) {
        var e = -1, r = n2.length, s = r - 1;
        for (t = t === i3 ? r : t; ++e < t; ) {
          var f4 = ti(e, s), o = n2[f4];
          n2[f4] = n2[e], n2[e] = o;
        }
        return n2.length = t, n2;
      }
      var Uu = ah(function(n2) {
        var t = [];
        return n2.charCodeAt(0) === 46 && t.push(""), n2.replace(ja, function(e, r, s, f4) {
          t.push(s ? f4.replace(ff, "$1") : r || e);
        }), t;
      });
      function Wn2(n2) {
        if (typeof n2 == "string" || pn5(n2))
          return n2;
        var t = n2 + "";
        return t == "0" && 1 / n2 == -ct3 ? "-0" : t;
      }
      function mt3(n2) {
        if (n2 != null) {
          try {
            return Oe3.call(n2);
          } catch {
          }
          try {
            return n2 + "";
          } catch {
          }
        }
        return "";
      }
      function lh(n2, t) {
        return mn5(Ua, function(e) {
          var r = "_." + e[0];
          t & e[1] && !Ie3(n2, r) && n2.push(r);
        }), n2.sort();
      }
      function Wu(n2) {
        if (n2 instanceof D2)
          return n2.clone();
        var t = new Pn(n2.__wrapped__, n2.__chain__);
        return t.__actions__ = un2(n2.__actions__), t.__index__ = n2.__index__, t.__values__ = n2.__values__, t;
      }
      function ph(n2, t, e) {
        (e ? rn2(n2, t, e) : t === i3) ? t = 1 : t = Q4(R3(t), 0);
        var r = n2 == null ? 0 : n2.length;
        if (!r || t < 1)
          return [];
        for (var s = 0, f4 = 0, o = d2(Ne2(r / t)); s < r; )
          o[f4++] = Cn2(n2, s, s += t);
        return o;
      }
      function dh(n2) {
        for (var t = -1, e = n2 == null ? 0 : n2.length, r = 0, s = []; ++t < e; ) {
          var f4 = n2[t];
          f4 && (s[r++] = f4);
        }
        return s;
      }
      function gh() {
        var n2 = arguments.length;
        if (!n2)
          return [];
        for (var t = d2(n2 - 1), e = arguments[0], r = n2; r--; )
          t[r - 1] = arguments[r];
        return jn2(O5(e) ? un2(e) : [e], j7(t, 1));
      }
      var vh = T(function(n2, t) {
        return Y4(n2) ? se3(n2, j7(t, 1, Y4, true)) : [];
      }), _h = T(function(n2, t) {
        var e = In(t);
        return Y4(e) && (e = i3), Y4(n2) ? se3(n2, j7(t, 1, Y4, true), C8(e, 2)) : [];
      }), mh = T(function(n2, t) {
        var e = In(t);
        return Y4(e) && (e = i3), Y4(n2) ? se3(n2, j7(t, 1, Y4, true), i3, e) : [];
      });
      function wh(n2, t, e) {
        var r = n2 == null ? 0 : n2.length;
        return r ? (t = e || t === i3 ? 1 : R3(t), Cn2(n2, t < 0 ? 0 : t, r)) : [];
      }
      function Ph(n2, t, e) {
        var r = n2 == null ? 0 : n2.length;
        return r ? (t = e || t === i3 ? 1 : R3(t), t = r - t, Cn2(n2, 0, t < 0 ? 0 : t)) : [];
      }
      function Ah(n2, t) {
        return n2 && n2.length ? Ke2(n2, C8(t, 3), true, true) : [];
      }
      function Ch(n2, t) {
        return n2 && n2.length ? Ke2(n2, C8(t, 3), true) : [];
      }
      function Ih(n2, t, e, r) {
        var s = n2 == null ? 0 : n2.length;
        return s ? (e && typeof e != "number" && rn2(n2, t, e) && (e = 0, r = s), gc(n2, t, e, r)) : [];
      }
      function Fu(n2, t, e) {
        var r = n2 == null ? 0 : n2.length;
        if (!r)
          return -1;
        var s = e == null ? 0 : R3(e);
        return s < 0 && (s = Q4(r + s, 0)), xe3(n2, C8(t, 3), s);
      }
      function Mu(n2, t, e) {
        var r = n2 == null ? 0 : n2.length;
        if (!r)
          return -1;
        var s = r - 1;
        return e !== i3 && (s = R3(e), s = e < 0 ? Q4(r + s, 0) : nn2(s, r - 1)), xe3(n2, C8(t, 3), s, true);
      }
      function qu(n2) {
        var t = n2 == null ? 0 : n2.length;
        return t ? j7(n2, 1) : [];
      }
      function xh(n2) {
        var t = n2 == null ? 0 : n2.length;
        return t ? j7(n2, ct3) : [];
      }
      function Eh(n2, t) {
        var e = n2 == null ? 0 : n2.length;
        return e ? (t = t === i3 ? 1 : R3(t), j7(n2, t)) : [];
      }
      function yh(n2) {
        for (var t = -1, e = n2 == null ? 0 : n2.length, r = {}; ++t < e; ) {
          var s = n2[t];
          r[s[0]] = s[1];
        }
        return r;
      }
      function Bu(n2) {
        return n2 && n2.length ? n2[0] : i3;
      }
      function Sh(n2, t, e) {
        var r = n2 == null ? 0 : n2.length;
        if (!r)
          return -1;
        var s = e == null ? 0 : R3(e);
        return s < 0 && (s = Q4(r + s, 0)), Rt3(n2, t, s);
      }
      function Oh(n2) {
        var t = n2 == null ? 0 : n2.length;
        return t ? Cn2(n2, 0, -1) : [];
      }
      var Rh = T(function(n2) {
        var t = G4(n2, ui);
        return t.length && t[0] === n2[0] ? Qr(t) : [];
      }), bh = T(function(n2) {
        var t = In(n2), e = G4(n2, ui);
        return t === In(e) ? t = i3 : e.pop(), e.length && e[0] === n2[0] ? Qr(e, C8(t, 2)) : [];
      }), Th = T(function(n2) {
        var t = In(n2), e = G4(n2, ui);
        return t = typeof t == "function" ? t : i3, t && e.pop(), e.length && e[0] === n2[0] ? Qr(e, i3, t) : [];
      });
      function Lh(n2, t) {
        return n2 == null ? "" : Oo.call(n2, t);
      }
      function In(n2) {
        var t = n2 == null ? 0 : n2.length;
        return t ? n2[t - 1] : i3;
      }
      function Dh(n2, t, e) {
        var r = n2 == null ? 0 : n2.length;
        if (!r)
          return -1;
        var s = r;
        return e !== i3 && (s = R3(e), s = s < 0 ? Q4(r + s, 0) : nn2(s, r - 1)), t === t ? ho(n2, t, s) : xe3(n2, Cs2, s, true);
      }
      function Hh(n2, t) {
        return n2 && n2.length ? js2(n2, R3(t)) : i3;
      }
      var Nh = T(Gu);
      function Gu(n2, t) {
        return n2 && n2.length && t && t.length ? ni(n2, t) : n2;
      }
      function $h(n2, t, e) {
        return n2 && n2.length && t && t.length ? ni(n2, t, C8(e, 2)) : n2;
      }
      function Uh(n2, t, e) {
        return n2 && n2.length && t && t.length ? ni(n2, t, i3, e) : n2;
      }
      var Wh = Yn2(function(n2, t) {
        var e = n2 == null ? 0 : n2.length, r = Yr(n2, t);
        return eu(n2, G4(t, function(s) {
          return Zn(s, e) ? +s : s;
        }).sort(lu)), r;
      });
      function Fh(n2, t) {
        var e = [];
        if (!(n2 && n2.length))
          return e;
        var r = -1, s = [], f4 = n2.length;
        for (t = C8(t, 3); ++r < f4; ) {
          var o = n2[r];
          t(o, r, n2) && (e.push(o), s.push(r));
        }
        return eu(n2, s), e;
      }
      function Pi2(n2) {
        return n2 == null ? n2 : Lo.call(n2);
      }
      function Mh(n2, t, e) {
        var r = n2 == null ? 0 : n2.length;
        return r ? (e && typeof e != "number" && rn2(n2, t, e) ? (t = 0, e = r) : (t = t == null ? 0 : R3(t), e = e === i3 ? r : R3(e)), Cn2(n2, t, e)) : [];
      }
      function qh(n2, t) {
        return ze3(n2, t);
      }
      function Bh(n2, t, e) {
        return ri(n2, t, C8(e, 2));
      }
      function Gh(n2, t) {
        var e = n2 == null ? 0 : n2.length;
        if (e) {
          var r = ze3(n2, t);
          if (r < e && bn(n2[r], t))
            return r;
        }
        return -1;
      }
      function zh(n2, t) {
        return ze3(n2, t, true);
      }
      function Kh(n2, t, e) {
        return ri(n2, t, C8(e, 2), true);
      }
      function Yh(n2, t) {
        var e = n2 == null ? 0 : n2.length;
        if (e) {
          var r = ze3(n2, t, true) - 1;
          if (bn(n2[r], t))
            return r;
        }
        return -1;
      }
      function Zh(n2) {
        return n2 && n2.length ? iu(n2) : [];
      }
      function Jh(n2, t) {
        return n2 && n2.length ? iu(n2, C8(t, 2)) : [];
      }
      function Xh(n2) {
        var t = n2 == null ? 0 : n2.length;
        return t ? Cn2(n2, 1, t) : [];
      }
      function Qh(n2, t, e) {
        return n2 && n2.length ? (t = e || t === i3 ? 1 : R3(t), Cn2(n2, 0, t < 0 ? 0 : t)) : [];
      }
      function Vh(n2, t, e) {
        var r = n2 == null ? 0 : n2.length;
        return r ? (t = e || t === i3 ? 1 : R3(t), t = r - t, Cn2(n2, t < 0 ? 0 : t, r)) : [];
      }
      function kh(n2, t) {
        return n2 && n2.length ? Ke2(n2, C8(t, 3), false, true) : [];
      }
      function jh(n2, t) {
        return n2 && n2.length ? Ke2(n2, C8(t, 3)) : [];
      }
      var nl = T(function(n2) {
        return rt4(j7(n2, 1, Y4, true));
      }), tl = T(function(n2) {
        var t = In(n2);
        return Y4(t) && (t = i3), rt4(j7(n2, 1, Y4, true), C8(t, 2));
      }), el = T(function(n2) {
        var t = In(n2);
        return t = typeof t == "function" ? t : i3, rt4(j7(n2, 1, Y4, true), i3, t);
      });
      function rl(n2) {
        return n2 && n2.length ? rt4(n2) : [];
      }
      function il(n2, t) {
        return n2 && n2.length ? rt4(n2, C8(t, 2)) : [];
      }
      function sl(n2, t) {
        return t = typeof t == "function" ? t : i3, n2 && n2.length ? rt4(n2, i3, t) : [];
      }
      function Ai(n2) {
        if (!(n2 && n2.length))
          return [];
        var t = 0;
        return n2 = kn2(n2, function(e) {
          if (Y4(e))
            return t = Q4(e.length, t), true;
        }), Wr(t, function(e) {
          return G4(n2, Nr(e));
        });
      }
      function zu(n2, t) {
        if (!(n2 && n2.length))
          return [];
        var e = Ai(n2);
        return t == null ? e : G4(e, function(r) {
          return cn2(t, i3, r);
        });
      }
      var ul = T(function(n2, t) {
        return Y4(n2) ? se3(n2, t) : [];
      }), al = T(function(n2) {
        return si(kn2(n2, Y4));
      }), fl = T(function(n2) {
        var t = In(n2);
        return Y4(t) && (t = i3), si(kn2(n2, Y4), C8(t, 2));
      }), ol = T(function(n2) {
        var t = In(n2);
        return t = typeof t == "function" ? t : i3, si(kn2(n2, Y4), i3, t);
      }), cl = T(Ai);
      function hl(n2, t) {
        return fu(n2 || [], t || [], ie6);
      }
      function ll(n2, t) {
        return fu(n2 || [], t || [], fe5);
      }
      var pl = T(function(n2) {
        var t = n2.length, e = t > 1 ? n2[t - 1] : i3;
        return e = typeof e == "function" ? (n2.pop(), e) : i3, zu(n2, e);
      });
      function Ku(n2) {
        var t = a2(n2);
        return t.__chain__ = true, t;
      }
      function dl(n2, t) {
        return t(n2), n2;
      }
      function nr2(n2, t) {
        return t(n2);
      }
      var gl = Yn2(function(n2) {
        var t = n2.length, e = t ? n2[0] : 0, r = this.__wrapped__, s = function(f4) {
          return Yr(f4, n2);
        };
        return t > 1 || this.__actions__.length || !(r instanceof D2) || !Zn(e) ? this.thru(s) : (r = r.slice(e, +e + (t ? 1 : 0)), r.__actions__.push({ func: nr2, args: [s], thisArg: i3 }), new Pn(r, this.__chain__).thru(function(f4) {
          return t && !f4.length && f4.push(i3), f4;
        }));
      });
      function vl() {
        return Ku(this);
      }
      function _l() {
        return new Pn(this.value(), this.__chain__);
      }
      function ml() {
        this.__values__ === i3 && (this.__values__ = sa(this.value()));
        var n2 = this.__index__ >= this.__values__.length, t = n2 ? i3 : this.__values__[this.__index__++];
        return { done: n2, value: t };
      }
      function wl() {
        return this;
      }
      function Pl(n2) {
        for (var t, e = this; e instanceof Fe3; ) {
          var r = Wu(e);
          r.__index__ = 0, r.__values__ = i3, t ? s.__wrapped__ = r : t = r;
          var s = r;
          e = e.__wrapped__;
        }
        return s.__wrapped__ = n2, t;
      }
      function Al() {
        var n2 = this.__wrapped__;
        if (n2 instanceof D2) {
          var t = n2;
          return this.__actions__.length && (t = new D2(this)), t = t.reverse(), t.__actions__.push({ func: nr2, args: [Pi2], thisArg: i3 }), new Pn(t, this.__chain__);
        }
        return this.thru(Pi2);
      }
      function Cl() {
        return au(this.__wrapped__, this.__actions__);
      }
      var Il = Ye3(function(n2, t, e) {
        U3.call(n2, e) ? ++n2[e] : zn(n2, e, 1);
      });
      function xl(n2, t, e) {
        var r = O5(n2) ? Ps2 : dc;
        return e && rn2(n2, t, e) && (t = i3), r(n2, C8(t, 3));
      }
      function El(n2, t) {
        var e = O5(n2) ? kn2 : zs2;
        return e(n2, C8(t, 3));
      }
      var yl = mu(Fu), Sl = mu(Mu);
      function Ol(n2, t) {
        return j7(tr2(n2, t), 1);
      }
      function Rl(n2, t) {
        return j7(tr2(n2, t), ct3);
      }
      function bl(n2, t, e) {
        return e = e === i3 ? 1 : R3(e), j7(tr2(n2, t), e);
      }
      function Yu(n2, t) {
        var e = O5(n2) ? mn5 : et3;
        return e(n2, C8(t, 3));
      }
      function Zu(n2, t) {
        var e = O5(n2) ? Jf : Gs2;
        return e(n2, C8(t, 3));
      }
      var Tl = Ye3(function(n2, t, e) {
        U3.call(n2, e) ? n2[e].push(t) : zn(n2, e, [t]);
      });
      function Ll(n2, t, e, r) {
        n2 = an2(n2) ? n2 : qt2(n2), e = e && !r ? R3(e) : 0;
        var s = n2.length;
        return e < 0 && (e = Q4(s + e, 0)), ur2(n2) ? e <= s && n2.indexOf(t, e) > -1 : !!s && Rt3(n2, t, e) > -1;
      }
      var Dl = T(function(n2, t, e) {
        var r = -1, s = typeof t == "function", f4 = an2(n2) ? d2(n2.length) : [];
        return et3(n2, function(o) {
          f4[++r] = s ? cn2(t, o, e) : ue7(o, t, e);
        }), f4;
      }), Hl = Ye3(function(n2, t, e) {
        zn(n2, e, t);
      });
      function tr2(n2, t) {
        var e = O5(n2) ? G4 : Qs2;
        return e(n2, C8(t, 3));
      }
      function Nl(n2, t, e, r) {
        return n2 == null ? [] : (O5(t) || (t = t == null ? [] : [t]), e = r ? i3 : e, O5(e) || (e = e == null ? [] : [e]), nu(n2, t, e));
      }
      var $l = Ye3(function(n2, t, e) {
        n2[e ? 0 : 1].push(t);
      }, function() {
        return [[], []];
      });
      function Ul(n2, t, e) {
        var r = O5(n2) ? Dr2 : xs2, s = arguments.length < 3;
        return r(n2, C8(t, 4), e, s, et3);
      }
      function Wl(n2, t, e) {
        var r = O5(n2) ? Xf : xs2, s = arguments.length < 3;
        return r(n2, C8(t, 4), e, s, Gs2);
      }
      function Fl(n2, t) {
        var e = O5(n2) ? kn2 : zs2;
        return e(n2, ir2(C8(t, 3)));
      }
      function Ml(n2) {
        var t = O5(n2) ? Fs2 : Lc;
        return t(n2);
      }
      function ql(n2, t, e) {
        (e ? rn2(n2, t, e) : t === i3) ? t = 1 : t = R3(t);
        var r = O5(n2) ? oc : Dc;
        return r(n2, t);
      }
      function Bl(n2) {
        var t = O5(n2) ? cc : Nc;
        return t(n2);
      }
      function Gl(n2) {
        if (n2 == null)
          return 0;
        if (an2(n2))
          return ur2(n2) ? Tt4(n2) : n2.length;
        var t = tn2(n2);
        return t == yn || t == Sn ? n2.size : kr(n2).length;
      }
      function zl(n2, t, e) {
        var r = O5(n2) ? Hr : $c;
        return e && rn2(n2, t, e) && (t = i3), r(n2, C8(t, 3));
      }
      var Kl = T(function(n2, t) {
        if (n2 == null)
          return [];
        var e = t.length;
        return e > 1 && rn2(n2, t[0], t[1]) ? t = [] : e > 2 && rn2(t[0], t[1], t[2]) && (t = [t[0]]), nu(n2, j7(t, 1), []);
      }), er2 = Eo || function() {
        return k3.Date.now();
      };
      function Yl(n2, t) {
        if (typeof t != "function")
          throw new wn2(M3);
        return n2 = R3(n2), function() {
          if (--n2 < 1)
            return t.apply(this, arguments);
        };
      }
      function Ju(n2, t, e) {
        return t = e ? i3 : t, t = n2 && t == null ? n2.length : t, Kn2(n2, Mn2, i3, i3, i3, i3, t);
      }
      function Xu(n2, t) {
        var e;
        if (typeof t != "function")
          throw new wn2(M3);
        return n2 = R3(n2), function() {
          return --n2 > 0 && (e = t.apply(this, arguments)), n2 <= 1 && (t = i3), e;
        };
      }
      var Ci = T(function(n2, t, e) {
        var r = vn5;
        if (e.length) {
          var s = nt3(e, Ft3(Ci));
          r |= Hn;
        }
        return Kn2(n2, r, t, e, s);
      }), Qu = T(function(n2, t, e) {
        var r = vn5 | ot4;
        if (e.length) {
          var s = nt3(e, Ft3(Qu));
          r |= Hn;
        }
        return Kn2(t, r, n2, e, s);
      });
      function Vu(n2, t, e) {
        t = e ? i3 : t;
        var r = Kn2(n2, Dn2, i3, i3, i3, i3, i3, t);
        return r.placeholder = Vu.placeholder, r;
      }
      function ku(n2, t, e) {
        t = e ? i3 : t;
        var r = Kn2(n2, xt3, i3, i3, i3, i3, i3, t);
        return r.placeholder = ku.placeholder, r;
      }
      function ju(n2, t, e) {
        var r, s, f4, o, c3, l, v = 0, _3 = false, m4 = false, w8 = true;
        if (typeof n2 != "function")
          throw new wn2(M3);
        t = xn(t) || 0, z6(e) && (_3 = !!e.leading, m4 = "maxWait" in e, f4 = m4 ? Q4(xn(e.maxWait) || 0, t) : f4, w8 = "trailing" in e ? !!e.trailing : w8);
        function A3(Z3) {
          var Tn = r, Qn = s;
          return r = s = i3, v = Z3, o = n2.apply(Qn, Tn), o;
        }
        function I2(Z3) {
          return v = Z3, c3 = he2(L3, t), _3 ? A3(Z3) : o;
        }
        function b5(Z3) {
          var Tn = Z3 - l, Qn = Z3 - v, ma = t - Tn;
          return m4 ? nn2(ma, f4 - Qn) : ma;
        }
        function x3(Z3) {
          var Tn = Z3 - l, Qn = Z3 - v;
          return l === i3 || Tn >= t || Tn < 0 || m4 && Qn >= f4;
        }
        function L3() {
          var Z3 = er2();
          if (x3(Z3))
            return H4(Z3);
          c3 = he2(L3, b5(Z3));
        }
        function H4(Z3) {
          return c3 = i3, w8 && r ? A3(Z3) : (r = s = i3, o);
        }
        function dn() {
          c3 !== i3 && ou(c3), v = 0, r = l = s = c3 = i3;
        }
        function sn2() {
          return c3 === i3 ? o : H4(er2());
        }
        function gn() {
          var Z3 = er2(), Tn = x3(Z3);
          if (r = arguments, s = this, l = Z3, Tn) {
            if (c3 === i3)
              return I2(l);
            if (m4)
              return ou(c3), c3 = he2(L3, t), A3(l);
          }
          return c3 === i3 && (c3 = he2(L3, t)), o;
        }
        return gn.cancel = dn, gn.flush = sn2, gn;
      }
      var Zl = T(function(n2, t) {
        return Bs2(n2, 1, t);
      }), Jl = T(function(n2, t, e) {
        return Bs2(n2, xn(t) || 0, e);
      });
      function Xl(n2) {
        return Kn2(n2, pr2);
      }
      function rr2(n2, t) {
        if (typeof n2 != "function" || t != null && typeof t != "function")
          throw new wn2(M3);
        var e = function() {
          var r = arguments, s = t ? t.apply(this, r) : r[0], f4 = e.cache;
          if (f4.has(s))
            return f4.get(s);
          var o = n2.apply(this, r);
          return e.cache = f4.set(s, o) || f4, o;
        };
        return e.cache = new (rr2.Cache || Gn)(), e;
      }
      rr2.Cache = Gn;
      function ir2(n2) {
        if (typeof n2 != "function")
          throw new wn2(M3);
        return function() {
          var t = arguments;
          switch (t.length) {
            case 0:
              return !n2.call(this);
            case 1:
              return !n2.call(this, t[0]);
            case 2:
              return !n2.call(this, t[0], t[1]);
            case 3:
              return !n2.call(this, t[0], t[1], t[2]);
          }
          return !n2.apply(this, t);
        };
      }
      function Ql(n2) {
        return Xu(2, n2);
      }
      var Vl = Uc(function(n2, t) {
        t = t.length == 1 && O5(t[0]) ? G4(t[0], hn5(C8())) : G4(j7(t, 1), hn5(C8()));
        var e = t.length;
        return T(function(r) {
          for (var s = -1, f4 = nn2(r.length, e); ++s < f4; )
            r[s] = t[s].call(this, r[s]);
          return cn2(n2, this, r);
        });
      }), Ii = T(function(n2, t) {
        var e = nt3(t, Ft3(Ii));
        return Kn2(n2, Hn, i3, t, e);
      }), na = T(function(n2, t) {
        var e = nt3(t, Ft3(na));
        return Kn2(n2, Et2, i3, t, e);
      }), kl = Yn2(function(n2, t) {
        return Kn2(n2, zt3, i3, i3, i3, t);
      });
      function jl(n2, t) {
        if (typeof n2 != "function")
          throw new wn2(M3);
        return t = t === i3 ? t : R3(t), T(n2, t);
      }
      function np(n2, t) {
        if (typeof n2 != "function")
          throw new wn2(M3);
        return t = t == null ? 0 : Q4(R3(t), 0), T(function(e) {
          var r = e[t], s = st4(e, 0, t);
          return r && jn2(s, r), cn2(n2, this, s);
        });
      }
      function tp(n2, t, e) {
        var r = true, s = true;
        if (typeof n2 != "function")
          throw new wn2(M3);
        return z6(e) && (r = "leading" in e ? !!e.leading : r, s = "trailing" in e ? !!e.trailing : s), ju(n2, t, { leading: r, maxWait: t, trailing: s });
      }
      function ep(n2) {
        return Ju(n2, 1);
      }
      function rp(n2, t) {
        return Ii(ai(t), n2);
      }
      function ip() {
        if (!arguments.length)
          return [];
        var n2 = arguments[0];
        return O5(n2) ? n2 : [n2];
      }
      function sp(n2) {
        return An2(n2, Ct3);
      }
      function up(n2, t) {
        return t = typeof t == "function" ? t : i3, An2(n2, Ct3, t);
      }
      function ap(n2) {
        return An2(n2, Ln | Ct3);
      }
      function fp(n2, t) {
        return t = typeof t == "function" ? t : i3, An2(n2, Ln | Ct3, t);
      }
      function op(n2, t) {
        return t == null || qs2(n2, t, V3(t));
      }
      function bn(n2, t) {
        return n2 === t || n2 !== n2 && t !== t;
      }
      var cp = Qe3(Xr), hp = Qe3(function(n2, t) {
        return n2 >= t;
      }), wt3 = Zs2(function() {
        return arguments;
      }()) ? Zs2 : function(n2) {
        return K4(n2) && U3.call(n2, "callee") && !Ds2.call(n2, "callee");
      }, O5 = d2.isArray, lp = ds2 ? hn5(ds2) : Pc;
      function an2(n2) {
        return n2 != null && sr2(n2.length) && !Jn(n2);
      }
      function Y4(n2) {
        return K4(n2) && an2(n2);
      }
      function pp(n2) {
        return n2 === true || n2 === false || K4(n2) && en2(n2) == Kt3;
      }
      var ut3 = So || Hi2, dp = gs2 ? hn5(gs2) : Ac;
      function gp(n2) {
        return K4(n2) && n2.nodeType === 1 && !le2(n2);
      }
      function vp(n2) {
        if (n2 == null)
          return true;
        if (an2(n2) && (O5(n2) || typeof n2 == "string" || typeof n2.splice == "function" || ut3(n2) || Mt3(n2) || wt3(n2)))
          return !n2.length;
        var t = tn2(n2);
        if (t == yn || t == Sn)
          return !n2.size;
        if (ce7(n2))
          return !kr(n2).length;
        for (var e in n2)
          if (U3.call(n2, e))
            return false;
        return true;
      }
      function _p(n2, t) {
        return ae7(n2, t);
      }
      function mp(n2, t, e) {
        e = typeof e == "function" ? e : i3;
        var r = e ? e(n2, t) : i3;
        return r === i3 ? ae7(n2, t, i3, e) : !!r;
      }
      function xi(n2) {
        if (!K4(n2))
          return false;
        var t = en2(n2);
        return t == _e2 || t == Fa || typeof n2.message == "string" && typeof n2.name == "string" && !le2(n2);
      }
      function wp(n2) {
        return typeof n2 == "number" && Ns2(n2);
      }
      function Jn(n2) {
        if (!z6(n2))
          return false;
        var t = en2(n2);
        return t == me2 || t == Bi2 || t == Wa || t == qa;
      }
      function ta(n2) {
        return typeof n2 == "number" && n2 == R3(n2);
      }
      function sr2(n2) {
        return typeof n2 == "number" && n2 > -1 && n2 % 1 == 0 && n2 <= Vn2;
      }
      function z6(n2) {
        var t = typeof n2;
        return n2 != null && (t == "object" || t == "function");
      }
      function K4(n2) {
        return n2 != null && typeof n2 == "object";
      }
      var ea = vs2 ? hn5(vs2) : Ic;
      function Pp(n2, t) {
        return n2 === t || Vr(n2, t, di(t));
      }
      function Ap(n2, t, e) {
        return e = typeof e == "function" ? e : i3, Vr(n2, t, di(t), e);
      }
      function Cp(n2) {
        return ra(n2) && n2 != +n2;
      }
      function Ip(n2) {
        if (uh(n2))
          throw new S3(W4);
        return Js2(n2);
      }
      function xp(n2) {
        return n2 === null;
      }
      function Ep(n2) {
        return n2 == null;
      }
      function ra(n2) {
        return typeof n2 == "number" || K4(n2) && en2(n2) == Zt;
      }
      function le2(n2) {
        if (!K4(n2) || en2(n2) != qn2)
          return false;
        var t = Le2(n2);
        if (t === null)
          return true;
        var e = U3.call(t, "constructor") && t.constructor;
        return typeof e == "function" && e instanceof e && Oe3.call(e) == Ao;
      }
      var Ei = _s2 ? hn5(_s2) : xc;
      function yp(n2) {
        return ta(n2) && n2 >= -Vn2 && n2 <= Vn2;
      }
      var ia = ms2 ? hn5(ms2) : Ec;
      function ur2(n2) {
        return typeof n2 == "string" || !O5(n2) && K4(n2) && en2(n2) == Xt;
      }
      function pn5(n2) {
        return typeof n2 == "symbol" || K4(n2) && en2(n2) == we4;
      }
      var Mt3 = ws2 ? hn5(ws2) : yc;
      function Sp(n2) {
        return n2 === i3;
      }
      function Op(n2) {
        return K4(n2) && tn2(n2) == Qt;
      }
      function Rp(n2) {
        return K4(n2) && en2(n2) == Ga;
      }
      var bp = Qe3(jr), Tp = Qe3(function(n2, t) {
        return n2 <= t;
      });
      function sa(n2) {
        if (!n2)
          return [];
        if (an2(n2))
          return ur2(n2) ? On2(n2) : un2(n2);
        if (jt3 && n2[jt3])
          return fo(n2[jt3]());
        var t = tn2(n2), e = t == yn ? Mr : t == Sn ? Ee : qt2;
        return e(n2);
      }
      function Xn3(n2) {
        if (!n2)
          return n2 === 0 ? n2 : 0;
        if (n2 = xn(n2), n2 === ct3 || n2 === -ct3) {
          var t = n2 < 0 ? -1 : 1;
          return t * Ha;
        }
        return n2 === n2 ? n2 : 0;
      }
      function R3(n2) {
        var t = Xn3(n2), e = t % 1;
        return t === t ? e ? t - e : t : 0;
      }
      function ua(n2) {
        return n2 ? gt2(R3(n2), 0, Nn) : 0;
      }
      function xn(n2) {
        if (typeof n2 == "number")
          return n2;
        if (pn5(n2))
          return ge3;
        if (z6(n2)) {
          var t = typeof n2.valueOf == "function" ? n2.valueOf() : n2;
          n2 = z6(t) ? t + "" : t;
        }
        if (typeof n2 != "string")
          return n2 === 0 ? n2 : +n2;
        n2 = Es2(n2);
        var e = hf.test(n2);
        return e || pf.test(n2) ? Kf(n2.slice(2), e ? 2 : 8) : cf.test(n2) ? ge3 : +n2;
      }
      function aa(n2) {
        return Un2(n2, fn(n2));
      }
      function Lp(n2) {
        return n2 ? gt2(R3(n2), -Vn2, Vn2) : n2 === 0 ? n2 : 0;
      }
      function $4(n2) {
        return n2 == null ? "" : ln(n2);
      }
      var Dp = Ut3(function(n2, t) {
        if (ce7(t) || an2(t)) {
          Un2(t, V3(t), n2);
          return;
        }
        for (var e in t)
          U3.call(t, e) && ie6(n2, e, t[e]);
      }), fa = Ut3(function(n2, t) {
        Un2(t, fn(t), n2);
      }), ar = Ut3(function(n2, t, e, r) {
        Un2(t, fn(t), n2, r);
      }), Hp = Ut3(function(n2, t, e, r) {
        Un2(t, V3(t), n2, r);
      }), Np = Yn2(Yr);
      function $p(n2, t) {
        var e = $t3(n2);
        return t == null ? e : Ms2(e, t);
      }
      var Up = T(function(n2, t) {
        n2 = F4(n2);
        var e = -1, r = t.length, s = r > 2 ? t[2] : i3;
        for (s && rn2(t[0], t[1], s) && (r = 1); ++e < r; )
          for (var f4 = t[e], o = fn(f4), c3 = -1, l = o.length; ++c3 < l; ) {
            var v = o[c3], _3 = n2[v];
            (_3 === i3 || bn(_3, Dt4[v]) && !U3.call(n2, v)) && (n2[v] = f4[v]);
          }
        return n2;
      }), Wp = T(function(n2) {
        return n2.push(i3, Eu), cn2(oa, i3, n2);
      });
      function Fp(n2, t) {
        return As2(n2, C8(t, 3), $n3);
      }
      function Mp(n2, t) {
        return As2(n2, C8(t, 3), Jr);
      }
      function qp(n2, t) {
        return n2 == null ? n2 : Zr(n2, C8(t, 3), fn);
      }
      function Bp(n2, t) {
        return n2 == null ? n2 : Ks2(n2, C8(t, 3), fn);
      }
      function Gp(n2, t) {
        return n2 && $n3(n2, C8(t, 3));
      }
      function zp(n2, t) {
        return n2 && Jr(n2, C8(t, 3));
      }
      function Kp(n2) {
        return n2 == null ? [] : Be2(n2, V3(n2));
      }
      function Yp(n2) {
        return n2 == null ? [] : Be2(n2, fn(n2));
      }
      function yi(n2, t, e) {
        var r = n2 == null ? i3 : vt2(n2, t);
        return r === i3 ? e : r;
      }
      function Zp(n2, t) {
        return n2 != null && Ou(n2, t, vc);
      }
      function Si2(n2, t) {
        return n2 != null && Ou(n2, t, _c);
      }
      var Jp = Pu(function(n2, t, e) {
        t != null && typeof t.toString != "function" && (t = Re2.call(t)), n2[t] = e;
      }, Ri(on2)), Xp = Pu(function(n2, t, e) {
        t != null && typeof t.toString != "function" && (t = Re2.call(t)), U3.call(n2, t) ? n2[t].push(e) : n2[t] = [e];
      }, C8), Qp = T(ue7);
      function V3(n2) {
        return an2(n2) ? Ws2(n2) : kr(n2);
      }
      function fn(n2) {
        return an2(n2) ? Ws2(n2, true) : Sc(n2);
      }
      function Vp(n2, t) {
        var e = {};
        return t = C8(t, 3), $n3(n2, function(r, s, f4) {
          zn(e, t(r, s, f4), r);
        }), e;
      }
      function kp(n2, t) {
        var e = {};
        return t = C8(t, 3), $n3(n2, function(r, s, f4) {
          zn(e, s, t(r, s, f4));
        }), e;
      }
      var jp = Ut3(function(n2, t, e) {
        Ge3(n2, t, e);
      }), oa = Ut3(function(n2, t, e, r) {
        Ge3(n2, t, e, r);
      }), nd = Yn2(function(n2, t) {
        var e = {};
        if (n2 == null)
          return e;
        var r = false;
        t = G4(t, function(f4) {
          return f4 = it4(f4, n2), r || (r = f4.length > 1), f4;
        }), Un2(n2, li(n2), e), r && (e = An2(e, Ln | Fn2 | Ct3, Jc));
        for (var s = t.length; s--; )
          ii(e, t[s]);
        return e;
      });
      function td(n2, t) {
        return ca(n2, ir2(C8(t)));
      }
      var ed = Yn2(function(n2, t) {
        return n2 == null ? {} : Rc(n2, t);
      });
      function ca(n2, t) {
        if (n2 == null)
          return {};
        var e = G4(li(n2), function(r) {
          return [r];
        });
        return t = C8(t), tu(n2, e, function(r, s) {
          return t(r, s[0]);
        });
      }
      function rd(n2, t, e) {
        t = it4(t, n2);
        var r = -1, s = t.length;
        for (s || (s = 1, n2 = i3); ++r < s; ) {
          var f4 = n2 == null ? i3 : n2[Wn2(t[r])];
          f4 === i3 && (r = s, f4 = e), n2 = Jn(f4) ? f4.call(n2) : f4;
        }
        return n2;
      }
      function id(n2, t, e) {
        return n2 == null ? n2 : fe5(n2, t, e);
      }
      function sd(n2, t, e, r) {
        return r = typeof r == "function" ? r : i3, n2 == null ? n2 : fe5(n2, t, e, r);
      }
      var ha = Iu(V3), la = Iu(fn);
      function ud(n2, t, e) {
        var r = O5(n2), s = r || ut3(n2) || Mt3(n2);
        if (t = C8(t, 4), e == null) {
          var f4 = n2 && n2.constructor;
          s ? e = r ? new f4() : [] : z6(n2) ? e = Jn(f4) ? $t3(Le2(n2)) : {} : e = {};
        }
        return (s ? mn5 : $n3)(n2, function(o, c3, l) {
          return t(e, o, c3, l);
        }), e;
      }
      function ad(n2, t) {
        return n2 == null ? true : ii(n2, t);
      }
      function fd(n2, t, e) {
        return n2 == null ? n2 : uu(n2, t, ai(e));
      }
      function od(n2, t, e, r) {
        return r = typeof r == "function" ? r : i3, n2 == null ? n2 : uu(n2, t, ai(e), r);
      }
      function qt2(n2) {
        return n2 == null ? [] : Fr(n2, V3(n2));
      }
      function cd(n2) {
        return n2 == null ? [] : Fr(n2, fn(n2));
      }
      function hd(n2, t, e) {
        return e === i3 && (e = t, t = i3), e !== i3 && (e = xn(e), e = e === e ? e : 0), t !== i3 && (t = xn(t), t = t === t ? t : 0), gt2(xn(n2), t, e);
      }
      function ld(n2, t, e) {
        return t = Xn3(t), e === i3 ? (e = t, t = 0) : e = Xn3(e), n2 = xn(n2), mc(n2, t, e);
      }
      function pd(n2, t, e) {
        if (e && typeof e != "boolean" && rn2(n2, t, e) && (t = e = i3), e === i3 && (typeof t == "boolean" ? (e = t, t = i3) : typeof n2 == "boolean" && (e = n2, n2 = i3)), n2 === i3 && t === i3 ? (n2 = 0, t = 1) : (n2 = Xn3(n2), t === i3 ? (t = n2, n2 = 0) : t = Xn3(t)), n2 > t) {
          var r = n2;
          n2 = t, t = r;
        }
        if (e || n2 % 1 || t % 1) {
          var s = $s2();
          return nn2(n2 + s * (t - n2 + zf("1e-" + ((s + "").length - 1))), t);
        }
        return ti(n2, t);
      }
      var dd = Wt(function(n2, t, e) {
        return t = t.toLowerCase(), n2 + (e ? pa(t) : t);
      });
      function pa(n2) {
        return Oi($4(n2).toLowerCase());
      }
      function da(n2) {
        return n2 = $4(n2), n2 && n2.replace(gf, ro).replace(Hf, "");
      }
      function gd(n2, t, e) {
        n2 = $4(n2), t = ln(t);
        var r = n2.length;
        e = e === i3 ? r : gt2(R3(e), 0, r);
        var s = e;
        return e -= t.length, e >= 0 && n2.slice(e, s) == t;
      }
      function vd(n2) {
        return n2 = $4(n2), n2 && Ja.test(n2) ? n2.replace(Ki2, io) : n2;
      }
      function _d(n2) {
        return n2 = $4(n2), n2 && nf.test(n2) ? n2.replace(Ir2, "\\$&") : n2;
      }
      var md = Wt(function(n2, t, e) {
        return n2 + (e ? "-" : "") + t.toLowerCase();
      }), wd = Wt(function(n2, t, e) {
        return n2 + (e ? " " : "") + t.toLowerCase();
      }), Pd = _u("toLowerCase");
      function Ad(n2, t, e) {
        n2 = $4(n2), t = R3(t);
        var r = t ? Tt4(n2) : 0;
        if (!t || r >= t)
          return n2;
        var s = (t - r) / 2;
        return Xe3($e5(s), e) + n2 + Xe3(Ne2(s), e);
      }
      function Cd(n2, t, e) {
        n2 = $4(n2), t = R3(t);
        var r = t ? Tt4(n2) : 0;
        return t && r < t ? n2 + Xe3(t - r, e) : n2;
      }
      function Id(n2, t, e) {
        n2 = $4(n2), t = R3(t);
        var r = t ? Tt4(n2) : 0;
        return t && r < t ? Xe3(t - r, e) + n2 : n2;
      }
      function xd(n2, t, e) {
        return e || t == null ? t = 0 : t && (t = +t), To($4(n2).replace(xr, ""), t || 0);
      }
      function Ed(n2, t, e) {
        return (e ? rn2(n2, t, e) : t === i3) ? t = 1 : t = R3(t), ei($4(n2), t);
      }
      function yd() {
        var n2 = arguments, t = $4(n2[0]);
        return n2.length < 3 ? t : t.replace(n2[1], n2[2]);
      }
      var Sd = Wt(function(n2, t, e) {
        return n2 + (e ? "_" : "") + t.toLowerCase();
      });
      function Od(n2, t, e) {
        return e && typeof e != "number" && rn2(n2, t, e) && (t = e = i3), e = e === i3 ? Nn : e >>> 0, e ? (n2 = $4(n2), n2 && (typeof t == "string" || t != null && !Ei(t)) && (t = ln(t), !t && bt2(n2)) ? st4(On2(n2), 0, e) : n2.split(t, e)) : [];
      }
      var Rd = Wt(function(n2, t, e) {
        return n2 + (e ? " " : "") + Oi(t);
      });
      function bd(n2, t, e) {
        return n2 = $4(n2), e = e == null ? 0 : gt2(R3(e), 0, n2.length), t = ln(t), n2.slice(e, e + t.length) == t;
      }
      function Td(n2, t, e) {
        var r = a2.templateSettings;
        e && rn2(n2, t, e) && (t = i3), n2 = $4(n2), t = ar({}, t, r, xu);
        var s = ar({}, t.imports, r.imports, xu), f4 = V3(s), o = Fr(s, f4), c3, l, v = 0, _3 = t.interpolate || Pe3, m4 = "__p += '", w8 = qr((t.escape || Pe3).source + "|" + _3.source + "|" + (_3 === Yi2 ? of : Pe3).source + "|" + (t.evaluate || Pe3).source + "|$", "g"), A3 = "//# sourceURL=" + (U3.call(t, "sourceURL") ? (t.sourceURL + "").replace(/\s/g, " ") : "lodash.templateSources[" + ++Ff + "]") + `
`;
        n2.replace(w8, function(x3, L3, H4, dn, sn2, gn) {
          return H4 || (H4 = dn), m4 += n2.slice(v, gn).replace(vf, so), L3 && (c3 = true, m4 += `' +
__e(` + L3 + `) +
'`), sn2 && (l = true, m4 += `';
` + sn2 + `;
__p += '`), H4 && (m4 += `' +
((__t = (` + H4 + `)) == null ? '' : __t) +
'`), v = gn + x3.length, x3;
        }), m4 += `';
`;
        var I2 = U3.call(t, "variable") && t.variable;
        if (!I2)
          m4 = `with (obj) {
` + m4 + `
}
`;
        else if (af.test(I2))
          throw new S3(ft3);
        m4 = (l ? m4.replace(za, "") : m4).replace(Ka, "$1").replace(Ya, "$1;"), m4 = "function(" + (I2 || "obj") + `) {
` + (I2 ? "" : `obj || (obj = {});
`) + "var __t, __p = ''" + (c3 ? ", __e = _.escape" : "") + (l ? `, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
` : `;
`) + m4 + `return __p
}`;
        var b5 = va(function() {
          return N13(f4, A3 + "return " + m4).apply(i3, o);
        });
        if (b5.source = m4, xi(b5))
          throw b5;
        return b5;
      }
      function Ld(n2) {
        return $4(n2).toLowerCase();
      }
      function Dd(n2) {
        return $4(n2).toUpperCase();
      }
      function Hd(n2, t, e) {
        if (n2 = $4(n2), n2 && (e || t === i3))
          return Es2(n2);
        if (!n2 || !(t = ln(t)))
          return n2;
        var r = On2(n2), s = On2(t), f4 = ys2(r, s), o = Ss2(r, s) + 1;
        return st4(r, f4, o).join("");
      }
      function Nd(n2, t, e) {
        if (n2 = $4(n2), n2 && (e || t === i3))
          return n2.slice(0, Rs2(n2) + 1);
        if (!n2 || !(t = ln(t)))
          return n2;
        var r = On2(n2), s = Ss2(r, On2(t)) + 1;
        return st4(r, 0, s).join("");
      }
      function $d(n2, t, e) {
        if (n2 = $4(n2), n2 && (e || t === i3))
          return n2.replace(xr, "");
        if (!n2 || !(t = ln(t)))
          return n2;
        var r = On2(n2), s = ys2(r, On2(t));
        return st4(r, s).join("");
      }
      function Ud(n2, t) {
        var e = Oa, r = Ra;
        if (z6(t)) {
          var s = "separator" in t ? t.separator : s;
          e = "length" in t ? R3(t.length) : e, r = "omission" in t ? ln(t.omission) : r;
        }
        n2 = $4(n2);
        var f4 = n2.length;
        if (bt2(n2)) {
          var o = On2(n2);
          f4 = o.length;
        }
        if (e >= f4)
          return n2;
        var c3 = e - Tt4(r);
        if (c3 < 1)
          return r;
        var l = o ? st4(o, 0, c3).join("") : n2.slice(0, c3);
        if (s === i3)
          return l + r;
        if (o && (c3 += l.length - c3), Ei(s)) {
          if (n2.slice(c3).search(s)) {
            var v, _3 = l;
            for (s.global || (s = qr(s.source, $4(Zi2.exec(s)) + "g")), s.lastIndex = 0; v = s.exec(_3); )
              var m4 = v.index;
            l = l.slice(0, m4 === i3 ? c3 : m4);
          }
        } else if (n2.indexOf(ln(s), c3) != c3) {
          var w8 = l.lastIndexOf(s);
          w8 > -1 && (l = l.slice(0, w8));
        }
        return l + r;
      }
      function Wd(n2) {
        return n2 = $4(n2), n2 && Za.test(n2) ? n2.replace(zi, lo) : n2;
      }
      var Fd = Wt(function(n2, t, e) {
        return n2 + (e ? " " : "") + t.toUpperCase();
      }), Oi = _u("toUpperCase");
      function ga(n2, t, e) {
        return n2 = $4(n2), t = e ? i3 : t, t === i3 ? ao(n2) ? vo(n2) : kf(n2) : n2.match(t) || [];
      }
      var va = T(function(n2, t) {
        try {
          return cn2(n2, i3, t);
        } catch (e) {
          return xi(e) ? e : new S3(e);
        }
      }), Md = Yn2(function(n2, t) {
        return mn5(t, function(e) {
          e = Wn2(e), zn(n2, e, Ci(n2[e], n2));
        }), n2;
      });
      function qd(n2) {
        var t = n2 == null ? 0 : n2.length, e = C8();
        return n2 = t ? G4(n2, function(r) {
          if (typeof r[1] != "function")
            throw new wn2(M3);
          return [e(r[0]), r[1]];
        }) : [], T(function(r) {
          for (var s = -1; ++s < t; ) {
            var f4 = n2[s];
            if (cn2(f4[0], this, r))
              return cn2(f4[1], this, r);
          }
        });
      }
      function Bd(n2) {
        return pc(An2(n2, Ln));
      }
      function Ri(n2) {
        return function() {
          return n2;
        };
      }
      function Gd(n2, t) {
        return n2 == null || n2 !== n2 ? t : n2;
      }
      var zd = wu(), Kd = wu(true);
      function on2(n2) {
        return n2;
      }
      function bi(n2) {
        return Xs2(typeof n2 == "function" ? n2 : An2(n2, Ln));
      }
      function Yd(n2) {
        return Vs2(An2(n2, Ln));
      }
      function Zd(n2, t) {
        return ks2(n2, An2(t, Ln));
      }
      var Jd = T(function(n2, t) {
        return function(e) {
          return ue7(e, n2, t);
        };
      }), Xd = T(function(n2, t) {
        return function(e) {
          return ue7(n2, e, t);
        };
      });
      function Ti2(n2, t, e) {
        var r = V3(t), s = Be2(t, r);
        e == null && !(z6(t) && (s.length || !r.length)) && (e = t, t = n2, n2 = this, s = Be2(t, V3(t)));
        var f4 = !(z6(e) && "chain" in e) || !!e.chain, o = Jn(n2);
        return mn5(s, function(c3) {
          var l = t[c3];
          n2[c3] = l, o && (n2.prototype[c3] = function() {
            var v = this.__chain__;
            if (f4 || v) {
              var _3 = n2(this.__wrapped__), m4 = _3.__actions__ = un2(this.__actions__);
              return m4.push({ func: l, args: arguments, thisArg: n2 }), _3.__chain__ = v, _3;
            }
            return l.apply(n2, jn2([this.value()], arguments));
          });
        }), n2;
      }
      function Qd() {
        return k3._ === this && (k3._ = Co), this;
      }
      function Li2() {
      }
      function Vd(n2) {
        return n2 = R3(n2), T(function(t) {
          return js2(t, n2);
        });
      }
      var kd = oi(G4), jd = oi(Ps2), ng = oi(Hr);
      function _a(n2) {
        return vi(n2) ? Nr(Wn2(n2)) : bc(n2);
      }
      function tg(n2) {
        return function(t) {
          return n2 == null ? i3 : vt2(n2, t);
        };
      }
      var eg = Au(), rg = Au(true);
      function Di() {
        return [];
      }
      function Hi2() {
        return false;
      }
      function ig() {
        return {};
      }
      function sg() {
        return "";
      }
      function ug() {
        return true;
      }
      function ag(n2, t) {
        if (n2 = R3(n2), n2 < 1 || n2 > Vn2)
          return [];
        var e = Nn, r = nn2(n2, Nn);
        t = C8(t), n2 -= Nn;
        for (var s = Wr(r, t); ++e < n2; )
          t(e);
        return s;
      }
      function fg(n2) {
        return O5(n2) ? G4(n2, Wn2) : pn5(n2) ? [n2] : un2(Uu($4(n2)));
      }
      function og(n2) {
        var t = ++Po;
        return $4(n2) + t;
      }
      var cg = Je3(function(n2, t) {
        return n2 + t;
      }, 0), hg = ci("ceil"), lg = Je3(function(n2, t) {
        return n2 / t;
      }, 1), pg = ci("floor");
      function dg(n2) {
        return n2 && n2.length ? qe3(n2, on2, Xr) : i3;
      }
      function gg(n2, t) {
        return n2 && n2.length ? qe3(n2, C8(t, 2), Xr) : i3;
      }
      function vg(n2) {
        return Is2(n2, on2);
      }
      function _g(n2, t) {
        return Is2(n2, C8(t, 2));
      }
      function mg(n2) {
        return n2 && n2.length ? qe3(n2, on2, jr) : i3;
      }
      function wg(n2, t) {
        return n2 && n2.length ? qe3(n2, C8(t, 2), jr) : i3;
      }
      var Pg = Je3(function(n2, t) {
        return n2 * t;
      }, 1), Ag = ci("round"), Cg = Je3(function(n2, t) {
        return n2 - t;
      }, 0);
      function Ig(n2) {
        return n2 && n2.length ? Ur(n2, on2) : 0;
      }
      function xg(n2, t) {
        return n2 && n2.length ? Ur(n2, C8(t, 2)) : 0;
      }
      return a2.after = Yl, a2.ary = Ju, a2.assign = Dp, a2.assignIn = fa, a2.assignInWith = ar, a2.assignWith = Hp, a2.at = Np, a2.before = Xu, a2.bind = Ci, a2.bindAll = Md, a2.bindKey = Qu, a2.castArray = ip, a2.chain = Ku, a2.chunk = ph, a2.compact = dh, a2.concat = gh, a2.cond = qd, a2.conforms = Bd, a2.constant = Ri, a2.countBy = Il, a2.create = $p, a2.curry = Vu, a2.curryRight = ku, a2.debounce = ju, a2.defaults = Up, a2.defaultsDeep = Wp, a2.defer = Zl, a2.delay = Jl, a2.difference = vh, a2.differenceBy = _h, a2.differenceWith = mh, a2.drop = wh, a2.dropRight = Ph, a2.dropRightWhile = Ah, a2.dropWhile = Ch, a2.fill = Ih, a2.filter = El, a2.flatMap = Ol, a2.flatMapDeep = Rl, a2.flatMapDepth = bl, a2.flatten = qu, a2.flattenDeep = xh, a2.flattenDepth = Eh, a2.flip = Xl, a2.flow = zd, a2.flowRight = Kd, a2.fromPairs = yh, a2.functions = Kp, a2.functionsIn = Yp, a2.groupBy = Tl, a2.initial = Oh, a2.intersection = Rh, a2.intersectionBy = bh, a2.intersectionWith = Th, a2.invert = Jp, a2.invertBy = Xp, a2.invokeMap = Dl, a2.iteratee = bi, a2.keyBy = Hl, a2.keys = V3, a2.keysIn = fn, a2.map = tr2, a2.mapKeys = Vp, a2.mapValues = kp, a2.matches = Yd, a2.matchesProperty = Zd, a2.memoize = rr2, a2.merge = jp, a2.mergeWith = oa, a2.method = Jd, a2.methodOf = Xd, a2.mixin = Ti2, a2.negate = ir2, a2.nthArg = Vd, a2.omit = nd, a2.omitBy = td, a2.once = Ql, a2.orderBy = Nl, a2.over = kd, a2.overArgs = Vl, a2.overEvery = jd, a2.overSome = ng, a2.partial = Ii, a2.partialRight = na, a2.partition = $l, a2.pick = ed, a2.pickBy = ca, a2.property = _a, a2.propertyOf = tg, a2.pull = Nh, a2.pullAll = Gu, a2.pullAllBy = $h, a2.pullAllWith = Uh, a2.pullAt = Wh, a2.range = eg, a2.rangeRight = rg, a2.rearg = kl, a2.reject = Fl, a2.remove = Fh, a2.rest = jl, a2.reverse = Pi2, a2.sampleSize = ql, a2.set = id, a2.setWith = sd, a2.shuffle = Bl, a2.slice = Mh, a2.sortBy = Kl, a2.sortedUniq = Zh, a2.sortedUniqBy = Jh, a2.split = Od, a2.spread = np, a2.tail = Xh, a2.take = Qh, a2.takeRight = Vh, a2.takeRightWhile = kh, a2.takeWhile = jh, a2.tap = dl, a2.throttle = tp, a2.thru = nr2, a2.toArray = sa, a2.toPairs = ha, a2.toPairsIn = la, a2.toPath = fg, a2.toPlainObject = aa, a2.transform = ud, a2.unary = ep, a2.union = nl, a2.unionBy = tl, a2.unionWith = el, a2.uniq = rl, a2.uniqBy = il, a2.uniqWith = sl, a2.unset = ad, a2.unzip = Ai, a2.unzipWith = zu, a2.update = fd, a2.updateWith = od, a2.values = qt2, a2.valuesIn = cd, a2.without = ul, a2.words = ga, a2.wrap = rp, a2.xor = al, a2.xorBy = fl, a2.xorWith = ol, a2.zip = cl, a2.zipObject = hl, a2.zipObjectDeep = ll, a2.zipWith = pl, a2.entries = ha, a2.entriesIn = la, a2.extend = fa, a2.extendWith = ar, Ti2(a2, a2), a2.add = cg, a2.attempt = va, a2.camelCase = dd, a2.capitalize = pa, a2.ceil = hg, a2.clamp = hd, a2.clone = sp, a2.cloneDeep = ap, a2.cloneDeepWith = fp, a2.cloneWith = up, a2.conformsTo = op, a2.deburr = da, a2.defaultTo = Gd, a2.divide = lg, a2.endsWith = gd, a2.eq = bn, a2.escape = vd, a2.escapeRegExp = _d, a2.every = xl, a2.find = yl, a2.findIndex = Fu, a2.findKey = Fp, a2.findLast = Sl, a2.findLastIndex = Mu, a2.findLastKey = Mp, a2.floor = pg, a2.forEach = Yu, a2.forEachRight = Zu, a2.forIn = qp, a2.forInRight = Bp, a2.forOwn = Gp, a2.forOwnRight = zp, a2.get = yi, a2.gt = cp, a2.gte = hp, a2.has = Zp, a2.hasIn = Si2, a2.head = Bu, a2.identity = on2, a2.includes = Ll, a2.indexOf = Sh, a2.inRange = ld, a2.invoke = Qp, a2.isArguments = wt3, a2.isArray = O5, a2.isArrayBuffer = lp, a2.isArrayLike = an2, a2.isArrayLikeObject = Y4, a2.isBoolean = pp, a2.isBuffer = ut3, a2.isDate = dp, a2.isElement = gp, a2.isEmpty = vp, a2.isEqual = _p, a2.isEqualWith = mp, a2.isError = xi, a2.isFinite = wp, a2.isFunction = Jn, a2.isInteger = ta, a2.isLength = sr2, a2.isMap = ea, a2.isMatch = Pp, a2.isMatchWith = Ap, a2.isNaN = Cp, a2.isNative = Ip, a2.isNil = Ep, a2.isNull = xp, a2.isNumber = ra, a2.isObject = z6, a2.isObjectLike = K4, a2.isPlainObject = le2, a2.isRegExp = Ei, a2.isSafeInteger = yp, a2.isSet = ia, a2.isString = ur2, a2.isSymbol = pn5, a2.isTypedArray = Mt3, a2.isUndefined = Sp, a2.isWeakMap = Op, a2.isWeakSet = Rp, a2.join = Lh, a2.kebabCase = md, a2.last = In, a2.lastIndexOf = Dh, a2.lowerCase = wd, a2.lowerFirst = Pd, a2.lt = bp, a2.lte = Tp, a2.max = dg, a2.maxBy = gg, a2.mean = vg, a2.meanBy = _g, a2.min = mg, a2.minBy = wg, a2.stubArray = Di, a2.stubFalse = Hi2, a2.stubObject = ig, a2.stubString = sg, a2.stubTrue = ug, a2.multiply = Pg, a2.nth = Hh, a2.noConflict = Qd, a2.noop = Li2, a2.now = er2, a2.pad = Ad, a2.padEnd = Cd, a2.padStart = Id, a2.parseInt = xd, a2.random = pd, a2.reduce = Ul, a2.reduceRight = Wl, a2.repeat = Ed, a2.replace = yd, a2.result = rd, a2.round = Ag, a2.runInContext = h2, a2.sample = Ml, a2.size = Gl, a2.snakeCase = Sd, a2.some = zl, a2.sortedIndex = qh, a2.sortedIndexBy = Bh, a2.sortedIndexOf = Gh, a2.sortedLastIndex = zh, a2.sortedLastIndexBy = Kh, a2.sortedLastIndexOf = Yh, a2.startCase = Rd, a2.startsWith = bd, a2.subtract = Cg, a2.sum = Ig, a2.sumBy = xg, a2.template = Td, a2.times = ag, a2.toFinite = Xn3, a2.toInteger = R3, a2.toLength = ua, a2.toLower = Ld, a2.toNumber = xn, a2.toSafeInteger = Lp, a2.toString = $4, a2.toUpper = Dd, a2.trim = Hd, a2.trimEnd = Nd, a2.trimStart = $d, a2.truncate = Ud, a2.unescape = Wd, a2.uniqueId = og, a2.upperCase = Fd, a2.upperFirst = Oi, a2.each = Yu, a2.eachRight = Zu, a2.first = Bu, Ti2(a2, function() {
        var n2 = {};
        return $n3(a2, function(t, e) {
          U3.call(a2.prototype, e) || (n2[e] = t);
        }), n2;
      }(), { chain: false }), a2.VERSION = p4, mn5(["bind", "bindKey", "curry", "curryRight", "partial", "partialRight"], function(n2) {
        a2[n2].placeholder = a2;
      }), mn5(["drop", "take"], function(n2, t) {
        D2.prototype[n2] = function(e) {
          e = e === i3 ? 1 : Q4(R3(e), 0);
          var r = this.__filtered__ && !t ? new D2(this) : this.clone();
          return r.__filtered__ ? r.__takeCount__ = nn2(e, r.__takeCount__) : r.__views__.push({ size: nn2(e, Nn), type: n2 + (r.__dir__ < 0 ? "Right" : "") }), r;
        }, D2.prototype[n2 + "Right"] = function(e) {
          return this.reverse()[n2](e).reverse();
        };
      }), mn5(["filter", "map", "takeWhile"], function(n2, t) {
        var e = t + 1, r = e == qi2 || e == Da;
        D2.prototype[n2] = function(s) {
          var f4 = this.clone();
          return f4.__iteratees__.push({ iteratee: C8(s, 3), type: e }), f4.__filtered__ = f4.__filtered__ || r, f4;
        };
      }), mn5(["head", "last"], function(n2, t) {
        var e = "take" + (t ? "Right" : "");
        D2.prototype[n2] = function() {
          return this[e](1).value()[0];
        };
      }), mn5(["initial", "tail"], function(n2, t) {
        var e = "drop" + (t ? "" : "Right");
        D2.prototype[n2] = function() {
          return this.__filtered__ ? new D2(this) : this[e](1);
        };
      }), D2.prototype.compact = function() {
        return this.filter(on2);
      }, D2.prototype.find = function(n2) {
        return this.filter(n2).head();
      }, D2.prototype.findLast = function(n2) {
        return this.reverse().find(n2);
      }, D2.prototype.invokeMap = T(function(n2, t) {
        return typeof n2 == "function" ? new D2(this) : this.map(function(e) {
          return ue7(e, n2, t);
        });
      }), D2.prototype.reject = function(n2) {
        return this.filter(ir2(C8(n2)));
      }, D2.prototype.slice = function(n2, t) {
        n2 = R3(n2);
        var e = this;
        return e.__filtered__ && (n2 > 0 || t < 0) ? new D2(e) : (n2 < 0 ? e = e.takeRight(-n2) : n2 && (e = e.drop(n2)), t !== i3 && (t = R3(t), e = t < 0 ? e.dropRight(-t) : e.take(t - n2)), e);
      }, D2.prototype.takeRightWhile = function(n2) {
        return this.reverse().takeWhile(n2).reverse();
      }, D2.prototype.toArray = function() {
        return this.take(Nn);
      }, $n3(D2.prototype, function(n2, t) {
        var e = /^(?:filter|find|map|reject)|While$/.test(t), r = /^(?:head|last)$/.test(t), s = a2[r ? "take" + (t == "last" ? "Right" : "") : t], f4 = r || /^find/.test(t);
        s && (a2.prototype[t] = function() {
          var o = this.__wrapped__, c3 = r ? [1] : arguments, l = o instanceof D2, v = c3[0], _3 = l || O5(o), m4 = function(L3) {
            var H4 = s.apply(a2, jn2([L3], c3));
            return r && w8 ? H4[0] : H4;
          };
          _3 && e && typeof v == "function" && v.length != 1 && (l = _3 = false);
          var w8 = this.__chain__, A3 = !!this.__actions__.length, I2 = f4 && !w8, b5 = l && !A3;
          if (!f4 && _3) {
            o = b5 ? o : new D2(this);
            var x3 = n2.apply(o, c3);
            return x3.__actions__.push({ func: nr2, args: [m4], thisArg: i3 }), new Pn(x3, w8);
          }
          return I2 && b5 ? n2.apply(this, c3) : (x3 = this.thru(m4), I2 ? r ? x3.value()[0] : x3.value() : x3);
        });
      }), mn5(["pop", "push", "shift", "sort", "splice", "unshift"], function(n2) {
        var t = ye[n2], e = /^(?:push|sort|unshift)$/.test(n2) ? "tap" : "thru", r = /^(?:pop|shift)$/.test(n2);
        a2.prototype[n2] = function() {
          var s = arguments;
          if (r && !this.__chain__) {
            var f4 = this.value();
            return t.apply(O5(f4) ? f4 : [], s);
          }
          return this[e](function(o) {
            return t.apply(O5(o) ? o : [], s);
          });
        };
      }), $n3(D2.prototype, function(n2, t) {
        var e = a2[t];
        if (e) {
          var r = e.name + "";
          U3.call(Nt2, r) || (Nt2[r] = []), Nt2[r].push({ name: t, func: e });
        }
      }), Nt2[Ze4(i3, ot4).name] = [{ name: "wrapper", func: i3 }], D2.prototype.clone = Wo, D2.prototype.reverse = Fo, D2.prototype.value = Mo, a2.prototype.at = gl, a2.prototype.chain = vl, a2.prototype.commit = _l, a2.prototype.next = ml, a2.prototype.plant = Pl, a2.prototype.reverse = Al, a2.prototype.toJSON = a2.prototype.valueOf = a2.prototype.value = Cl, a2.prototype.first = a2.prototype.head, jt3 && (a2.prototype[jt3] = wl), a2;
    }, Lt3 = _o();
    ht2 ? ((ht2.exports = Lt3)._ = Lt3, br2._ = Lt3) : k3._ = Lt3;
  }).call(pe6);
})($i2, $i2.exports);
var Wg = Object.defineProperty;
var Fg = Object.defineProperties;
var Mg = Object.getOwnPropertyDescriptors;
var Ca = Object.getOwnPropertySymbols;
var qg = Object.prototype.hasOwnProperty;
var Bg = Object.prototype.propertyIsEnumerable;
var Ia = (E3, u4, i3) => u4 in E3 ? Wg(E3, u4, { enumerable: true, configurable: true, writable: true, value: i3 }) : E3[u4] = i3;
var or2 = (E3, u4) => {
  for (var i3 in u4 || (u4 = {}))
    qg.call(u4, i3) && Ia(E3, i3, u4[i3]);
  if (Ca)
    for (var i3 of Ca(u4))
      Bg.call(u4, i3) && Ia(E3, i3, u4[i3]);
  return E3;
};
var Gg = (E3, u4) => Fg(E3, Mg(u4));
function En5(E3, u4, i3) {
  let p4;
  const y3 = Ui2(E3);
  return u4.rpcMap && (p4 = u4.rpcMap[y3]), p4 || (p4 = `${Ug}?chainId=eip155:${y3}&projectId=${i3}`), p4;
}
function Ui2(E3) {
  return E3.includes("eip155") ? Number(E3.split(":")[1]) : Number(E3);
}
function zg(E3) {
  return E3.map((u4) => `${u4.split(":")[0]}:${u4.split(":")[1]}`);
}
function Kg(E3, u4) {
  const i3 = Object.keys(u4.namespaces).filter((y3) => y3.includes(E3));
  if (!i3.length)
    return [];
  const p4 = [];
  return i3.forEach((y3) => {
    const W4 = u4.namespaces[y3].accounts;
    p4.push(...W4);
  }), p4;
}
function Yg(E3, u4 = {}) {
  const i3 = xa(E3), p4 = xa(u4);
  return $i2.exports.merge(i3, p4);
}
function xa(E3) {
  var u4, i3, p4, y3;
  const W4 = {};
  if (!F3(E3))
    return W4;
  for (const [M3, ft3] of Object.entries(E3)) {
    const Gt = te2(M3) ? [M3] : ft3.chains, lr2 = ft3.methods || [], At3 = ft3.events || [], Ln = ft3.rpcMap || {}, Fn2 = Ze3(M3);
    W4[Fn2] = Gg(or2(or2({}, W4[Fn2]), ft3), { chains: S2(Gt, (u4 = W4[Fn2]) == null ? void 0 : u4.chains), methods: S2(lr2, (i3 = W4[Fn2]) == null ? void 0 : i3.methods), events: S2(At3, (p4 = W4[Fn2]) == null ? void 0 : p4.events), rpcMap: or2(or2({}, Ln), (y3 = W4[Fn2]) == null ? void 0 : y3.rpcMap) });
  }
  return W4;
}
var Ea = {};
var J4 = (E3) => Ea[E3];
var Wi2 = (E3, u4) => {
  Ea[E3] = u4;
};
var Zg = class {
  constructor(u4) {
    this.name = "polkadot", this.namespace = u4.namespace, this.events = J4("events"), this.client = J4("client"), this.chainId = this.getDefaultChain(), this.httpProviders = this.createHttpProviders();
  }
  updateNamespace(u4) {
    this.namespace = Object.assign(this.namespace, u4);
  }
  requestAccounts() {
    return this.getAccounts();
  }
  getDefaultChain() {
    if (this.chainId)
      return this.chainId;
    if (this.namespace.defaultChain)
      return this.namespace.defaultChain;
    const u4 = this.namespace.chains[0];
    if (!u4)
      throw new Error("ChainId not found");
    return u4.split(":")[1];
  }
  request(u4) {
    return this.namespace.methods.includes(u4.request.method) ? this.client.request(u4) : this.getHttpProvider().request(u4.request);
  }
  setDefaultChain(u4, i3) {
    if (this.chainId = u4, !this.httpProviders[u4]) {
      const p4 = i3 || En5(`${this.name}:${u4}`, this.namespace);
      if (!p4)
        throw new Error(`No RPC url provided for chainId: ${u4}`);
      this.setHttpProvider(u4, p4);
    }
    this.events.emit(at3.DEFAULT_CHAIN_CHANGED, `${this.name}:${this.chainId}`);
  }
  getAccounts() {
    const u4 = this.namespace.accounts;
    return u4 ? u4.filter((i3) => i3.split(":")[1] === this.chainId.toString()).map((i3) => i3.split(":")[2]) || [] : [];
  }
  createHttpProviders() {
    const u4 = {};
    return this.namespace.chains.forEach((i3) => {
      var p4;
      u4[i3] = this.createHttpProvider(i3, (p4 = this.namespace.rpcMap) == null ? void 0 : p4[i3]);
    }), u4;
  }
  getHttpProvider() {
    const u4 = `${this.name}:${this.chainId}`, i3 = this.httpProviders[u4];
    if (typeof i3 > "u")
      throw new Error(`JSON-RPC provider for ${u4} not found`);
    return i3;
  }
  setHttpProvider(u4, i3) {
    const p4 = this.createHttpProvider(u4, i3);
    p4 && (this.httpProviders[u4] = p4);
  }
  createHttpProvider(u4, i3) {
    const p4 = i3 || En5(u4, this.namespace);
    return typeof p4 > "u" ? void 0 : new JsonRpcProvider(new esm_default2(p4, J4("disableProviderPing")));
  }
};
var Jg = class {
  constructor(u4) {
    this.name = "eip155", this.namespace = u4.namespace, this.events = J4("events"), this.client = J4("client"), this.httpProviders = this.createHttpProviders(), this.chainId = parseInt(this.getDefaultChain());
  }
  async request(u4) {
    switch (u4.request.method) {
      case "eth_requestAccounts":
        return this.getAccounts();
      case "eth_accounts":
        return this.getAccounts();
      case "wallet_switchEthereumChain":
        return await this.handleSwitchChain(u4);
      case "eth_chainId":
        return parseInt(this.getDefaultChain());
    }
    return this.namespace.methods.includes(u4.request.method) ? await this.client.request(u4) : this.getHttpProvider().request(u4.request);
  }
  updateNamespace(u4) {
    this.namespace = Object.assign(this.namespace, u4);
  }
  setDefaultChain(u4, i3) {
    const p4 = Ui2(u4);
    if (!this.httpProviders[p4]) {
      const y3 = i3 || En5(`${this.name}:${p4}`, this.namespace, this.client.core.projectId);
      if (!y3)
        throw new Error(`No RPC url provided for chainId: ${p4}`);
      this.setHttpProvider(p4, y3);
    }
    this.chainId = p4, this.events.emit(at3.DEFAULT_CHAIN_CHANGED, `${this.name}:${p4}`);
  }
  requestAccounts() {
    return this.getAccounts();
  }
  getDefaultChain() {
    if (this.chainId)
      return this.chainId.toString();
    if (this.namespace.defaultChain)
      return this.namespace.defaultChain;
    const u4 = this.namespace.chains[0];
    if (!u4)
      throw new Error("ChainId not found");
    return u4.split(":")[1];
  }
  createHttpProvider(u4, i3) {
    const p4 = i3 || En5(`${this.name}:${u4}`, this.namespace, this.client.core.projectId);
    return typeof p4 > "u" ? void 0 : new JsonRpcProvider(new HttpConnection(p4, J4("disableProviderPing")));
  }
  setHttpProvider(u4, i3) {
    const p4 = this.createHttpProvider(u4, i3);
    p4 && (this.httpProviders[u4] = p4);
  }
  createHttpProviders() {
    const u4 = {};
    return this.namespace.chains.forEach((i3) => {
      var p4;
      const y3 = Ui2(i3);
      u4[y3] = this.createHttpProvider(y3, (p4 = this.namespace.rpcMap) == null ? void 0 : p4[i3]);
    }), u4;
  }
  getAccounts() {
    const u4 = this.namespace.accounts;
    return u4 ? [...new Set(u4.filter((i3) => i3.split(":")[1] === this.chainId.toString()).map((i3) => i3.split(":")[2]))] : [];
  }
  getHttpProvider() {
    const u4 = this.chainId, i3 = this.httpProviders[u4];
    if (typeof i3 > "u")
      throw new Error(`JSON-RPC provider for ${u4} not found`);
    return i3;
  }
  async handleSwitchChain(u4) {
    var i3;
    let p4 = u4.request.params ? (i3 = u4.request.params[0]) == null ? void 0 : i3.chainId : "0x0";
    p4 = p4.startsWith("0x") ? p4 : `0x${p4}`;
    const y3 = parseInt(p4, 16);
    if (this.isChainApproved(y3))
      this.setDefaultChain(`${y3}`);
    else if (this.namespace.methods.includes("wallet_switchEthereumChain"))
      await this.client.request({ topic: u4.topic, request: { method: u4.request.method, params: [{ chainId: p4 }] }, chainId: u4.chainId }), this.setDefaultChain(`${y3}`);
    else
      throw new Error(`Failed to switch to chain 'eip155:${y3}'. The chain is not approved or the wallet does not support 'wallet_switchEthereumChain' method.`);
    return null;
  }
  isChainApproved(u4) {
    return this.namespace.chains.includes(`${this.name}:${u4}`);
  }
};
var Xg = class {
  constructor(u4) {
    this.name = "solana", this.namespace = u4.namespace, this.events = J4("events"), this.client = J4("client"), this.chainId = this.getDefaultChain(), this.httpProviders = this.createHttpProviders();
  }
  updateNamespace(u4) {
    this.namespace = Object.assign(this.namespace, u4);
  }
  requestAccounts() {
    return this.getAccounts();
  }
  request(u4) {
    return this.namespace.methods.includes(u4.request.method) ? this.client.request(u4) : this.getHttpProvider().request(u4.request);
  }
  setDefaultChain(u4, i3) {
    if (!this.httpProviders[u4]) {
      const p4 = i3 || En5(`${this.name}:${u4}`, this.namespace, this.client.core.projectId);
      if (!p4)
        throw new Error(`No RPC url provided for chainId: ${u4}`);
      this.setHttpProvider(u4, p4);
    }
    this.chainId = u4, this.events.emit(at3.DEFAULT_CHAIN_CHANGED, `${this.name}:${this.chainId}`);
  }
  getDefaultChain() {
    if (this.chainId)
      return this.chainId;
    if (this.namespace.defaultChain)
      return this.namespace.defaultChain;
    const u4 = this.namespace.chains[0];
    if (!u4)
      throw new Error("ChainId not found");
    return u4.split(":")[1];
  }
  getAccounts() {
    const u4 = this.namespace.accounts;
    return u4 ? [...new Set(u4.filter((i3) => i3.split(":")[1] === this.chainId.toString()).map((i3) => i3.split(":")[2]))] : [];
  }
  createHttpProviders() {
    const u4 = {};
    return this.namespace.chains.forEach((i3) => {
      var p4;
      u4[i3] = this.createHttpProvider(i3, (p4 = this.namespace.rpcMap) == null ? void 0 : p4[i3]);
    }), u4;
  }
  getHttpProvider() {
    const u4 = `${this.name}:${this.chainId}`, i3 = this.httpProviders[u4];
    if (typeof i3 > "u")
      throw new Error(`JSON-RPC provider for ${u4} not found`);
    return i3;
  }
  setHttpProvider(u4, i3) {
    const p4 = this.createHttpProvider(u4, i3);
    p4 && (this.httpProviders[u4] = p4);
  }
  createHttpProvider(u4, i3) {
    const p4 = i3 || En5(u4, this.namespace, this.client.core.projectId);
    return typeof p4 > "u" ? void 0 : new JsonRpcProvider(new esm_default2(p4, J4("disableProviderPing")));
  }
};
var Qg = class {
  constructor(u4) {
    this.name = "cosmos", this.namespace = u4.namespace, this.events = J4("events"), this.client = J4("client"), this.chainId = this.getDefaultChain(), this.httpProviders = this.createHttpProviders();
  }
  updateNamespace(u4) {
    this.namespace = Object.assign(this.namespace, u4);
  }
  requestAccounts() {
    return this.getAccounts();
  }
  getDefaultChain() {
    if (this.chainId)
      return this.chainId;
    if (this.namespace.defaultChain)
      return this.namespace.defaultChain;
    const u4 = this.namespace.chains[0];
    if (!u4)
      throw new Error("ChainId not found");
    return u4.split(":")[1];
  }
  request(u4) {
    return this.namespace.methods.includes(u4.request.method) ? this.client.request(u4) : this.getHttpProvider().request(u4.request);
  }
  setDefaultChain(u4, i3) {
    if (this.chainId = u4, !this.httpProviders[u4]) {
      const p4 = i3 || En5(`${this.name}:${u4}`, this.namespace, this.client.core.projectId);
      if (!p4)
        throw new Error(`No RPC url provided for chainId: ${u4}`);
      this.setHttpProvider(u4, p4);
    }
    this.events.emit(at3.DEFAULT_CHAIN_CHANGED, `${this.name}:${this.chainId}`);
  }
  getAccounts() {
    const u4 = this.namespace.accounts;
    return u4 ? [...new Set(u4.filter((i3) => i3.split(":")[1] === this.chainId.toString()).map((i3) => i3.split(":")[2]))] : [];
  }
  createHttpProviders() {
    const u4 = {};
    return this.namespace.chains.forEach((i3) => {
      var p4;
      u4[i3] = this.createHttpProvider(i3, (p4 = this.namespace.rpcMap) == null ? void 0 : p4[i3]);
    }), u4;
  }
  getHttpProvider() {
    const u4 = `${this.name}:${this.chainId}`, i3 = this.httpProviders[u4];
    if (typeof i3 > "u")
      throw new Error(`JSON-RPC provider for ${u4} not found`);
    return i3;
  }
  setHttpProvider(u4, i3) {
    const p4 = this.createHttpProvider(u4, i3);
    p4 && (this.httpProviders[u4] = p4);
  }
  createHttpProvider(u4, i3) {
    const p4 = i3 || En5(u4, this.namespace, this.client.core.projectId);
    return typeof p4 > "u" ? void 0 : new JsonRpcProvider(new esm_default2(p4, J4("disableProviderPing")));
  }
};
var Vg = class {
  constructor(u4) {
    this.name = "cip34", this.namespace = u4.namespace, this.events = J4("events"), this.client = J4("client"), this.chainId = this.getDefaultChain(), this.httpProviders = this.createHttpProviders();
  }
  updateNamespace(u4) {
    this.namespace = Object.assign(this.namespace, u4);
  }
  requestAccounts() {
    return this.getAccounts();
  }
  getDefaultChain() {
    if (this.chainId)
      return this.chainId;
    if (this.namespace.defaultChain)
      return this.namespace.defaultChain;
    const u4 = this.namespace.chains[0];
    if (!u4)
      throw new Error("ChainId not found");
    return u4.split(":")[1];
  }
  request(u4) {
    return this.namespace.methods.includes(u4.request.method) ? this.client.request(u4) : this.getHttpProvider().request(u4.request);
  }
  setDefaultChain(u4, i3) {
    if (this.chainId = u4, !this.httpProviders[u4]) {
      const p4 = i3 || this.getCardanoRPCUrl(u4);
      if (!p4)
        throw new Error(`No RPC url provided for chainId: ${u4}`);
      this.setHttpProvider(u4, p4);
    }
    this.events.emit(at3.DEFAULT_CHAIN_CHANGED, `${this.name}:${this.chainId}`);
  }
  getAccounts() {
    const u4 = this.namespace.accounts;
    return u4 ? [...new Set(u4.filter((i3) => i3.split(":")[1] === this.chainId.toString()).map((i3) => i3.split(":")[2]))] : [];
  }
  createHttpProviders() {
    const u4 = {};
    return this.namespace.chains.forEach((i3) => {
      const p4 = this.getCardanoRPCUrl(i3);
      u4[i3] = this.createHttpProvider(i3, p4);
    }), u4;
  }
  getHttpProvider() {
    const u4 = `${this.name}:${this.chainId}`, i3 = this.httpProviders[u4];
    if (typeof i3 > "u")
      throw new Error(`JSON-RPC provider for ${u4} not found`);
    return i3;
  }
  getCardanoRPCUrl(u4) {
    const i3 = this.namespace.rpcMap;
    if (i3)
      return i3[u4];
  }
  setHttpProvider(u4, i3) {
    const p4 = this.createHttpProvider(u4, i3);
    p4 && (this.httpProviders[u4] = p4);
  }
  createHttpProvider(u4, i3) {
    const p4 = i3 || this.getCardanoRPCUrl(u4);
    return typeof p4 > "u" ? void 0 : new JsonRpcProvider(new esm_default2(p4, J4("disableProviderPing")));
  }
};
var kg = class {
  constructor(u4) {
    this.name = "elrond", this.namespace = u4.namespace, this.events = J4("events"), this.client = J4("client"), this.chainId = this.getDefaultChain(), this.httpProviders = this.createHttpProviders();
  }
  updateNamespace(u4) {
    this.namespace = Object.assign(this.namespace, u4);
  }
  requestAccounts() {
    return this.getAccounts();
  }
  request(u4) {
    return this.namespace.methods.includes(u4.request.method) ? this.client.request(u4) : this.getHttpProvider().request(u4.request);
  }
  setDefaultChain(u4, i3) {
    if (!this.httpProviders[u4]) {
      const p4 = i3 || En5(`${this.name}:${u4}`, this.namespace, this.client.core.projectId);
      if (!p4)
        throw new Error(`No RPC url provided for chainId: ${u4}`);
      this.setHttpProvider(u4, p4);
    }
    this.chainId = u4, this.events.emit(at3.DEFAULT_CHAIN_CHANGED, `${this.name}:${this.chainId}`);
  }
  getDefaultChain() {
    if (this.chainId)
      return this.chainId;
    if (this.namespace.defaultChain)
      return this.namespace.defaultChain;
    const u4 = this.namespace.chains[0];
    if (!u4)
      throw new Error("ChainId not found");
    return u4.split(":")[1];
  }
  getAccounts() {
    const u4 = this.namespace.accounts;
    return u4 ? [...new Set(u4.filter((i3) => i3.split(":")[1] === this.chainId.toString()).map((i3) => i3.split(":")[2]))] : [];
  }
  createHttpProviders() {
    const u4 = {};
    return this.namespace.chains.forEach((i3) => {
      var p4;
      u4[i3] = this.createHttpProvider(i3, (p4 = this.namespace.rpcMap) == null ? void 0 : p4[i3]);
    }), u4;
  }
  getHttpProvider() {
    const u4 = `${this.name}:${this.chainId}`, i3 = this.httpProviders[u4];
    if (typeof i3 > "u")
      throw new Error(`JSON-RPC provider for ${u4} not found`);
    return i3;
  }
  setHttpProvider(u4, i3) {
    const p4 = this.createHttpProvider(u4, i3);
    p4 && (this.httpProviders[u4] = p4);
  }
  createHttpProvider(u4, i3) {
    const p4 = i3 || En5(u4, this.namespace, this.client.core.projectId);
    return typeof p4 > "u" ? void 0 : new JsonRpcProvider(new esm_default2(p4, J4("disableProviderPing")));
  }
};
var jg = class {
  constructor(u4) {
    this.name = "multiversx", this.namespace = u4.namespace, this.events = J4("events"), this.client = J4("client"), this.chainId = this.getDefaultChain(), this.httpProviders = this.createHttpProviders();
  }
  updateNamespace(u4) {
    this.namespace = Object.assign(this.namespace, u4);
  }
  requestAccounts() {
    return this.getAccounts();
  }
  request(u4) {
    return this.namespace.methods.includes(u4.request.method) ? this.client.request(u4) : this.getHttpProvider().request(u4.request);
  }
  setDefaultChain(u4, i3) {
    if (!this.httpProviders[u4]) {
      const p4 = i3 || En5(`${this.name}:${u4}`, this.namespace, this.client.core.projectId);
      if (!p4)
        throw new Error(`No RPC url provided for chainId: ${u4}`);
      this.setHttpProvider(u4, p4);
    }
    this.chainId = u4, this.events.emit(at3.DEFAULT_CHAIN_CHANGED, `${this.name}:${this.chainId}`);
  }
  getDefaultChain() {
    if (this.chainId)
      return this.chainId;
    if (this.namespace.defaultChain)
      return this.namespace.defaultChain;
    const u4 = this.namespace.chains[0];
    if (!u4)
      throw new Error("ChainId not found");
    return u4.split(":")[1];
  }
  getAccounts() {
    const u4 = this.namespace.accounts;
    return u4 ? [...new Set(u4.filter((i3) => i3.split(":")[1] === this.chainId.toString()).map((i3) => i3.split(":")[2]))] : [];
  }
  createHttpProviders() {
    const u4 = {};
    return this.namespace.chains.forEach((i3) => {
      var p4;
      u4[i3] = this.createHttpProvider(i3, (p4 = this.namespace.rpcMap) == null ? void 0 : p4[i3]);
    }), u4;
  }
  getHttpProvider() {
    const u4 = `${this.name}:${this.chainId}`, i3 = this.httpProviders[u4];
    if (typeof i3 > "u")
      throw new Error(`JSON-RPC provider for ${u4} not found`);
    return i3;
  }
  setHttpProvider(u4, i3) {
    const p4 = this.createHttpProvider(u4, i3);
    p4 && (this.httpProviders[u4] = p4);
  }
  createHttpProvider(u4, i3) {
    const p4 = i3 || En5(u4, this.namespace, this.client.core.projectId);
    return typeof p4 > "u" ? void 0 : new JsonRpcProvider(new esm_default2(p4, J4("disableProviderPing")));
  }
};
var nv = Object.defineProperty;
var tv = Object.defineProperties;
var ev = Object.getOwnPropertyDescriptors;
var ya = Object.getOwnPropertySymbols;
var rv = Object.prototype.hasOwnProperty;
var iv = Object.prototype.propertyIsEnumerable;
var Sa = (E3, u4, i3) => u4 in E3 ? nv(E3, u4, { enumerable: true, configurable: true, writable: true, value: i3 }) : E3[u4] = i3;
var cr = (E3, u4) => {
  for (var i3 in u4 || (u4 = {}))
    rv.call(u4, i3) && Sa(E3, i3, u4[i3]);
  if (ya)
    for (var i3 of ya(u4))
      iv.call(u4, i3) && Sa(E3, i3, u4[i3]);
  return E3;
};
var Fi2 = (E3, u4) => tv(E3, ev(u4));
var hr = class {
  constructor(u4) {
    this.events = new import_events10.default(), this.rpcProviders = {}, this.shouldAbortPairingAttempt = false, this.maxPairingAttempts = 10, this.disableProviderPing = false, this.providerOpts = u4, this.logger = typeof (u4 == null ? void 0 : u4.logger) < "u" && typeof (u4 == null ? void 0 : u4.logger) != "string" ? u4.logger : (0, import_logger3.pino)((0, import_logger3.getDefaultLoggerOptions)({ level: (u4 == null ? void 0 : u4.logger) || Pa })), this.disableProviderPing = (u4 == null ? void 0 : u4.disableProviderPing) || false;
  }
  static async init(u4) {
    const i3 = new hr(u4);
    return await i3.initialize(), i3;
  }
  async request(u4, i3) {
    const [p4, y3] = this.validateChain(i3);
    if (!this.session)
      throw new Error("Please call connect() before request()");
    return await this.getProvider(p4).request({ request: cr({}, u4), chainId: `${p4}:${y3}`, topic: this.session.topic });
  }
  sendAsync(u4, i3, p4) {
    this.request(u4, p4).then((y3) => i3(null, y3)).catch((y3) => i3(y3, void 0));
  }
  async enable() {
    if (!this.client)
      throw new Error("Sign Client not initialized");
    return this.session || await this.connect({ namespaces: this.namespaces, optionalNamespaces: this.optionalNamespaces, sessionProperties: this.sessionProperties }), await this.requestAccounts();
  }
  async disconnect() {
    var u4;
    if (!this.session)
      throw new Error("Please call connect() before enable()");
    await this.client.disconnect({ topic: (u4 = this.session) == null ? void 0 : u4.topic, reason: w6("USER_DISCONNECTED") }), await this.cleanup();
  }
  async connect(u4) {
    if (!this.client)
      throw new Error("Sign Client not initialized");
    if (this.setNamespaces(u4), await this.cleanupPendingPairings(), !u4.skipPairing)
      return await this.pair(u4.pairingTopic);
  }
  on(u4, i3) {
    this.events.on(u4, i3);
  }
  once(u4, i3) {
    this.events.once(u4, i3);
  }
  removeListener(u4, i3) {
    this.events.removeListener(u4, i3);
  }
  off(u4, i3) {
    this.events.off(u4, i3);
  }
  get isWalletConnect() {
    return true;
  }
  async pair(u4) {
    this.shouldAbortPairingAttempt = false;
    let i3 = 0;
    do {
      if (this.shouldAbortPairingAttempt)
        throw new Error("Pairing aborted");
      if (i3 >= this.maxPairingAttempts)
        throw new Error("Max auto pairing attempts reached");
      const { uri: p4, approval: y3 } = await this.client.connect({ pairingTopic: u4, requiredNamespaces: this.namespaces, optionalNamespaces: this.optionalNamespaces, sessionProperties: this.sessionProperties });
      p4 && (this.uri = p4, this.events.emit("display_uri", p4)), await y3().then((W4) => {
        this.session = W4;
      }).catch((W4) => {
        if (W4.message !== te)
          throw W4;
        i3++;
      });
    } while (!this.session);
    return this.onConnect(), this.session;
  }
  setDefaultChain(u4, i3) {
    try {
      const [p4, y3] = this.validateChain(u4);
      this.getProvider(p4).setDefaultChain(y3, i3);
    } catch (p4) {
      if (!/Please call connect/.test(p4.message))
        throw p4;
    }
  }
  async cleanupPendingPairings(u4 = {}) {
    this.logger.info("Cleaning up inactive pairings...");
    const i3 = this.client.pairing.getAll();
    if (j5(i3)) {
      for (const p4 of i3)
        u4.deletePairings ? this.client.core.expirer.set(p4.topic, 0) : await this.client.core.relayer.subscriber.unsubscribe(p4.topic);
      this.logger.info(`Inactive pairings cleared: ${i3.length}`);
    }
  }
  abortPairingAttempt() {
    this.shouldAbortPairingAttempt = true;
  }
  async checkStorage() {
    if (this.namespaces = await this.getFromStore("namespaces") || {}, this.optionalNamespaces = await this.getFromStore("optionalNamespaces") || {}, this.client.session.length) {
      const u4 = this.client.session.keys.length - 1;
      this.session = this.client.session.get(this.client.session.keys[u4]), this.createProviders();
    }
  }
  async initialize() {
    this.logger.trace("Initialized"), await this.createClient(), await this.checkStorage(), this.registerEventListeners();
  }
  async createClient() {
    this.client = this.providerOpts.client || await M2.init({ logger: this.providerOpts.logger || Pa, relayUrl: this.providerOpts.relayUrl || Hg, projectId: this.providerOpts.projectId, metadata: this.providerOpts.metadata, storageOptions: this.providerOpts.storageOptions, name: this.providerOpts.name }), this.logger.trace("SignClient Initialized");
  }
  createProviders() {
    if (!this.client)
      throw new Error("Sign Client not initialized");
    if (!this.session)
      throw new Error("Session not initialized. Please call connect() before enable()");
    const u4 = [...new Set(Object.keys(this.session.namespaces).map((i3) => Ze3(i3)))];
    Wi2("client", this.client), Wi2("events", this.events), Wi2("disableProviderPing", this.disableProviderPing), u4.forEach((i3) => {
      if (!this.session)
        return;
      const p4 = Kg(i3, this.session), y3 = zg(p4), W4 = Yg(this.namespaces, this.optionalNamespaces), M3 = Fi2(cr({}, W4[i3]), { accounts: p4, chains: y3 });
      switch (i3) {
        case "eip155":
          this.rpcProviders[i3] = new Jg({ namespace: M3 });
          break;
        case "solana":
          this.rpcProviders[i3] = new Xg({ namespace: M3 });
          break;
        case "cosmos":
          this.rpcProviders[i3] = new Qg({ namespace: M3 });
          break;
        case "polkadot":
          this.rpcProviders[i3] = new Zg({ namespace: M3 });
          break;
        case "cip34":
          this.rpcProviders[i3] = new Vg({ namespace: M3 });
          break;
        case "elrond":
          this.rpcProviders[i3] = new kg({ namespace: M3 });
          break;
        case "multiversx":
          this.rpcProviders[i3] = new jg({ namespace: M3 });
          break;
      }
    });
  }
  registerEventListeners() {
    if (typeof this.client > "u")
      throw new Error("Sign Client is not initialized");
    this.client.on("session_ping", (u4) => {
      this.events.emit("session_ping", u4);
    }), this.client.on("session_event", (u4) => {
      const { params: i3 } = u4, { event: p4 } = i3;
      p4.name === "accountsChanged" ? this.events.emit("accountsChanged", p4.data) : p4.name === "chainChanged" ? this.onChainChanged(i3.chainId) : this.events.emit(p4.name, p4.data), this.events.emit("session_event", u4);
    }), this.client.on("session_update", ({ topic: u4, params: i3 }) => {
      var p4;
      const { namespaces: y3 } = i3, W4 = (p4 = this.client) == null ? void 0 : p4.session.get(u4);
      this.session = Fi2(cr({}, W4), { namespaces: y3 }), this.onSessionUpdate(), this.events.emit("session_update", { topic: u4, params: i3 });
    }), this.client.on("session_delete", async (u4) => {
      await this.cleanup(), this.events.emit("session_delete", u4), this.events.emit("disconnect", Fi2(cr({}, w6("USER_DISCONNECTED")), { data: u4.topic }));
    }), this.on(at3.DEFAULT_CHAIN_CHANGED, (u4) => {
      this.onChainChanged(u4, true);
    });
  }
  getProvider(u4) {
    if (!this.rpcProviders[u4])
      throw new Error(`Provider not found: ${u4}`);
    return this.rpcProviders[u4];
  }
  onSessionUpdate() {
    Object.keys(this.rpcProviders).forEach((u4) => {
      var i3;
      this.getProvider(u4).updateNamespace((i3 = this.session) == null ? void 0 : i3.namespaces[u4]);
    });
  }
  setNamespaces(u4) {
    const { namespaces: i3, optionalNamespaces: p4, sessionProperties: y3 } = u4;
    if (!i3 || !Object.keys(i3).length)
      throw new Error("Namespaces must be not empty");
    this.namespaces = i3, this.optionalNamespaces = p4, this.sessionProperties = y3, this.persist("namespaces", i3), this.persist("optionalNamespaces", p4);
  }
  validateChain(u4) {
    const [i3, p4] = (u4 == null ? void 0 : u4.split(":")) || ["", ""];
    if (i3 && !Object.keys(this.namespaces).map((M3) => Ze3(M3)).includes(i3))
      throw new Error(`Namespace '${i3}' is not configured. Please call connect() first with namespace config.`);
    if (i3 && p4)
      return [i3, p4];
    const y3 = Ze3(Object.keys(this.namespaces)[0]), W4 = this.rpcProviders[y3].getDefaultChain();
    return [y3, W4];
  }
  async requestAccounts() {
    const [u4] = this.validateChain();
    return await this.getProvider(u4).requestAccounts();
  }
  onChainChanged(u4, i3 = false) {
    var p4;
    const [y3, W4] = this.validateChain(u4);
    i3 || this.getProvider(y3).setDefaultChain(W4), ((p4 = this.namespaces[y3]) != null ? p4 : this.namespaces[`${y3}:${W4}`]).defaultChain = W4, this.persist("namespaces", this.namespaces), this.events.emit("chainChanged", W4);
  }
  onConnect() {
    this.createProviders(), this.events.emit("connect", { session: this.session });
  }
  async cleanup() {
    this.session = void 0, await this.cleanupPendingPairings({ deletePairings: true });
  }
  persist(u4, i3) {
    this.client.core.storage.setItem(`${Aa}/${u4}`, i3);
  }
  async getFromStore(u4) {
    return await this.client.core.storage.getItem(`${Aa}/${u4}`);
  }
};
var sv = hr;

// node_modules/@walletconnect/ethereum-provider/dist/index.es.js
var $3 = "wc";
var j6 = "ethereum_provider";
var q3 = `${$3}@2:${j6}:`;
var N12 = "https://rpc.walletconnect.com/v1/";
var p3 = ["eth_sendTransaction", "personal_sign"];
var D = ["eth_accounts", "eth_requestAccounts", "eth_sendRawTransaction", "eth_sign", "eth_signTransaction", "eth_signTypedData", "eth_signTypedData_v3", "eth_signTypedData_v4", "wallet_switchEthereumChain", "wallet_addEthereumChain", "wallet_getPermissions", "wallet_requestPermissions", "wallet_registerOnboarding", "wallet_watchAsset", "wallet_scanQRCode"];
var u3 = ["chainChanged", "accountsChanged"];
var U2 = ["message", "disconnect", "connect"];
var Q3 = Object.defineProperty;
var L2 = Object.defineProperties;
var G3 = Object.getOwnPropertyDescriptors;
var _2 = Object.getOwnPropertySymbols;
var K3 = Object.prototype.hasOwnProperty;
var V2 = Object.prototype.propertyIsEnumerable;
var y2 = (a2, t, s) => t in a2 ? Q3(a2, t, { enumerable: true, configurable: true, writable: true, value: s }) : a2[t] = s;
var C7 = (a2, t) => {
  for (var s in t || (t = {}))
    K3.call(t, s) && y2(a2, s, t[s]);
  if (_2)
    for (var s of _2(t))
      V2.call(t, s) && y2(a2, s, t[s]);
  return a2;
};
var O4 = (a2, t) => L2(a2, G3(t));
function I(a2) {
  return Number(a2[0].split(":")[1]);
}
function w7(a2) {
  return `0x${a2.toString(16)}`;
}
function W3(a2) {
  const { chains: t, optionalChains: s, methods: i3, optionalMethods: n2, events: e, optionalEvents: c3, rpcMap: h2 } = a2;
  if (!j(t))
    throw new Error("Invalid chains");
  const o = t, r = i3 || p3, E3 = e || u3, M3 = { [I(o)]: h2[I(o)] }, f4 = { chains: o, methods: r, events: E3, rpcMap: M3 }, l = e == null ? void 0 : e.filter((g3) => !u3.includes(g3)), d2 = i3 == null ? void 0 : i3.filter((g3) => !p3.includes(g3));
  if (!s && !c3 && !n2 && !(l != null && l.length) && !(d2 != null && d2.length))
    return { required: f4 };
  const b5 = (l == null ? void 0 : l.length) && (d2 == null ? void 0 : d2.length) || !s, A3 = { chains: [...new Set(b5 ? o.concat(s || []) : s)], methods: [...new Set(r.concat(n2 || []))], events: [...new Set(E3.concat(c3 || []))], rpcMap: h2 };
  return { required: f4, optional: A3 };
}
var m3 = class {
  constructor() {
    this.events = new import_events11.EventEmitter(), this.namespace = "eip155", this.accounts = [], this.chainId = 1, this.STORAGE_KEY = q3, this.on = (t, s) => (this.events.on(t, s), this), this.once = (t, s) => (this.events.once(t, s), this), this.removeListener = (t, s) => (this.events.removeListener(t, s), this), this.off = (t, s) => (this.events.off(t, s), this), this.parseAccount = (t) => this.isCompatibleChainId(t) ? this.parseAccountId(t).address : t, this.signer = {}, this.rpc = {};
  }
  static async init(t) {
    const s = new m3();
    return await s.initialize(t), s;
  }
  async request(t) {
    return await this.signer.request(t, this.formatChainId(this.chainId));
  }
  sendAsync(t, s) {
    this.signer.sendAsync(t, s, this.formatChainId(this.chainId));
  }
  get connected() {
    return this.signer.client ? this.signer.client.core.relayer.connected : false;
  }
  get connecting() {
    return this.signer.client ? this.signer.client.core.relayer.connecting : false;
  }
  async enable() {
    return this.session || await this.connect(), await this.request({ method: "eth_requestAccounts" });
  }
  async connect(t) {
    if (!this.signer.client)
      throw new Error("Provider not initialized. Call init() first");
    this.loadConnectOpts(t);
    const { required: s, optional: i3 } = W3(this.rpc);
    try {
      const n2 = await new Promise(async (c3, h2) => {
        var o;
        this.rpc.showQrModal && ((o = this.modal) == null || o.subscribeModal((r) => {
          !r.open && !this.signer.session && (this.signer.abortPairingAttempt(), h2(new Error("Connection request reset. Please try again.")));
        })), await this.signer.connect(O4(C7({ namespaces: { [this.namespace]: s } }, i3 && { optionalNamespaces: { [this.namespace]: i3 } }), { pairingTopic: t == null ? void 0 : t.pairingTopic })).then((r) => {
          c3(r);
        }).catch((r) => {
          h2(new Error(r.message));
        });
      });
      if (!n2)
        return;
      this.setChainIds(this.rpc.chains);
      const e = On(n2.namespaces, [this.namespace]);
      this.setAccounts(e), this.events.emit("connect", { chainId: w7(this.chainId) });
    } catch (n2) {
      throw this.signer.logger.error(n2), n2;
    } finally {
      this.modal && this.modal.closeModal();
    }
  }
  async disconnect() {
    this.session && await this.signer.disconnect(), this.reset();
  }
  get isWalletConnect() {
    return true;
  }
  get session() {
    return this.signer.session;
  }
  registerEventListeners() {
    this.signer.on("session_event", (t) => {
      const { params: s } = t, { event: i3 } = s;
      i3.name === "accountsChanged" ? (this.accounts = this.parseAccounts(i3.data), this.events.emit("accountsChanged", this.accounts)) : i3.name === "chainChanged" ? this.setChainId(this.formatChainId(i3.data)) : this.events.emit(i3.name, i3.data), this.events.emit("session_event", t);
    }), this.signer.on("chainChanged", (t) => {
      const s = parseInt(t);
      this.chainId = s, this.events.emit("chainChanged", w7(this.chainId)), this.persist();
    }), this.signer.on("session_update", (t) => {
      this.events.emit("session_update", t);
    }), this.signer.on("session_delete", (t) => {
      this.reset(), this.events.emit("session_delete", t), this.events.emit("disconnect", O4(C7({}, w("USER_DISCONNECTED")), { data: t.topic, name: "USER_DISCONNECTED" }));
    }), this.signer.on("display_uri", (t) => {
      var s, i3;
      this.rpc.showQrModal && ((s = this.modal) == null || s.closeModal(), (i3 = this.modal) == null || i3.openModal({ uri: t })), this.events.emit("display_uri", t);
    });
  }
  switchEthereumChain(t) {
    this.request({ method: "wallet_switchEthereumChain", params: [{ chainId: t.toString(16) }] });
  }
  isCompatibleChainId(t) {
    return typeof t == "string" ? t.startsWith(`${this.namespace}:`) : false;
  }
  formatChainId(t) {
    return `${this.namespace}:${t}`;
  }
  parseChainId(t) {
    return Number(t.split(":")[1]);
  }
  setChainIds(t) {
    const s = t.filter((i3) => this.isCompatibleChainId(i3)).map((i3) => this.parseChainId(i3));
    s.length && (this.chainId = s[0], this.events.emit("chainChanged", w7(this.chainId)), this.persist());
  }
  setChainId(t) {
    if (this.isCompatibleChainId(t)) {
      const s = this.parseChainId(t);
      this.chainId = s, this.switchEthereumChain(s);
    }
  }
  parseAccountId(t) {
    const [s, i3, n2] = t.split(":");
    return { chainId: `${s}:${i3}`, address: n2 };
  }
  setAccounts(t) {
    this.accounts = t.filter((s) => this.parseChainId(this.parseAccountId(s).chainId) === this.chainId).map((s) => this.parseAccountId(s).address), this.events.emit("accountsChanged", this.accounts);
  }
  getRpcConfig(t) {
    var s, i3;
    return { chains: ((s = t.chains) == null ? void 0 : s.map((n2) => this.formatChainId(n2))) || [`${this.namespace}:1`], optionalChains: t.optionalChains ? t.optionalChains.map((n2) => this.formatChainId(n2)) : void 0, methods: (t == null ? void 0 : t.methods) || p3, events: (t == null ? void 0 : t.events) || u3, optionalMethods: (t == null ? void 0 : t.optionalMethods) || [], optionalEvents: (t == null ? void 0 : t.optionalEvents) || [], rpcMap: (t == null ? void 0 : t.rpcMap) || this.buildRpcMap(t.chains.concat(t.optionalChains || []), t.projectId), showQrModal: !!(t != null && t.showQrModal), qrModalOptions: (i3 = t == null ? void 0 : t.qrModalOptions) != null ? i3 : void 0, projectId: t.projectId, metadata: t.metadata };
  }
  buildRpcMap(t, s) {
    const i3 = {};
    return t.forEach((n2) => {
      i3[n2] = this.getRpcUrl(n2, s);
    }), i3;
  }
  async initialize(t) {
    if (this.rpc = this.getRpcConfig(t), this.chainId = I(this.rpc.chains), this.signer = await sv.init({ projectId: this.rpc.projectId, metadata: this.rpc.metadata, disableProviderPing: t.disableProviderPing, relayUrl: t.relayUrl, storageOptions: t.storageOptions }), this.registerEventListeners(), await this.loadPersistedSession(), this.rpc.showQrModal) {
      let s;
      try {
        const { WalletConnectModal: i3 } = await import("./dist-LW6LY3YL.js");
        s = i3;
      } catch {
        throw new Error("To use QR modal, please install @walletconnect/modal package");
      }
      if (s)
        try {
          this.modal = new s(C7({ walletConnectVersion: 2, projectId: this.rpc.projectId, standaloneChains: this.rpc.chains }, this.rpc.qrModalOptions));
        } catch (i3) {
          throw this.signer.logger.error(i3), new Error("Could not generate WalletConnectModal Instance");
        }
    }
  }
  loadConnectOpts(t) {
    if (!t)
      return;
    const { chains: s, optionalChains: i3, rpcMap: n2 } = t;
    s && j(s) && (this.rpc.chains = s.map((e) => this.formatChainId(e)), s.forEach((e) => {
      this.rpc.rpcMap[e] = (n2 == null ? void 0 : n2[e]) || this.getRpcUrl(e);
    })), i3 && j(i3) && (this.rpc.optionalChains = [], this.rpc.optionalChains = i3 == null ? void 0 : i3.map((e) => this.formatChainId(e)), i3.forEach((e) => {
      this.rpc.rpcMap[e] = (n2 == null ? void 0 : n2[e]) || this.getRpcUrl(e);
    }));
  }
  getRpcUrl(t, s) {
    var i3;
    return ((i3 = this.rpc.rpcMap) == null ? void 0 : i3[t]) || `${N12}?chainId=eip155:${t}&projectId=${s || this.rpc.projectId}`;
  }
  async loadPersistedSession() {
    if (!this.session)
      return;
    const t = await this.signer.client.core.storage.getItem(`${this.STORAGE_KEY}/chainId`), s = this.session.namespaces[`${this.namespace}:${t}`] ? this.session.namespaces[`${this.namespace}:${t}`] : this.session.namespaces[this.namespace];
    this.setChainIds(t ? [this.formatChainId(t)] : s == null ? void 0 : s.accounts), this.setAccounts(s == null ? void 0 : s.accounts);
  }
  reset() {
    this.chainId = 1, this.accounts = [];
  }
  persist() {
    this.session && this.signer.client.core.storage.setItem(`${this.STORAGE_KEY}/chainId`, this.chainId);
  }
  parseAccounts(t) {
    return typeof t == "string" || t instanceof String ? [this.parseAccount(t)] : t.map((s) => this.parseAccount(s));
  }
};
var Y3 = m3;
export {
  Y3 as EthereumProvider,
  U2 as OPTIONAL_EVENTS,
  D as OPTIONAL_METHODS,
  u3 as REQUIRED_EVENTS,
  p3 as REQUIRED_METHODS,
  m3 as default
};
/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
/**
* @license
* Lodash <https://lodash.com/>
* Copyright OpenJS Foundation and other contributors <https://openjsf.org/>
* Released under MIT license <https://lodash.com/license>
* Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
* Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
*/
//# sourceMappingURL=index.es-PJ5UM3DS.js.map
