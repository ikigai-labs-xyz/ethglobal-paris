import type { PropType as __PropType } from 'vue';
declare const _sfc_main: import("vue").DefineComponent<{
    label: {
        type: __PropType<string | undefined>;
        required: false;
        default: string;
    };
    hint: {
        type: __PropType<string | undefined>;
        required: false;
        default: string;
    };
    loading: {
        type: __PropType<boolean | undefined>;
        required: false;
        default: boolean;
    };
    error: {
        type: __PropType<string | undefined>;
        required: false;
        default: string;
    };
    block: {
        type: __PropType<boolean | undefined>;
        required: false;
        default: boolean;
    };
    type: {
        type: __PropType<"number" | "text" | undefined>;
        required: false;
        default: string;
    };
    modelValue: {
        type: __PropType<string | number | undefined>;
        required: false;
        default: string;
    };
    autofocus: {
        type: __PropType<boolean | undefined>;
        required: false;
        default: boolean;
    };
    placeholder: {
        type: __PropType<string | undefined>;
        required: false;
        default: string;
    };
    maxLength: {
        type: __PropType<number | undefined>;
        required: false;
        default: undefined;
    };
    readonly: {
        type: __PropType<boolean | undefined>;
        required: false;
        default: boolean;
    };
    disabled: {
        type: __PropType<boolean | undefined>;
        required: false;
        default: boolean;
    };
    definition: {
        type: __PropType<any>;
        required: false;
        default: {};
    };
}, {
    forceShowError: () => void;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, "update:modelValue"[], "update:modelValue", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    label: {
        type: __PropType<string | undefined>;
        required: false;
        default: string;
    };
    hint: {
        type: __PropType<string | undefined>;
        required: false;
        default: string;
    };
    loading: {
        type: __PropType<boolean | undefined>;
        required: false;
        default: boolean;
    };
    error: {
        type: __PropType<string | undefined>;
        required: false;
        default: string;
    };
    block: {
        type: __PropType<boolean | undefined>;
        required: false;
        default: boolean;
    };
    type: {
        type: __PropType<"number" | "text" | undefined>;
        required: false;
        default: string;
    };
    modelValue: {
        type: __PropType<string | number | undefined>;
        required: false;
        default: string;
    };
    autofocus: {
        type: __PropType<boolean | undefined>;
        required: false;
        default: boolean;
    };
    placeholder: {
        type: __PropType<string | undefined>;
        required: false;
        default: string;
    };
    maxLength: {
        type: __PropType<number | undefined>;
        required: false;
        default: undefined;
    };
    readonly: {
        type: __PropType<boolean | undefined>;
        required: false;
        default: boolean;
    };
    disabled: {
        type: __PropType<boolean | undefined>;
        required: false;
        default: boolean;
    };
    definition: {
        type: __PropType<any>;
        required: false;
        default: {};
    };
}>> & {
    "onUpdate:modelValue"?: ((...args: any[]) => any) | undefined;
}, {
    type: "number" | "text" | undefined;
    loading: boolean | undefined;
    disabled: boolean | undefined;
    modelValue: string | number | undefined;
    label: string | undefined;
    hint: string | undefined;
    definition: any;
    error: string | undefined;
    block: boolean | undefined;
    autofocus: boolean | undefined;
    placeholder: string | undefined;
    maxLength: number | undefined;
    readonly: boolean | undefined;
}>;
export default _sfc_main;
